" --- [ Settings ] ----------------------------------------------------------- "
set number          " Show line numbers
set linebreak       " Break lines at word (requires Wrap lines)
set showbreak=+++\  " Wrap-broken line prefix
set textwidth=80    " Line wrap (number of cols)
set showmatch       " Highlight matching brace

set hlsearch	    " Highlight all search results
set smartcase	    " Enable smart-case search
set ignorecase	    " Always case-insensitive
set incsearch	    " Searches for strings incrementally
 
set autoindent	    " Auto-indent new lines
set expandtab	    " Use spaces instead of tabs
set shiftwidth=2    " Number of auto-indent spaces
set smartindent	    " Enable smart-indent
set smarttab        " Enable smart-tabs
set softtabstop=2   " Number of spaces per Tab
 
set ruler           " Show row and column ruler information
 
set undolevels=1000 " Number of undo levels
set backspace=indent,eol,start	" Backspace behaviour

set cursorline cursorlineopt=screenline " Cursorline doesn't wrap on long lines

" Highlight current row, but only in insert mode
au InsertEnter * set cul 
au InsertLeave * set nocul 

" Keep cursor centered on screen
augroup VCenterCursor
  au!
  au BufEnter,WinEnter,WinNew,VimResized *,*.*
        \ let &scrolloff=winheight(win_getid())/2
augroup END
" --- [ Plugins ] ------------------------------------------------------------ "
call plug#begin() " Plugins
Plug 'mimuki/goyo.vim' " 
Plug 'dracula/vim', { 'as': 'dracula' }
Plug 'ap/vim-css-color'
call plug#end()
" --- [ Theme ] -------------------------------------------------------------- "
let g:dracula_colorterm = 0 " Unset terminal background colour
colorscheme dracula
" --- [ Goyo ] --------------------------------------------------------------- "
" On window resize, if goyo is active, do <c-w>= to resize the window
autocmd VimResized * if exists('#goyo') | exe "normal \<c-w>=" | endif

" :q while in goyo quits vim
function! s:goyo_enter()
  let b:quitting = 0
  let b:quitting_bang = 0
  autocmd QuitPre <buffer> let b:quitting = 1
  cabbrev <buffer> q! let b:quitting_bang = 1 <bar> q!
endfunction

" Quit Vim if this is the only remaining buffer
function! s:goyo_leave()
  if b:quitting && len(filter(range(1, bufnr('$')), 'buflisted(v:val)')) == 1
    if b:quitting_bang
      qa!
    else
      qa
    endif
  endif
endfunction

autocmd! User GoyoEnter call <SID>goyo_enter()
autocmd! User GoyoLeave call <SID>goyo_leave()
