" Settings {{{
set number          " Show line numbers
set linebreak       " Break lines at word (requires Wrap lines)
set showbreak=â€¦\    " Wrap-broken line prefix
set showmatch       " Highlight matching brace

set hlsearch	    " Highlight all search results
set smartcase	    " Enable smart-case search
set ignorecase	    " Always case-insensitive
set incsearch	    " Searches for strings incrementally

set autoindent	    " Auto-indent new lines
set expandtab	    " Use spaces instead of tabs
set shiftwidth=2    " Number of auto-indent spaces
set smartindent	    " Enable smart-indent
set smarttab        " Enable smart-tabs
set softtabstop=2   " Number of spaces per Tab

set ruler           " Show row and column ruler information

set undolevels=1000 " Number of undo levels
set backspace=indent,eol,start	" Backspace behaviour

set cursorline cursorlineopt=screenline

" Keep cursor centered on screen
augroup VCenterCursor
  au!
  au BufEnter,WinEnter,WinNew,VimResized *,*.*
        \ let &scrolloff=winheight(win_getid())/2
augroup END

" }}}
" Plugins {{{
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
call plug#begin() " Plugins
Plug 'mimuki/goyo.vim' " I forked it to suck less
call plug#end()
" }}}
" Theme {{{
" Support all of the colours if you can
if (has("termguicolors"))
  set termguicolors
endif
colorscheme nofrils-acme
" }}}
" Goyo {{{ 
" On window resize, if goyo is active, do <c-w>= to resize the window
autocmd VimResized * if exists('#goyo') | exe "normal \<c-w>=" | endif

" :q while in goyo quits vim
function! s:goyo_enter()
  let b:quitting = 0
  let b:quitting_bang = 0
  autocmd QuitPre <buffer> let b:quitting = 1
  cabbrev <buffer> q! let b:quitting_bang = 1 <bar> q!
endfunction

" Quit Vim if this is the only remaining buffer
function! s:goyo_leave()
  if b:quitting && len(filter(range(1, bufnr('$')), 'buflisted(v:val)')) == 1
    if b:quitting_bang
      qa!
    else
      qa
    endif
  endif
endfunction

autocmd! User GoyoEnter call <SID>goyo_enter()
autocmd! User GoyoLeave call <SID>goyo_leave()
" }}}
" yoinked this from the gruvbox config, it makes the collapsy thingy go
" vim: set sw=2 ts=2 sts=2 et tw=80 ft=vim fdm=marker:
