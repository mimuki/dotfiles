#!/bin/bash  
# Variables
path="$HOME/.local/share/chezmoi/install_scripts" # for scripts
alerts=() # hey this is a heads up
errors=() # hey you fucked up

# Check form factor based on hostname
{{ if eq (len .chezmoi.hostname) 8 }}
# This machine is using the current naming convention! yay!
case ${HOSTNAME:0:1} in
  C) formFactor="console";;
  D) formFactor="desktop";;
  L) formFactor="laptop";;
  P) formFactor="phone";;
  S) formFactor="server";;
  V) formFactor="VM";;
  *) formFactor="unknown";;
esac
{{ else }}
# This machine definitely isn't using our naming convention.
formFactor="unknown"
{{ end }}
 
# Functions

# little helper function for install
# it just sources each variant you ask for with the current scope/mode
# (todo: decide on better names for these things)
function sourceFile {
  source "$path/universal/$flavour/$mode.sh" 

  for variant in "$@"
  do
    source "$path/$variant/$flavour/$mode.sh" 
  done
}

# Sources the relevant files based on form factor
function install {
  flavour=$1 # "core", "extra"
  mode=$2    # "apt", "not-apt"

  case $formFactor in
    console) sourceFile "not_server" "console";;
    desktop) sourceFile "not_server" "desktop";;
    laptop)  sourceFile "not_server" "laptop";;
    phone)   sourceFile "not_server" "phone";;
    server)  sourceFile "server";;
    VM)      sourceFile "not_server" "VM";;
    unknown) sourceFile;;
  esac
}

if [ "$formFactor" = "unknown" ]; then
errors+=("\
║    invalid hostname detected    ║\n\
╠═════════════════════════════════╣\n\
║ This machine's hostname doesn't ║\n\
║ match our standards, and we can ║\n\
║ not apply any customizations    ║\n\
║ based on them. Please fix this! ║\n\
║ Your current hostname is:       ║\n\
╚═════════════════════════════════╝\n\
{{ .chezmoi.hostname }} (length: {{ len .chezmoi.hostname }}, expected: 8)\n\
╔═════════════════════════════════╗\n\
║ If your hostname seems fine...  ║\n\
║ code's haunted, send help.      ║\n")
fi

echo "╔═════════════════════════════════╗"
echo "║  ilo Mimuki's installer script  ║"
echo "╠═════════════════════════════════╣"
echo "║   Are you me? I sure hope so!   ║"
echo "║                                 ║"
echo "║  This has been designed for my  ║"
echo "║ unique accessibility needs, and ║"
echo "║ aesthetic sensibilities. It can ║"
echo "║   and WILL break your system.   ║"
echo "╚═════════════════════════════════╝"
echo ""

# magic stack overflow sauce, left/right aligns with padding
# todo: make pretty box function
function pad () { [ "$#" -gt 1 ] && [ -n "$2" ] && printf "%$2.${2#-}s" "$1"; }

ask() {
read -p "Would you like to $1 (y/n) " choice
case "$choice" in 
  y|Y ) setting=True;;
  n|N ) setting=False;;
  * )   echo "Invalid input! only y or n, please.";setting=False;;
esac
}

ask "continue?"
if [ "$setting" = "False" ]; then
  exit
fi

ask "install/update core software?"
installCore=$setting

ask "install/update additional software?"
installExtra=$setting

echo "╔═════════════════════════════════╗"
echo "║ Tasks to be automated this time ║"
echo "╠═════════════════════════════════╣"
echo "║ * sudo apt-get update           ║"

if [ "$installCore" = "True" ]; then
echo "║ * Install and/or update         ║"
echo "║   essential software            ║"
if [ "$formFactor" != "server" ]; then
if ! [ -x "$(command -v snixembed)" ]; then
echo "║   * Install Talon Voice         ║"
fi
else
if ! [ -x "$(command -v msync)" ]; then
echo "║   * Install msync               ║"
fi
fi
fi
if [ "$installExtra" = "True" ]; then
echo "║ * Install and/or update         ║"
echo "║   additional software           ║"
if ! [ -x "$(command -v fzf)" ]; then
echo "║   * Install fzf                 ║"
fi
if [ ! -d ~/.nvm ]; then
echo "║   * Install nvm                 ║"
fi
fi

echo "╠═════════════════════════════════╣"
echo "║ Form factor: $(pad $formFactor 18) ║"
echo "║ OS: $(pad "{{ .chezmoi.osRelease.id }}" 27) ║"
echo "╚═════════════════════════════════╝"

ask "apply these changes? I won't ask again."
if [ "$setting" = "False" ]; then
  exit
fi

sudo apt-get update

if [ "$installCore" = "True" ]; then
  echo "╔═════════════════════════════════╗"
  echo "║  Installing essential software  ║"
  echo "║           Part 1: apt           ║"
  echo "╚═════════════════════════════════╝"
  install "core" "apt"

  echo "╔═════════════════════════════════╗"
  echo "║  Installing essential software  ║"
  echo "║         Part 2: non-apt         ║"
  echo "╚═════════════════════════════════╝"
  install "core" "not-apt"
fi

if [ "$installExtra" = "True" ]; then
  echo "╔═════════════════════════════════╗"
  echo "║    Installing extra software    ║"
  echo "║           Part 1: apt           ║"
  echo "╚═════════════════════════════════╝"
  install "extra" "apt"

  echo "╔═════════════════════════════════╗"
  echo "║    Installing extra software    ║"
  echo "║         Part 2: non-apt         ║"
  echo "╚═════════════════════════════════╝"
  # Universal
  install "extra" "not-apt"
fi


if [ "${#alerts[@]}" -gt 0 ]
  then
  echo "╔═════════════════════════════════╗"
  echo "║  Manual Intervention Required   ║"
  echo "╠═════════════════════════════════╣"
  echo "║ I am but a humble bash script,  ║"
  echo "║ and need some human help to     ║"
  echo "║ finish things up. Please make   ║"
  echo "║ sure you do this stuff for me.  ║"
  echo "╚═════════════════════════════════╝"
  for i in "${alerts[@]}"; do
    echo "╔═════════════════════════════════╗"
    printf "$i"
    echo "╚═════════════════════════════════╝"
  done
fi
if [ "${#errors[@]}" -gt 0 ]
  then
  echo "╔═════════════════════════════════╗"
  echo "║      Major errors occured!      ║"
  echo "╠═════════════════════════════════╣"
  echo "║ This stuff needs dealing with   ║"
  echo "║ as soon as possible. (TODO: add ║"
  echo "║ more error stuff here, lol)     ║"
  echo "╚═════════════════════════════════╝"
  for i in "${errors[@]}"; do
    echo "╔═════════════════════════════════╗"
    printf "$i"
    echo "╚═════════════════════════════════╝"
  done
fi 
echo "           ╔═══════════╗"
echo "           ║ All done! ║"
echo "           ╚═══════════╝"
