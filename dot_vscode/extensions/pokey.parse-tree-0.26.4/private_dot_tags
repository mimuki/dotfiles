!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/ee1d15d/
!~	examples/ruby/declarations.rb	/^def !~(a)$/;"	f	language:Ruby
$(addprefix $(WEB_TREE_SITTER_DIR)/,$(WEB_TREE_SITTER_FILES))	Makefile	/^$(addprefix $(WEB_TREE_SITTER_DIR)\/,$(WEB_TREE_SITTER_FILES)):$/;"	t	language:Make
$schema	textmate/cpp.tmLanguage.json	/^	"$schema": "https:\/\/raw.githubusercontent.com\/martinring\/tmlanguage\/master\/tmlanguage.jso/;"	s	language:JSON
$schema	textmate/go.tmLanguage.json	/^	"$schema": "https:\/\/raw.githubusercontent.com\/martinring\/tmlanguage\/master\/tmlanguage.jso/;"	s	language:JSON
$schema	textmate/ruby.tmLanguage.json	/^    "$schema": "https:\/\/raw.githubusercontent.com\/martinring\/tmlanguage\/master\/tmlanguage./;"	s	language:JSON
$schema	textmate/rust.tmLanguage.json	/^	"$schema": "https:\/\/raw.githubusercontent.com\/martinring\/tmlanguage\/master\/tmlanguage.jso/;"	s	language:JSON
$schema	textmate/typescript.tmLanguage.json	/^	"$schema": "https:\/\/raw.githubusercontent.com\/martinring\/tmlanguage\/master\/tmlanguage.jso/;"	s	language:JSON
%	examples/ruby/declarations.rb	/^def %(a)$/;"	f	language:Ruby
-1,6 +1,6	patches/tree-sitter+0.20.4.patch	/^@@ -1,6 +1,6 @@$/;"	h	language:Diff	modifiedFile:a/lib/binding_web/package.json
-4,6 +4,8	patches/tree-sitter+0.20.4.patch	/^@@ -4,6 +4,8 @@$/;"	h	language:Diff	modifiedFile:a/lib/binding_web/exports.json
-@	examples/ruby/declarations.rb	/^def -@(a)$/;"	f	language:Ruby
/	examples/ruby/declarations.rb	/^def \/ name$/;"	f	language:Ruby
/	examples/ruby/declarations.rb	/^def \/(name)$/;"	f	language:Ruby
0	package.json	/^    "Programming Languages",$/;"	s	language:JSON	array:categories
0	package.json	/^    "onLanguage:agda",$/;"	s	language:JSON	array:activationEvents
0	package.json	/^    "ui",$/;"	s	language:JSON	array:extensionKind
0	package.json	/^    "web-tree-sitter"$/;"	s	language:JSON	array:bundledDependencies
0	textmate/cpp.tmLanguage.json	/^										{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^										{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns.5.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.comments.patterns.4.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3.beginCaptures
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.comments.patterns.4.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns.0.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns.0.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns.0.patterns.4.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns.6.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns.5.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns.6.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns.4.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns.2.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns.3.patterns
0	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns.4.patterns
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:patterns.9.patterns.1.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:patterns.9.patterns.1.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:patterns.9.patterns.2.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:patterns.9.patterns.2.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.comments.patterns.1.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.comments.patterns.1.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.1.captures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.1.captures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.strings.patterns.0.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.strings.patterns.0.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.strings.patterns.1.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.strings.patterns.1.endCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.strings.patterns.2.beginCaptures
0	textmate/cpp.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.strings.patterns.2.endCaptures
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.comments.patterns.4.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns.5.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns.9.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-blocks.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns.1.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns.4.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns.5.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-functions.patterns.4.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-functions.patterns.5.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-elif.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-elif.patterns.2.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns.2.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.strings.patterns.1.patterns
0	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.strings.patterns.2.patterns
0	textmate/cpp.tmLanguage.json	/^				"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-elif.beginCaptures
0	textmate/cpp.tmLanguage.json	/^				"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.beginCaptures
0	textmate/cpp.tmLanguage.json	/^				"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.beginCaptures
0	textmate/cpp.tmLanguage.json	/^				"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-else-block.beginCaptures
0	textmate/cpp.tmLanguage.json	/^				"0": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-else.beginCaptures
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:patterns.8.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:patterns.9.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.constants.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.line_continuation_character.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.numbers.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-blocks.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-functions.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-elif.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-else-block.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-else.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.string_escaped_char.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.string_placeholder.patterns
0	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.strings.patterns
0	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
0	textmate/go.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.runes.patterns.0.patterns
0	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:patterns.1.patterns
0	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:patterns.2.patterns
0	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
0	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
0	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
0	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.runes.patterns
0	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.string_escaped_char.patterns
0	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.string_placeholder.patterns
0	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.1.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.1.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.1.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.1.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.symbol.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository.angles.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository.braces.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository.brackets.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository.parens.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.1.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.1.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.1.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.1.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.string.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository.angles.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository.braces.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository.brackets.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository.parens.patterns.0.captures
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.angles.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.braces.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.brackets.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.parens.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.angles.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.braces.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.brackets.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.parens.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.symbol.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.angles.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.braces.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.brackets.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.parens.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.angles.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.braces.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.brackets.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.parens.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.angles.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.braces.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.brackets.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.parens.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.angles.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.braces.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.brackets.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.parens.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.angles.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.braces.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.brackets.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.parens.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.angles.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.braces.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.brackets.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.parens.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.string.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.angles.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.braces.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.brackets.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.parens.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.angles.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.braces.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.brackets.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.parens.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.symbol.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.angles.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.braces.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.brackets.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.parens.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.symbol.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.angles.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.braces.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.brackets.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.parens.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.angles.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.braces.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.brackets.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.parens.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.angles.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.braces.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.brackets.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.parens.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.angles.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.braces.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.brackets.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.parens.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.angles.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.braces.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.brackets.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.parens.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.string.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.angles.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.braces.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.brackets.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.parens.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.string.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.angles.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.braces.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.brackets.patterns
0	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.parens.patterns
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.21.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.21.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.22.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.22.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.23.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.23.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.24.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.24.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.25.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.25.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.26.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.26.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.27.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.27.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.28.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.28.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.29.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.29.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.30.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.30.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.31.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:patterns.31.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.2.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.2.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.3.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.3.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.4.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.4.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.5.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.5.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.8.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.8.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.3.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.3.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.4.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.4.endCaptures
0	textmate/ruby.tmLanguage.json	/^                        "0": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.5.captures
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.20.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.21.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.22.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.23.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.24.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.25.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.26.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.27.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.28.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.29.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.30.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.31.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.interpolated_ruby.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.regex_sub.patterns.3.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.regex_sub.patterns.4.patterns
0	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.regex_sub.patterns.5.patterns
0	textmate/ruby.tmLanguage.json	/^                "0": {$/;"	o	language:JSON	object:patterns.20.captures
0	textmate/ruby.tmLanguage.json	/^                "0": {$/;"	o	language:JSON	object:patterns.32.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                "0": {$/;"	o	language:JSON	object:patterns.32.endCaptures
0	textmate/ruby.tmLanguage.json	/^                "0": {$/;"	o	language:JSON	object:patterns.33.beginCaptures
0	textmate/ruby.tmLanguage.json	/^                "0": {$/;"	o	language:JSON	object:patterns.33.endCaptures
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.12.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.13.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.14.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.16.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.18.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.20.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.21.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.22.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.23.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.24.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.25.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.26.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.27.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.28.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.29.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.30.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.31.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.32.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.33.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.34.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.heredoc.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.interpolated_ruby.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.percent_literals.patterns
0	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.regex_sub.patterns
0	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
0	textmate/rust.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.attribute.patterns.0.beginCaptures
0	textmate/rust.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.attribute.patterns.0.endCaptures
0	textmate/rust.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.metaItem.patterns.0.beginCaptures
0	textmate/rust.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.metaItem.patterns.0.endCaptures
0	textmate/rust.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.attribute.patterns.0.patterns
0	textmate/rust.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.block_comment.patterns.0.patterns
0	textmate/rust.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.block_doc_comment.patterns.0.patterns
0	textmate/rust.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.code.patterns.0.patterns
0	textmate/rust.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.literals.patterns.9.patterns
0	textmate/rust.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.metaItem.patterns.0.patterns
0	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.attribute.patterns
0	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.block_comment.patterns
0	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.block_doc_comment.patterns
0	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.code.patterns
0	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
0	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.escaped_character.patterns
0	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
0	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
0	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.metaItem.patterns
0	textmate/rust.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
0	textmate/typescript.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.docblock.patterns.1.captures
0	textmate/typescript.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.docblock.patterns.2.captures
0	textmate/typescript.tmLanguage.json	/^						"0": {$/;"	o	language:JSON	object:repository.numeric-literal.patterns.3.captures
0	textmate/typescript.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.comment.patterns.0.patterns
0	textmate/typescript.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.comment.patterns.2.patterns
0	textmate/typescript.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.regex.patterns.0.patterns
0	textmate/typescript.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.regex.patterns.1.patterns
0	textmate/typescript.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.regexp.patterns.4.patterns
0	textmate/typescript.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.regexp.patterns.5.patterns
0	textmate/typescript.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.regexp.patterns.6.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comment.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.decorator.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.docblock.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.expression.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keyword.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literal.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.numeric-literal.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.numericConstant-literal.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.qstring-double.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.qstring-single.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regex-character-class.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regex.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regexp.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.string.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.template-substitution-element.patterns
0	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.template.patterns
0	textmate/typescript.tmLanguage.json	/^		"ts",$/;"	s	language:JSON	array:fileTypes
0	textmate/typescript.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
0	tsconfig.json	/^			"es2020"$/;"	s	language:JSON	array:compilerOptions.lib
0	tsconfig.json	/^		".make-work",$/;"	s	language:JSON	array:exclude
1	examples/javascript/expressions.js	/^var x = { c: "d", "e": f, 1: 2 };$/;"	p	language:JavaScript	class:x
1	package.json	/^    "Themes",$/;"	s	language:JSON	array:categories
1	package.json	/^    "onLanguage:c",$/;"	s	language:JSON	array:activationEvents
1	package.json	/^    "workspace"$/;"	s	language:JSON	array:extensionKind
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3.beginCaptures
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns.6.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns.5.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns.6.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns.2.patterns
1	textmate/cpp.tmLanguage.json	/^								{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns.3.patterns
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.comments.patterns.0.captures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.comments.patterns.3.captures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.comments.patterns.4.beginCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.keywords.patterns.0.captures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.keywords.patterns.1.captures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.keywords.patterns.2.captures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.keywords.patterns.3.captures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.line_continuation_character.patterns.0.captures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.beginCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.endCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.beginCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.endCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4.endCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5.endCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.beginCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.endCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.beginCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.endCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.beginCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.endCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.beginCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.endCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.string_placeholder.patterns.1.captures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.strings.patterns.0.beginCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.strings.patterns.0.endCaptures
1	textmate/cpp.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.strings.patterns.1.beginCaptures
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns.0.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns.0.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-blocks.patterns.0.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns.4.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns.5.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-elif.patterns.2.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns.2.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.strings.patterns.1.patterns
1	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.strings.patterns.2.patterns
1	textmate/cpp.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:patterns.8.beginCaptures
1	textmate/cpp.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:patterns.9.beginCaptures
1	textmate/cpp.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-elif.beginCaptures
1	textmate/cpp.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.beginCaptures
1	textmate/cpp.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.beginCaptures
1	textmate/cpp.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-else-block.beginCaptures
1	textmate/cpp.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-else.beginCaptures
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:patterns.9.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-blocks.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-functions.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-elif.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.string_escaped_char.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.string_placeholder.patterns
1	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.strings.patterns
1	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
1	textmate/go.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.runes.patterns.0.patterns
1	textmate/go.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:patterns.3.captures
1	textmate/go.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:patterns.4.captures
1	textmate/go.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:patterns.5.captures
1	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:patterns.1.patterns
1	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
1	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
1	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
1	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.string_escaped_char.patterns
1	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.angles.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.braces.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.brackets.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.parens.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.angles.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.braces.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.brackets.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.parens.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.symbol.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.angles.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.braces.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.brackets.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.parens.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.angles.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.braces.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.brackets.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.parens.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.string.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns.2.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns.3.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.angles.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.braces.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.brackets.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.parens.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.repository.symbol.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns.2.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns.3.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.repository.symbol.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.angles.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.braces.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.brackets.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.repository.parens.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.angles.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.braces.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.brackets.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.parens.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.angles.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.braces.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.brackets.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.repository.parens.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.angles.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.braces.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.brackets.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.repository.parens.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns.2.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns.3.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.angles.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.braces.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.brackets.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.parens.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.repository.string.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns.2.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns.3.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.repository.string.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.angles.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.braces.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.brackets.patterns
1	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.parens.patterns
1	textmate/ruby.tmLanguage.json	/^                        "1": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.0.endCaptures
1	textmate/ruby.tmLanguage.json	/^                        "1": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.1.captures
1	textmate/ruby.tmLanguage.json	/^                        "1": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.2.captures
1	textmate/ruby.tmLanguage.json	/^                        "1": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.3.captures
1	textmate/ruby.tmLanguage.json	/^                        "1": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.2.captures
1	textmate/ruby.tmLanguage.json	/^                        "1": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.6.beginCaptures
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.21.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.22.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.23.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.24.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.25.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.26.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.27.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.28.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.29.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.30.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.31.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.interpolated_ruby.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns
1	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns
1	textmate/ruby.tmLanguage.json	/^                "1": {$/;"	o	language:JSON	object:patterns.16.captures
1	textmate/ruby.tmLanguage.json	/^                "1": {$/;"	o	language:JSON	object:patterns.18.beginCaptures
1	textmate/ruby.tmLanguage.json	/^                "1": {$/;"	o	language:JSON	object:patterns.34.captures
1	textmate/ruby.tmLanguage.json	/^                "1": {$/;"	o	language:JSON	object:patterns.41.captures
1	textmate/ruby.tmLanguage.json	/^                "1": {$/;"	o	language:JSON	object:patterns.47.captures
1	textmate/ruby.tmLanguage.json	/^                "1": {$/;"	o	language:JSON	object:patterns.48.captures
1	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.13.patterns
1	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.14.patterns
1	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.32.patterns
1	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.33.patterns
1	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.34.patterns
1	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.interpolated_ruby.patterns
1	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.percent_literals.patterns
1	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.regex_sub.patterns
1	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
1	textmate/rust.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.block_comment.patterns.0.patterns
1	textmate/rust.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.block_doc_comment.patterns.0.patterns
1	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.code.patterns
1	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
1	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
1	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
1	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.metaItem.patterns
1	textmate/rust.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
1	textmate/typescript.tmLanguage.json	/^								"1": {$/;"	o	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures
1	textmate/typescript.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.docblock.patterns.2.captures
1	textmate/typescript.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.keyword.patterns.0.captures
1	textmate/typescript.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.keyword.patterns.1.captures
1	textmate/typescript.tmLanguage.json	/^						"1": {$/;"	o	language:JSON	object:repository.numeric-literal.patterns.3.captures
1	textmate/typescript.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.regexp.patterns.6.patterns
1	textmate/typescript.tmLanguage.json	/^				"1": {$/;"	o	language:JSON	object:repository.template.beginCaptures
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comment.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.docblock.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.expression.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keyword.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literal.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.numeric-literal.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.numericConstant-literal.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regex-character-class.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regex.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regexp.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.string.patterns
1	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.template.patterns
1	textmate/typescript.tmLanguage.json	/^		"js"$/;"	s	language:JSON	array:fileTypes
1	tsconfig.json	/^		".vscode-test",$/;"	s	language:JSON	array:exclude
10	package.json	/^    "onLanguage:html",$/;"	s	language:JSON	array:activationEvents
10	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
10	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
10	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
10	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
11	package.json	/^    "onLanguage:java",$/;"	s	language:JSON	array:activationEvents
11	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
11	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
11	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
12	package.json	/^    "onLanguage:javascript",$/;"	s	language:JSON	array:activationEvents
12	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
12	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
12	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
13	package.json	/^    "onLanguage:javascriptreact",$/;"	s	language:JSON	array:activationEvents
13	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
14	package.json	/^    "onLanguage:json",$/;"	s	language:JSON	array:activationEvents
14	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
15	package.json	/^    "onLanguage:jsonc",$/;"	s	language:JSON	array:activationEvents
15	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
16	package.json	/^    "onLanguage:kotlin",$/;"	s	language:JSON	array:activationEvents
16	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
17	package.json	/^    "onLanguage:latex",$/;"	s	language:JSON	array:activationEvents
17	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
18	package.json	/^    "onLanguage:markdown",$/;"	s	language:JSON	array:activationEvents
18	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
19	package.json	/^    "onLanguage:php",$/;"	s	language:JSON	array:activationEvents
19	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
2	package.json	/^    "Other"$/;"	s	language:JSON	array:categories
2	package.json	/^    "onLanguage:clojure",$/;"	s	language:JSON	array:activationEvents
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2.beginCaptures
2	textmate/cpp.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3.beginCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.beginCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.endCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.beginCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.endCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4.beginCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.beginCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.endCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.beginCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.endCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.beginCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.endCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.beginCaptures
2	textmate/cpp.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.endCaptures
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns.0.patterns
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns.0.patterns
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns.4.patterns
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns.2.patterns
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns
2	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.strings.patterns.1.patterns
2	textmate/cpp.tmLanguage.json	/^				"2": {$/;"	o	language:JSON	object:patterns.8.beginCaptures
2	textmate/cpp.tmLanguage.json	/^				"2": {$/;"	o	language:JSON	object:patterns.9.beginCaptures
2	textmate/cpp.tmLanguage.json	/^				"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-elif.beginCaptures
2	textmate/cpp.tmLanguage.json	/^				"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.beginCaptures
2	textmate/cpp.tmLanguage.json	/^				"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.beginCaptures
2	textmate/cpp.tmLanguage.json	/^				"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-else-block.beginCaptures
2	textmate/cpp.tmLanguage.json	/^				"2": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-else.beginCaptures
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:patterns.9.patterns
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-functions.patterns
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-elif.patterns
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif-block.patterns
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-elif.patterns
2	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.strings.patterns
2	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
2	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
2	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
2	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
2	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.angles.patterns
2	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.braces.patterns
2	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.brackets.patterns
2	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.repository.parens.patterns
2	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.angles.patterns
2	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.braces.patterns
2	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.brackets.patterns
2	textmate/ruby.tmLanguage.json	/^                                {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.repository.parens.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.21.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.22.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.23.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.24.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.25.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.26.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.27.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.28.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.29.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.30.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.31.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns
2	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns
2	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.32.patterns
2	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.33.patterns
2	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:patterns.34.patterns
2	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.interpolated_ruby.patterns
2	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.percent_literals.patterns
2	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.regex_sub.patterns
2	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
2	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.code.patterns
2	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
2	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
2	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
2	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.metaItem.patterns
2	textmate/typescript.tmLanguage.json	/^								"2": {$/;"	o	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures
2	textmate/typescript.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.docblock.patterns.1.captures
2	textmate/typescript.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.docblock.patterns.2.captures
2	textmate/typescript.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.numeric-literal.patterns.3.captures
2	textmate/typescript.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.regex.patterns.0.endCaptures
2	textmate/typescript.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.regex.patterns.1.endCaptures
2	textmate/typescript.tmLanguage.json	/^						"2": {$/;"	o	language:JSON	object:repository.regexp.patterns.6.beginCaptures
2	textmate/typescript.tmLanguage.json	/^				"2": {$/;"	o	language:JSON	object:repository.qstring-double.endCaptures
2	textmate/typescript.tmLanguage.json	/^				"2": {$/;"	o	language:JSON	object:repository.qstring-single.endCaptures
2	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comment.patterns
2	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.docblock.patterns
2	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.expression.patterns
2	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keyword.patterns
2	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literal.patterns
2	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.numeric-literal.patterns
2	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regex-character-class.patterns
2	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regexp.patterns
2	tsconfig.json	/^		"examples",$/;"	s	language:JSON	array:exclude
20	package.json	/^    "onLanguage:python",$/;"	s	language:JSON	array:activationEvents
20	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
21	package.json	/^    "onLanguage:ruby",$/;"	s	language:JSON	array:activationEvents
21	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
22	package.json	/^    "onLanguage:rust",$/;"	s	language:JSON	array:activationEvents
22	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
23	package.json	/^    "onLanguage:scala",$/;"	s	language:JSON	array:activationEvents
23	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
24	package.json	/^    "onLanguage:scm",$/;"	s	language:JSON	array:activationEvents
24	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
25	package.json	/^    "onLanguage:scss",$/;"	s	language:JSON	array:activationEvents
25	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
26	package.json	/^    "onLanguage:shellscript",$/;"	s	language:JSON	array:activationEvents
26	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
27	package.json	/^    "onLanguage:sparql",$/;"	s	language:JSON	array:activationEvents
27	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
28	package.json	/^    "onLanguage:starlark",$/;"	s	language:JSON	array:activationEvents
28	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
29	package.json	/^    "onLanguage:talon",$/;"	s	language:JSON	array:activationEvents
29	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
3	package.json	/^    "onLanguage:cpp",$/;"	s	language:JSON	array:activationEvents
3	textmate/cpp.tmLanguage.json	/^						"3": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.beginCaptures
3	textmate/cpp.tmLanguage.json	/^						"3": {$/;"	o	language:JSON	object:repository.strings.patterns.0.beginCaptures
3	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns.0.patterns
3	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns.0.patterns
3	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns
3	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns
3	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns
3	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns
3	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
3	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
3	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
3	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns
3	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-functions.patterns
3	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
3	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
3	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
3	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
3	textmate/ruby.tmLanguage.json	/^                        "3": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.2.captures
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.21.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.22.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.23.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.24.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.25.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.26.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.27.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.28.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.29.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.30.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:patterns.31.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.2.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.5.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns
3	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns
3	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.interpolated_ruby.patterns
3	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.percent_literals.patterns
3	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.regex_sub.patterns
3	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
3	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.code.patterns
3	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
3	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
3	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
3	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.metaItem.patterns
3	textmate/typescript.tmLanguage.json	/^								"3": {$/;"	o	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures
3	textmate/typescript.tmLanguage.json	/^						"3": {$/;"	o	language:JSON	object:repository.docblock.patterns.1.captures
3	textmate/typescript.tmLanguage.json	/^						"3": {$/;"	o	language:JSON	object:repository.numeric-literal.patterns.3.captures
3	textmate/typescript.tmLanguage.json	/^						"3": {$/;"	o	language:JSON	object:repository.regexp.patterns.4.beginCaptures
3	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.expression.patterns
3	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keyword.patterns
3	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literal.patterns
3	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.numeric-literal.patterns
3	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regex-character-class.patterns
3	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regexp.patterns
3	tsconfig.json	/^		"node_modules",$/;"	s	language:JSON	array:exclude
30	package.json	/^    "onLanguage:typescript",$/;"	s	language:JSON	array:activationEvents
30	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
31	package.json	/^    "onLanguage:typescriptreact",$/;"	s	language:JSON	array:activationEvents
31	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
32	package.json	/^    "onLanguage:xml",$/;"	s	language:JSON	array:activationEvents
32	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
33	package.json	/^    "onLanguage:xaml",$/;"	s	language:JSON	array:activationEvents
33	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
34	package.json	/^    "onLanguage:yaml"$/;"	s	language:JSON	array:activationEvents
34	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
35	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
36	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
37	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
38	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
39	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
4	package.json	/^    "onLanguage:css",$/;"	s	language:JSON	array:activationEvents
4	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns.0.patterns
4	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns.0.patterns
4	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns
4	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns
4	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled-block.patterns.0.patterns
4	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-enabled.patterns.0.patterns
4	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.comments.patterns
4	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
4	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
4	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns
4	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-functions.patterns
4	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
4	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
4	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
4	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
4	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.0.patterns
4	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.1.patterns
4	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns
4	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.4.patterns
4	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.6.patterns
4	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.7.patterns
4	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns
4	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.percent_literals.patterns
4	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.regex_sub.patterns
4	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
4	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.code.patterns
4	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
4	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
4	textmate/typescript.tmLanguage.json	/^								"4": {$/;"	o	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures
4	textmate/typescript.tmLanguage.json	/^						"4": {$/;"	o	language:JSON	object:repository.numeric-literal.patterns.3.captures
4	textmate/typescript.tmLanguage.json	/^						"4": {$/;"	o	language:JSON	object:repository.regexp.patterns.4.beginCaptures
4	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.expression.patterns
4	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keyword.patterns
4	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literal.patterns
4	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regexp.patterns
4	tsconfig.json	/^		"vendor"$/;"	s	language:JSON	array:exclude
40	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
41	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
42	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
43	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
44	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
45	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
46	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
47	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
48	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
49	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
5	package.json	/^    "onLanguage:csharp",$/;"	s	language:JSON	array:activationEvents
5	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-block.patterns.0.patterns
5	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional.patterns.0.patterns
5	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns
5	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns
5	textmate/cpp.tmLanguage.json	/^				"5": {$/;"	o	language:JSON	object:patterns.8.beginCaptures
5	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
5	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns
5	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-functions.patterns
5	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
5	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
5	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
5	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
5	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.3.patterns
5	textmate/ruby.tmLanguage.json	/^                        {$/;"	o	language:JSON	array:repository.percent_literals.patterns.8.patterns
5	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.percent_literals.patterns
5	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.regex_sub.patterns
5	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
5	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
5	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
5	textmate/typescript.tmLanguage.json	/^								"5": {$/;"	o	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures
5	textmate/typescript.tmLanguage.json	/^						"5": {$/;"	o	language:JSON	object:repository.numeric-literal.patterns.3.captures
5	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.expression.patterns
5	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regexp.patterns
50	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
51	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
52	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
53	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
54	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
6	package.json	/^    "onLanguage:elm",$/;"	s	language:JSON	array:activationEvents
6	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled-block.patterns.0.patterns
6	textmate/cpp.tmLanguage.json	/^						{$/;"	o	language:JSON	array:repository.preprocessor-rule-disabled.patterns.0.patterns
6	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
6	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns
6	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-functions.patterns
6	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
6	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
6	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
6	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
6	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.percent_literals.patterns
6	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.regex_sub.patterns
6	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
6	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
6	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
6	textmate/typescript.tmLanguage.json	/^								"6": {$/;"	o	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures
6	textmate/typescript.tmLanguage.json	/^						"6": {$/;"	o	language:JSON	object:repository.numeric-literal.patterns.3.captures
6	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.expression.patterns
6	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regexp.patterns
7	package.json	/^    "onLanguage:elixir",$/;"	s	language:JSON	array:activationEvents
7	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
7	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns
7	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
7	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
7	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
7	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
7	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.percent_literals.patterns
7	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
7	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
7	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
7	textmate/typescript.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.regexp.patterns
8	package.json	/^    "onLanguage:go",$/;"	s	language:JSON	array:activationEvents
8	textmate/cpp.tmLanguage.json	/^				"8": {$/;"	o	language:JSON	object:patterns.8.beginCaptures
8	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
8	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-define-line-contents.patterns
8	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
8	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
8	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
8	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
8	textmate/ruby.tmLanguage.json	/^                {$/;"	o	language:JSON	array:repository.percent_literals.patterns
8	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
8	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
8	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
9	package.json	/^    "onLanguage:haskell",$/;"	s	language:JSON	array:activationEvents
9	textmate/cpp.tmLanguage.json	/^				"9": {$/;"	o	language:JSON	object:patterns.8.beginCaptures
9	textmate/cpp.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.preprocessor-rule-conditional-line.patterns
9	textmate/cpp.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
9	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.keywords.patterns
9	textmate/go.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.operators.patterns
9	textmate/go.tmLanguage.json	/^		{$/;"	o	language:JSON	array:patterns
9	textmate/ruby.tmLanguage.json	/^        {$/;"	o	language:JSON	array:patterns
9	textmate/rust.tmLanguage.json	/^				{$/;"	o	language:JSON	array:repository.literals.patterns
@elm-tooling/tree-sitter-elm	package.json	/^    "@elm-tooling\/tree-sitter-elm": "github:elm-tooling\/tree-sitter-elm#0aecfbf69f0c9bcdfada0f/;"	s	language:JSON	object:devDependencies
@types/mocha	package.json	/^    "@types\/mocha": "^2.2.42",$/;"	s	language:JSON	object:devDependencies
@types/node	package.json	/^    "@types\/node": "^8.10.25",$/;"	s	language:JSON	object:devDependencies
@types/vscode	package.json	/^    "@types\/vscode": "~1.58.0",$/;"	s	language:JSON	object:devDependencies
@typescript-eslint/eslint-plugin	package.json	/^    "@typescript-eslint\/eslint-plugin": "^5.20.0",$/;"	s	language:JSON	object:devDependencies
@typescript-eslint/parser	package.json	/^    "@typescript-eslint\/parser": "^5.20.0",$/;"	s	language:JSON	object:devDependencies
@vscode/test-electron	package.json	/^    "@vscode\/test-electron": "^2.1.3"$/;"	s	language:JSON	object:devDependencies
A	examples/ruby/declarations.rb	/^module A$/;"	m	language:Ruby
Add	examples/rust/ast.rs	/^    Add,$/;"	e	language:Rust	enum:BinOpKind
Addr	examples/go/value.go	/^func (v Value) Addr() Value {$/;"	f	language:Go
AddrOf	examples/rust/ast.rs	/^    AddrOf(Mutability, P<Expr>),$/;"	e	language:Rust	enum:ExprKind
And	examples/rust/ast.rs	/^    And,$/;"	e	language:Rust	enum:BinOpKind
AngleBracketed	examples/rust/ast.rs	/^    AngleBracketed(AngleBracketedParameterData),$/;"	e	language:Rust	enum:PathParameters
AngleBracketedParameterData	examples/rust/ast.rs	/^impl Into<Option<P<PathParameters>>> for AngleBracketedParameterData {$/;"	c	language:Rust
AngleBracketedParameterData	examples/rust/ast.rs	/^pub struct AngleBracketedParameterData {$/;"	s	language:Rust
AnonymousFunction22db21a70100	examples/javascript/expressions.js	/^return this.map(function (a) {$/;"	f	language:JavaScript
AnonymousFunction22db21a70200	examples/javascript/expressions.js	/^.filter(function (c) {$/;"	f	language:JavaScript
Append	examples/go/value.go	/^func Append(s Value, x ...Value) Value {$/;"	f	language:Go
AppendSlice	examples/go/value.go	/^func AppendSlice(s, t Value) Value {$/;"	f	language:Go
Arg	examples/rust/ast.rs	/^impl Arg {$/;"	c	language:Rust
Arg	examples/rust/ast.rs	/^pub struct Arg {$/;"	s	language:Rust
Arm	examples/rust/ast.rs	/^pub struct Arm {$/;"	s	language:Rust
Array	examples/rust/ast.rs	/^    Array(P<Ty>, P<Expr>),$/;"	e	language:Rust	enum:TyKind
Array	examples/rust/ast.rs	/^    Array(Vec<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
AsmDialect	examples/rust/ast.rs	/^pub enum AsmDialect {$/;"	g	language:Rust
Assign	examples/rust/ast.rs	/^    Assign(P<Expr>, P<Expr>),$/;"	e	language:Rust	enum:ExprKind
AssignOp	examples/rust/ast.rs	/^    AssignOp(BinOp, P<Expr>, P<Expr>),$/;"	e	language:Rust	enum:ExprKind
Att	examples/rust/ast.rs	/^    Att,$/;"	e	language:Rust	enum:AsmDialect
AttrId	examples/rust/ast.rs	/^pub struct AttrId(pub usize);$/;"	s	language:Rust
AttrStyle	examples/rust/ast.rs	/^pub enum AttrStyle {$/;"	g	language:Rust
Attribute	examples/rust/ast.rs	/^pub struct Attribute {$/;"	s	language:Rust
B	examples/ruby/declarations.rb	/^  class B < C$/;"	c	language:Ruby	module:A
Bar	examples/ruby/declarations.rb	/^class ::Foo::Bar$/;"	c	language:Ruby	module:.Foo
Bar	examples/ruby/declarations.rb	/^class Foo::Bar$/;"	c	language:Ruby	module:Foo
Bar	examples/ruby/declarations.rb	/^module Foo::Bar$/;"	m	language:Ruby	module:Foo
BareFn	examples/rust/ast.rs	/^    BareFn(P<BareFnTy>),$/;"	e	language:Rust	enum:TyKind
BareFnTy	examples/rust/ast.rs	/^pub struct BareFnTy {$/;"	s	language:Rust
BinOp	examples/rust/ast.rs	/^pub type BinOp = Spanned<BinOpKind>;$/;"	t	language:Rust
BinOpKind	examples/rust/ast.rs	/^impl BinOpKind {$/;"	c	language:Rust
BinOpKind	examples/rust/ast.rs	/^pub enum BinOpKind {$/;"	g	language:Rust
Binary	examples/rust/ast.rs	/^    Binary(BinOp, P<Expr>, P<Expr>),$/;"	e	language:Rust	enum:ExprKind
BindingMode	examples/rust/ast.rs	/^pub enum BindingMode {$/;"	g	language:Rust
BitAnd	examples/rust/ast.rs	/^    BitAnd,$/;"	e	language:Rust	enum:BinOpKind
BitOr	examples/rust/ast.rs	/^    BitOr,$/;"	e	language:Rust	enum:BinOpKind
BitXor	examples/rust/ast.rs	/^    BitXor,$/;"	e	language:Rust	enum:BinOpKind
Block	examples/rust/ast.rs	/^    Block(P<Block>),$/;"	e	language:Rust	enum:ExprKind
Block	examples/rust/ast.rs	/^pub struct Block {$/;"	s	language:Rust
BlockCheckMode	examples/rust/ast.rs	/^pub enum BlockCheckMode {$/;"	g	language:Rust
Bool	examples/go/value.go	/^func (v Value) Bool() bool {$/;"	f	language:Go
Bool	examples/rust/ast.rs	/^    Bool(bool),$/;"	e	language:Rust	enum:LitKind
BoundPredicate	examples/rust/ast.rs	/^    BoundPredicate(WhereBoundPredicate),$/;"	e	language:Rust	enum:WherePredicate
Boundary	examples/cpp/marker-index.h	/^  struct Boundary {$/;"	s	language:C++	class:MarkerIndex
BoundaryQueryResult	examples/cpp/marker-index.h	/^  struct BoundaryQueryResult {$/;"	s	language:C++	class:MarkerIndex
Box	examples/rust/ast.rs	/^    Box(P<Expr>),$/;"	e	language:Rust	enum:ExprKind
Box	examples/rust/ast.rs	/^    Box(P<Pat>),$/;"	e	language:Rust	enum:PatKind
Braces	examples/rust/ast.rs	/^    Braces,$/;"	e	language:Rust	enum:MacStmtStyle
Break	examples/rust/ast.rs	/^    Break(Option<SpannedIdent>, Option<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
Breakpoint	examples/go/proc.go	/^func Breakpoint() {$/;"	f	language:Go
ByRef	examples/rust/ast.rs	/^    ByRef(Mutability),$/;"	e	language:Rust	enum:BindingMode
ByValue	examples/rust/ast.rs	/^    ByValue(Mutability),$/;"	e	language:Rust	enum:BindingMode
Byte	examples/rust/ast.rs	/^    Byte(u8),$/;"	e	language:Rust	enum:LitKind
ByteStr	examples/rust/ast.rs	/^    ByteStr(Rc<Vec<u8>>),$/;"	e	language:Rust	enum:LitKind
Bytes	examples/go/value.go	/^func (v Value) Bytes() []byte {$/;"	f	language:Go
C	examples/ruby/declarations.rb	/^class Cß$/;"	c	language:Ruby
Call	examples/go/value.go	/^func (v Value) Call(in []Value) []Value {$/;"	f	language:Go
Call	examples/rust/ast.rs	/^    Call(P<Expr>, Vec<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
CallSlice	examples/go/value.go	/^func (v Value) CallSlice(in []Value) []Value {$/;"	f	language:Go
CanAddr	examples/go/value.go	/^func (v Value) CanAddr() bool {$/;"	f	language:Go
CanInterface	examples/go/value.go	/^func (v Value) CanInterface() bool {$/;"	f	language:Go
CanSet	examples/go/value.go	/^func (v Value) CanSet() bool {$/;"	f	language:Go
Cap	examples/go/value.go	/^	Cap  int$/;"	m	language:Go	struct:SliceHeader
Cap	examples/go/value.go	/^	Cap  int$/;"	m	language:Go	struct:sliceHeader
Cap	examples/go/value.go	/^func (v Value) Cap() int {$/;"	f	language:Go
CaptureBy	examples/rust/ast.rs	/^pub enum CaptureBy {$/;"	g	language:Rust
Cast	examples/rust/ast.rs	/^    Cast(P<Expr>, P<Ty>),$/;"	e	language:Rust	enum:ExprKind
Catch	examples/rust/ast.rs	/^    Catch(P<Block>),$/;"	e	language:Rust	enum:ExprKind
Chan	examples/go/value.go	/^	Chan Value     \/\/ channel to use (for send or receive)$/;"	m	language:Go	struct:SelectCase
Char	examples/rust/ast.rs	/^    Char(char),$/;"	e	language:Rust	enum:LitKind
Close	examples/go/value.go	/^func (v Value) Close() {$/;"	f	language:Go
Closed	examples/rust/ast.rs	/^    Closed,$/;"	e	language:Rust	enum:RangeLimits
Closure	examples/rust/ast.rs	/^    Closure(CaptureBy, P<FnDecl>, P<Expr>, Span),$/;"	e	language:Rust	enum:ExprKind
CompilerGenerated	examples/rust/ast.rs	/^    CompilerGenerated,$/;"	e	language:Rust	enum:UnsafeSource
Complex	examples/go/value.go	/^func (v Value) Complex() complex128 {$/;"	f	language:Go
Const	examples/rust/ast.rs	/^    Const(P<Ty>, Option<P<Expr>>),$/;"	e	language:Rust	enum:TraitItemKind
Const	examples/rust/ast.rs	/^    Const(P<Ty>, P<Expr>),$/;"	e	language:Rust	enum:ImplItemKind
Const	examples/rust/ast.rs	/^    Const(P<Ty>, P<Expr>),$/;"	e	language:Rust	enum:ItemKind
Const	examples/rust/ast.rs	/^    Const,$/;"	e	language:Rust	enum:Constness
Constness	examples/rust/ast.rs	/^pub enum Constness {$/;"	g	language:Rust
Continue	examples/rust/ast.rs	/^    Continue(Option<SpannedIdent>),$/;"	e	language:Rust	enum:ExprKind
Convert	examples/go/value.go	/^func (v Value) Convert(t Type) Value {$/;"	f	language:Go
Cooked	examples/rust/ast.rs	/^    Cooked,$/;"	e	language:Rust	enum:StrStyle
Copy	examples/go/value.go	/^func Copy(dst, src Value) int {$/;"	f	language:Go
Crate	examples/rust/ast.rs	/^    Crate(Span, CrateSugar),$/;"	e	language:Rust	enum:Visibility
Crate	examples/rust/ast.rs	/^pub struct Crate {$/;"	s	language:Rust
CrateConfig	examples/rust/ast.rs	/^pub type CrateConfig = HashSet<(Name, Option<Symbol>)>;$/;"	t	language:Rust
CrateSugar	examples/rust/ast.rs	/^pub enum CrateSugar {$/;"	g	language:Rust
D	examples/javascript/semicolon_insertion.js	/^function a () { function b () {} function *c () {} class D {} return }$/;"	c	language:JavaScript	class:a
Data	examples/go/value.go	/^	Data uintptr$/;"	m	language:Go	struct:SliceHeader
Data	examples/go/value.go	/^	Data uintptr$/;"	m	language:Go	struct:StringHeader
Data	examples/go/value.go	/^	Data unsafe.Pointer$/;"	m	language:Go	struct:sliceHeader
Data	examples/go/value.go	/^	Data unsafe.Pointer$/;"	m	language:Go	struct:stringHeader
Default	examples/rust/ast.rs	/^    Default(Span),$/;"	e	language:Rust	enum:FunctionRetTy
Default	examples/rust/ast.rs	/^    Default,$/;"	e	language:Rust	enum:BlockCheckMode
Default	examples/rust/ast.rs	/^    Default,$/;"	e	language:Rust	enum:Defaultness
Defaultness	examples/rust/ast.rs	/^pub enum Defaultness {$/;"	g	language:Rust
Deref	examples/rust/ast.rs	/^    Deref,$/;"	e	language:Rust	enum:UnOp
Dir	examples/go/value.go	/^	Dir  SelectDir \/\/ direction of case$/;"	m	language:Go	struct:SelectCase
Div	examples/rust/ast.rs	/^    Div,$/;"	e	language:Rust	enum:BinOpKind
DotDotDot	examples/rust/ast.rs	/^    DotDotDot,$/;"	e	language:Rust	enum:RangeSyntax
DotDotEq	examples/rust/ast.rs	/^    DotDotEq,$/;"	e	language:Rust	enum:RangeSyntax
Dyn	examples/rust/ast.rs	/^    Dyn,$/;"	e	language:Rust	enum:TraitObjectSyntax
Elem	examples/go/value.go	/^func (v Value) Elem() Value {$/;"	f	language:Go
Enum	examples/rust/ast.rs	/^    Enum(EnumDef, Generics),$/;"	e	language:Rust	enum:ItemKind
EnumDef	examples/rust/ast.rs	/^pub struct EnumDef {$/;"	s	language:Rust
Eq	examples/rust/ast.rs	/^    Eq,$/;"	e	language:Rust	enum:BinOpKind
EqPredicate	examples/rust/ast.rs	/^    EqPredicate(WhereEqPredicate),$/;"	e	language:Rust	enum:WherePredicate
Err	examples/rust/ast.rs	/^    Err,$/;"	e	language:Rust	enum:TyKind
Error	examples/go/value.go	/^func (e *ValueError) Error() string {$/;"	f	language:Go
Excluded	examples/rust/ast.rs	/^    Excluded,$/;"	e	language:Rust	enum:RangeEnd
Explicit	examples/rust/ast.rs	/^    Explicit(P<Ty>, Mutability),$/;"	e	language:Rust	enum:SelfKind
ExplicitSelf	examples/rust/ast.rs	/^pub type ExplicitSelf = Spanned<SelfKind>;$/;"	t	language:Rust
Expr	examples/rust/ast.rs	/^    Expr(P<Expr>),$/;"	e	language:Rust	enum:StmtKind
Expr	examples/rust/ast.rs	/^impl Expr {$/;"	c	language:Rust
Expr	examples/rust/ast.rs	/^impl fmt::Debug for Expr {$/;"	c	language:Rust
Expr	examples/rust/ast.rs	/^pub struct Expr {$/;"	s	language:Rust
ExprKind	examples/rust/ast.rs	/^pub enum ExprKind {$/;"	g	language:Rust
ExternCrate	examples/rust/ast.rs	/^    ExternCrate(Option<Name>),$/;"	e	language:Rust	enum:ItemKind
F32	examples/rust/ast.rs	/^    F32,$/;"	e	language:Rust	enum:FloatTy
F64	examples/rust/ast.rs	/^    F64,$/;"	e	language:Rust	enum:FloatTy
Field	examples/go/value.go	/^func (v Value) Field(i int) Value {$/;"	f	language:Go
Field	examples/rust/ast.rs	/^    Field(P<Expr>, SpannedIdent),$/;"	e	language:Rust	enum:ExprKind
Field	examples/rust/ast.rs	/^pub struct Field {$/;"	s	language:Rust
FieldByIndex	examples/go/value.go	/^func (v Value) FieldByIndex(index []int) Value {$/;"	f	language:Go
FieldByName	examples/go/value.go	/^func (v Value) FieldByName(name string) Value {$/;"	f	language:Go
FieldByNameFunc	examples/go/value.go	/^func (v Value) FieldByNameFunc(match func(string) bool) Value {$/;"	f	language:Go
FieldPat	examples/rust/ast.rs	/^pub struct FieldPat {$/;"	s	language:Rust
Final	examples/rust/ast.rs	/^    Final,$/;"	e	language:Rust	enum:Defaultness
Float	examples/go/value.go	/^func (v Value) Float() float64 {$/;"	f	language:Go
Float	examples/rust/ast.rs	/^    Float(Symbol, FloatTy),$/;"	e	language:Rust	enum:LitKind
FloatTy	examples/rust/ast.rs	/^impl FloatTy {$/;"	c	language:Rust
FloatTy	examples/rust/ast.rs	/^impl fmt::Debug for FloatTy {$/;"	c	language:Rust
FloatTy	examples/rust/ast.rs	/^impl fmt::Display for FloatTy {$/;"	c	language:Rust
FloatTy	examples/rust/ast.rs	/^pub enum FloatTy {$/;"	g	language:Rust
FloatUnsuffixed	examples/rust/ast.rs	/^    FloatUnsuffixed(Symbol),$/;"	e	language:Rust	enum:LitKind
Fn	examples/rust/ast.rs	/^    Fn(P<FnDecl>, Generics),$/;"	e	language:Rust	enum:ForeignItemKind
Fn	examples/rust/ast.rs	/^    Fn(P<FnDecl>, Unsafety, Spanned<Constness>, Abi, Generics, P<Block>),$/;"	e	language:Rust	enum:ItemKind
FnDecl	examples/rust/ast.rs	/^impl FnDecl {$/;"	c	language:Rust
FnDecl	examples/rust/ast.rs	/^pub struct FnDecl {$/;"	s	language:Rust
Foo	examples/javascript/expressions.js	/^class Foo extends require('another-class') {$/;"	c	language:JavaScript
Foo	examples/javascript/expressions.js	/^class Foo {$/;"	c	language:JavaScript
Foo	examples/ruby/declarations.rb	/^class Foo < ::Bar$/;"	c	language:Ruby
Foo	examples/ruby/declarations.rb	/^class Foo < Bar$/;"	c	language:Ruby
Foo	examples/ruby/declarations.rb	/^class Foo < Bar::Baz.new(foo)$/;"	c	language:Ruby
Foo	examples/ruby/declarations.rb	/^class Foo < Bar::Quux$/;"	c	language:Ruby
Foo	examples/ruby/declarations.rb	/^class Foo$/;"	c	language:Ruby
Foo	examples/ruby/declarations.rb	/^class Foo; end$/;"	c	language:Ruby
Foo	examples/ruby/declarations.rb	/^module Foo end$/;"	m	language:Ruby
Foo	examples/ruby/declarations.rb	/^module Foo$/;"	m	language:Ruby
ForLoop	examples/rust/ast.rs	/^    ForLoop(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>),$/;"	e	language:Rust	enum:ExprKind
ForeignItem	examples/rust/ast.rs	/^pub struct ForeignItem {$/;"	s	language:Rust
ForeignItemKind	examples/rust/ast.rs	/^impl ForeignItemKind {$/;"	c	language:Rust
ForeignItemKind	examples/rust/ast.rs	/^pub enum ForeignItemKind {$/;"	g	language:Rust
ForeignMod	examples/rust/ast.rs	/^    ForeignMod(ForeignMod),$/;"	e	language:Rust	enum:ItemKind
ForeignMod	examples/rust/ast.rs	/^pub struct ForeignMod {$/;"	s	language:Rust
Fred	examples/ruby/classes.rb	/^class Fred $/;"	c	language:Ruby
Fred	examples/ruby/classes.rb	/^class Fred$/;"	c	language:Ruby
FunctionRetTy	examples/rust/ast.rs	/^impl FunctionRetTy {$/;"	c	language:Rust
FunctionRetTy	examples/rust/ast.rs	/^pub enum FunctionRetTy {$/;"	g	language:Rust
Ge	examples/rust/ast.rs	/^    Ge,$/;"	e	language:Rust	enum:BinOpKind
GenericParam	examples/rust/ast.rs	/^impl GenericParam {$/;"	c	language:Rust
GenericParam	examples/rust/ast.rs	/^pub enum GenericParam {$/;"	g	language:Rust
Generics	examples/rust/ast.rs	/^impl Default for Generics {$/;"	c	language:Rust
Generics	examples/rust/ast.rs	/^impl Generics {$/;"	c	language:Rust
Generics	examples/rust/ast.rs	/^pub struct Generics {$/;"	s	language:Rust
GetMom	examples/go/small.go	/^func (self *Person) GetMom() *Person {$/;"	f	language:Go
GetName	examples/go/small.go	/^func (self *Person) GetName() string {$/;"	f	language:Go
Glob	examples/rust/ast.rs	/^    Glob,$/;"	e	language:Rust	enum:UseTreeKind
GlobalAsm	examples/rust/ast.rs	/^    GlobalAsm(P<GlobalAsm>),$/;"	e	language:Rust	enum:ItemKind
GlobalAsm	examples/rust/ast.rs	/^pub struct GlobalAsm {$/;"	s	language:Rust
Gosched	examples/go/proc.go	/^func Gosched() {$/;"	f	language:Go
Gt	examples/rust/ast.rs	/^    Gt,$/;"	e	language:Rust	enum:BinOpKind
HalfOpen	examples/rust/ast.rs	/^    HalfOpen,$/;"	e	language:Rust	enum:RangeLimits
Human	examples/ruby/classes.rb	/^class Human$/;"	c	language:Ruby
I128	examples/rust/ast.rs	/^    I128,$/;"	e	language:Rust	enum:IntTy
I16	examples/rust/ast.rs	/^    I16,$/;"	e	language:Rust	enum:IntTy
I32	examples/rust/ast.rs	/^    I32,$/;"	e	language:Rust	enum:IntTy
I64	examples/rust/ast.rs	/^    I64,$/;"	e	language:Rust	enum:IntTy
I8	examples/rust/ast.rs	/^    I8,$/;"	e	language:Rust	enum:IntTy
Ident	examples/rust/ast.rs	/^    Ident(BindingMode, SpannedIdent, Option<P<Pat>>),$/;"	e	language:Rust	enum:PatKind
If	examples/rust/ast.rs	/^    If(P<Expr>, P<Block>, Option<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
IfLet	examples/rust/ast.rs	/^    IfLet(P<Pat>, P<Expr>, P<Block>, Option<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
Immutable	examples/rust/ast.rs	/^    Immutable,$/;"	e	language:Rust	enum:Mutability
Impl	examples/rust/ast.rs	/^    Impl(Unsafety,$/;"	e	language:Rust	enum:ItemKind
ImplItem	examples/rust/ast.rs	/^pub struct ImplItem {$/;"	s	language:Rust
ImplItemKind	examples/rust/ast.rs	/^pub enum ImplItemKind {$/;"	g	language:Rust
ImplPolarity	examples/rust/ast.rs	/^impl fmt::Debug for ImplPolarity {$/;"	c	language:Rust
ImplPolarity	examples/rust/ast.rs	/^pub enum ImplPolarity {$/;"	g	language:Rust
ImplTrait	examples/rust/ast.rs	/^    ImplTrait(TyParamBounds),$/;"	e	language:Rust	enum:TyKind
ImplicitSelf	examples/rust/ast.rs	/^    ImplicitSelf,$/;"	e	language:Rust	enum:TyKind
InPlace	examples/rust/ast.rs	/^    InPlace(P<Expr>, P<Expr>),$/;"	e	language:Rust	enum:ExprKind
Included	examples/rust/ast.rs	/^    Included(RangeSyntax),$/;"	e	language:Rust	enum:RangeEnd
Index	examples/go/value.go	/^func (v Value) Index(i int) Value {$/;"	f	language:Go
Index	examples/rust/ast.rs	/^    Index(P<Expr>, P<Expr>),$/;"	e	language:Rust	enum:ExprKind
Indirect	examples/go/value.go	/^func Indirect(v Value) Value {$/;"	f	language:Go
Infer	examples/rust/ast.rs	/^    Infer,$/;"	e	language:Rust	enum:TyKind
Inherited	examples/rust/ast.rs	/^    Inherited,$/;"	e	language:Rust	enum:Visibility
InlineAsm	examples/rust/ast.rs	/^    InlineAsm(P<InlineAsm>),$/;"	e	language:Rust	enum:ExprKind
InlineAsm	examples/rust/ast.rs	/^pub struct InlineAsm {$/;"	s	language:Rust
InlineAsmOutput	examples/rust/ast.rs	/^pub struct InlineAsmOutput {$/;"	s	language:Rust
Inner	examples/rust/ast.rs	/^    Inner,$/;"	e	language:Rust	enum:AttrStyle
Int	examples/go/value.go	/^func (v Value) Int() int64 {$/;"	f	language:Go
Int	examples/rust/ast.rs	/^    Int(u128, LitIntType),$/;"	e	language:Rust	enum:LitKind
IntTy	examples/rust/ast.rs	/^impl IntTy {$/;"	c	language:Rust
IntTy	examples/rust/ast.rs	/^impl fmt::Debug for IntTy {$/;"	c	language:Rust
IntTy	examples/rust/ast.rs	/^impl fmt::Display for IntTy {$/;"	c	language:Rust
IntTy	examples/rust/ast.rs	/^pub enum IntTy {$/;"	g	language:Rust
Intel	examples/rust/ast.rs	/^    Intel,$/;"	e	language:Rust	enum:AsmDialect
Interface	examples/go/value.go	/^func (v Value) Interface() (i interface{}) {$/;"	f	language:Go
InterfaceData	examples/go/value.go	/^func (v Value) InterfaceData() [2]uintptr {$/;"	f	language:Go
IsAuto	examples/rust/ast.rs	/^pub enum IsAuto {$/;"	g	language:Rust
IsNil	examples/go/value.go	/^func (v Value) IsNil() bool {$/;"	f	language:Go
IsValid	examples/go/value.go	/^func (v Value) IsValid() bool {$/;"	f	language:Go
Isize	examples/rust/ast.rs	/^    Isize,$/;"	e	language:Rust	enum:IntTy
Item	examples/rust/ast.rs	/^    Item(P<Item>),$/;"	e	language:Rust	enum:StmtKind
Item	examples/rust/ast.rs	/^pub struct Item {$/;"	s	language:Rust
ItemKind	examples/rust/ast.rs	/^impl ItemKind {$/;"	c	language:Rust
ItemKind	examples/rust/ast.rs	/^pub enum ItemKind {$/;"	g	language:Rust
Iterator	examples/cpp/marker-index.h	/^  class Iterator {$/;"	c	language:C++	class:MarkerIndex
JustCrate	examples/rust/ast.rs	/^    JustCrate,$/;"	e	language:Rust	enum:CrateSugar
Kind	examples/go/value.go	/^	Kind   Kind$/;"	m	language:Go	struct:ValueError
Kind	examples/go/value.go	/^func (v Value) Kind() Kind {$/;"	f	language:Go
LANGUAGES	Makefile	/^LANGUAGES = agda bash c c-sharp clojure cpp css elm elixir go haskell html java javascript json /;"	m	language:Make
Le	examples/rust/ast.rs	/^    Le,$/;"	e	language:Rust	enum:BinOpKind
Len	examples/go/value.go	/^	Len  int$/;"	m	language:Go	struct:SliceHeader
Len	examples/go/value.go	/^	Len  int$/;"	m	language:Go	struct:StringHeader
Len	examples/go/value.go	/^	Len  int$/;"	m	language:Go	struct:sliceHeader
Len	examples/go/value.go	/^	Len  int$/;"	m	language:Go	struct:stringHeader
Len	examples/go/value.go	/^func (v Value) Len() int {$/;"	f	language:Go
Lifetime	examples/rust/ast.rs	/^    Lifetime(LifetimeDef),$/;"	e	language:Rust	enum:GenericParam
Lifetime	examples/rust/ast.rs	/^impl fmt::Debug for Lifetime {$/;"	c	language:Rust
Lifetime	examples/rust/ast.rs	/^pub struct Lifetime {$/;"	s	language:Rust
LifetimeDef	examples/rust/ast.rs	/^pub struct LifetimeDef {$/;"	s	language:Rust
List	examples/rust/ast.rs	/^    List(Vec<NestedMetaItem>),$/;"	e	language:Rust	enum:MetaItemKind
Lit	examples/rust/ast.rs	/^    Lit(P<Expr>),$/;"	e	language:Rust	enum:PatKind
Lit	examples/rust/ast.rs	/^    Lit(P<Lit>),$/;"	e	language:Rust	enum:ExprKind
Lit	examples/rust/ast.rs	/^pub type Lit = Spanned<LitKind>;$/;"	t	language:Rust
LitIntType	examples/rust/ast.rs	/^pub enum LitIntType {$/;"	g	language:Rust
LitKind	examples/rust/ast.rs	/^impl LitKind {$/;"	c	language:Rust
LitKind	examples/rust/ast.rs	/^pub enum LitKind {$/;"	g	language:Rust
Literal	examples/rust/ast.rs	/^    Literal(Lit),$/;"	e	language:Rust	enum:NestedMetaItemKind
Local	examples/rust/ast.rs	/^    Local(P<Local>),$/;"	e	language:Rust	enum:StmtKind
Local	examples/rust/ast.rs	/^pub struct Local {$/;"	s	language:Rust
LockOSThread	examples/go/proc.go	/^func LockOSThread() {$/;"	f	language:Go
Loop	examples/rust/ast.rs	/^    Loop(P<Block>, Option<SpannedIdent>),$/;"	e	language:Rust	enum:ExprKind
Lt	examples/rust/ast.rs	/^    Lt,$/;"	e	language:Rust	enum:BinOpKind
MARKER_INDEX_H_	examples/cpp/marker-index.h	/^#define MARKER_INDEX_H_$/;"	d	language:C++
Mac	examples/rust/ast.rs	/^    Mac(Mac),$/;"	e	language:Rust	enum:ExprKind
Mac	examples/rust/ast.rs	/^    Mac(Mac),$/;"	e	language:Rust	enum:ItemKind
Mac	examples/rust/ast.rs	/^    Mac(Mac),$/;"	e	language:Rust	enum:PatKind
Mac	examples/rust/ast.rs	/^    Mac(Mac),$/;"	e	language:Rust	enum:TyKind
Mac	examples/rust/ast.rs	/^    Mac(P<(Mac, MacStmtStyle, ThinVec<Attribute>)>),$/;"	e	language:Rust	enum:StmtKind
Mac	examples/rust/ast.rs	/^pub type Mac = Spanned<Mac_>;$/;"	t	language:Rust
MacStmtStyle	examples/rust/ast.rs	/^pub enum MacStmtStyle {$/;"	g	language:Rust
Mac_	examples/rust/ast.rs	/^impl Mac_ {$/;"	c	language:Rust
Mac_	examples/rust/ast.rs	/^pub struct Mac_ {$/;"	s	language:Rust
Macro	examples/rust/ast.rs	/^    Macro(Mac),$/;"	e	language:Rust	enum:ImplItemKind
Macro	examples/rust/ast.rs	/^    Macro(Mac),$/;"	e	language:Rust	enum:TraitItemKind
MacroDef	examples/rust/ast.rs	/^    MacroDef(MacroDef),$/;"	e	language:Rust	enum:ItemKind
MacroDef	examples/rust/ast.rs	/^impl MacroDef {$/;"	c	language:Rust
MacroDef	examples/rust/ast.rs	/^pub struct MacroDef {$/;"	s	language:Rust
MakeChan	examples/go/value.go	/^func MakeChan(typ Type, buffer int) Value {$/;"	f	language:Go
MakeMap	examples/go/value.go	/^func MakeMap(typ Type) Value {$/;"	f	language:Go
MakeSlice	examples/go/value.go	/^func MakeSlice(typ Type, len, cap int) Value {$/;"	f	language:Go
MapIndex	examples/go/value.go	/^func (v Value) MapIndex(key Value) Value {$/;"	f	language:Go
MapKeys	examples/go/value.go	/^func (v Value) MapKeys() []Value {$/;"	f	language:Go
MarkerId	examples/cpp/marker-index.h	/^  using MarkerId = unsigned;$/;"	t	language:C++	class:MarkerIndex	typeref:typename:unsigned
MarkerIdSet	examples/cpp/marker-index.h	/^  using MarkerIdSet = flat_set<MarkerId>;$/;"	t	language:C++	class:MarkerIndex	typeref:typename:flat_set<MarkerId>
MarkerIndex	examples/cpp/marker-index.h	/^class MarkerIndex {$/;"	c	language:C++
MarkerIndex::Boundary	examples/cpp/marker-index.h	/^  struct Boundary {$/;"	s	language:C++	class:MarkerIndex
MarkerIndex::Boundary::ending	examples/cpp/marker-index.h	/^    flat_set<MarkerId> ending;$/;"	m	language:C++	struct:MarkerIndex::Boundary	typeref:typename:flat_set<MarkerId>
MarkerIndex::Boundary::position	examples/cpp/marker-index.h	/^    Point position;$/;"	m	language:C++	struct:MarkerIndex::Boundary	typeref:typename:Point
MarkerIndex::Boundary::starting	examples/cpp/marker-index.h	/^    flat_set<MarkerId> starting;$/;"	m	language:C++	struct:MarkerIndex::Boundary	typeref:typename:flat_set<MarkerId>
MarkerIndex::BoundaryQueryResult	examples/cpp/marker-index.h	/^  struct BoundaryQueryResult {$/;"	s	language:C++	class:MarkerIndex
MarkerIndex::BoundaryQueryResult::boundaries	examples/cpp/marker-index.h	/^    std::vector<Boundary> boundaries;$/;"	m	language:C++	struct:MarkerIndex::BoundaryQueryResult	typeref:typename:std::vector<Boundary>
MarkerIndex::BoundaryQueryResult::containing_start	examples/cpp/marker-index.h	/^    std::vector<MarkerId> containing_start;$/;"	m	language:C++	struct:MarkerIndex::BoundaryQueryResult	typeref:typename:std::vector<MarkerId>
MarkerIndex::Iterator	examples/cpp/marker-index.h	/^  class Iterator {$/;"	c	language:C++	class:MarkerIndex
MarkerIndex::Iterator::current_node	examples/cpp/marker-index.h	/^    Node *current_node;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:Node *
MarkerIndex::Iterator::current_node_position	examples/cpp/marker-index.h	/^    Point current_node_position;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:Point
MarkerIndex::Iterator::left_ancestor_position	examples/cpp/marker-index.h	/^    Point left_ancestor_position;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:Point
MarkerIndex::Iterator::left_ancestor_position_stack	examples/cpp/marker-index.h	/^    std::vector<Point> left_ancestor_position_stack;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:std::vector<Point>
MarkerIndex::Iterator::marker_index	examples/cpp/marker-index.h	/^    MarkerIndex *marker_index;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:MarkerIndex *
MarkerIndex::Iterator::right_ancestor_position	examples/cpp/marker-index.h	/^    Point right_ancestor_position;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:Point
MarkerIndex::Iterator::right_ancestor_position_stack	examples/cpp/marker-index.h	/^    std::vector<Point> right_ancestor_position_stack;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:std::vector<Point>
MarkerIndex::MarkerId	examples/cpp/marker-index.h	/^  using MarkerId = unsigned;$/;"	t	language:C++	class:MarkerIndex	typeref:typename:unsigned
MarkerIndex::MarkerIdSet	examples/cpp/marker-index.h	/^  using MarkerIdSet = flat_set<MarkerId>;$/;"	t	language:C++	class:MarkerIndex	typeref:typename:flat_set<MarkerId>
MarkerIndex::Node	examples/cpp/marker-index.h	/^  struct Node {$/;"	s	language:C++	class:MarkerIndex
MarkerIndex::Node::end_marker_ids	examples/cpp/marker-index.h	/^    flat_set<MarkerId> end_marker_ids;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:flat_set<MarkerId>
MarkerIndex::Node::left	examples/cpp/marker-index.h	/^    Node *left;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:Node *
MarkerIndex::Node::left_extent	examples/cpp/marker-index.h	/^    Point left_extent;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:Point
MarkerIndex::Node::left_marker_ids	examples/cpp/marker-index.h	/^    flat_set<MarkerId> left_marker_ids;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:flat_set<MarkerId>
MarkerIndex::Node::parent	examples/cpp/marker-index.h	/^    Node *parent;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:Node *
MarkerIndex::Node::priority	examples/cpp/marker-index.h	/^    int priority;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:int
MarkerIndex::Node::right	examples/cpp/marker-index.h	/^    Node *right;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:Node *
MarkerIndex::Node::right_marker_ids	examples/cpp/marker-index.h	/^    flat_set<MarkerId> right_marker_ids;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:flat_set<MarkerId>
MarkerIndex::Node::start_marker_ids	examples/cpp/marker-index.h	/^    flat_set<MarkerId> start_marker_ids;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:flat_set<MarkerId>
MarkerIndex::SpliceResult	examples/cpp/marker-index.h	/^  struct SpliceResult {$/;"	s	language:C++	class:MarkerIndex
MarkerIndex::SpliceResult::inside	examples/cpp/marker-index.h	/^    flat_set<MarkerId> inside;$/;"	m	language:C++	struct:MarkerIndex::SpliceResult	typeref:typename:flat_set<MarkerId>
MarkerIndex::SpliceResult::overlap	examples/cpp/marker-index.h	/^    flat_set<MarkerId> overlap;$/;"	m	language:C++	struct:MarkerIndex::SpliceResult	typeref:typename:flat_set<MarkerId>
MarkerIndex::SpliceResult::surround	examples/cpp/marker-index.h	/^    flat_set<MarkerId> surround;$/;"	m	language:C++	struct:MarkerIndex::SpliceResult	typeref:typename:flat_set<MarkerId>
MarkerIndex::SpliceResult::touch	examples/cpp/marker-index.h	/^    flat_set<MarkerId> touch;$/;"	m	language:C++	struct:MarkerIndex::SpliceResult	typeref:typename:flat_set<MarkerId>
MarkerIndex::end_nodes_by_id	examples/cpp/marker-index.h	/^  std::unordered_map<MarkerId, Node*> end_nodes_by_id;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::unordered_map<MarkerId,Node * >
MarkerIndex::exclusive_marker_ids	examples/cpp/marker-index.h	/^  flat_set<MarkerId> exclusive_marker_ids;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:flat_set<MarkerId>
MarkerIndex::iterator	examples/cpp/marker-index.h	/^  Iterator iterator;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:Iterator
MarkerIndex::node_position_cache	examples/cpp/marker-index.h	/^  mutable std::unordered_map<const Node*, Point> node_position_cache;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::unordered_map<const Node *,Point>
MarkerIndex::random_distribution	examples/cpp/marker-index.h	/^  std::uniform_int_distribution<int> random_distribution;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::uniform_int_distribution<int>
MarkerIndex::random_engine	examples/cpp/marker-index.h	/^  std::default_random_engine random_engine;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::default_random_engine
MarkerIndex::root	examples/cpp/marker-index.h	/^  Node *root;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:Node *
MarkerIndex::start_nodes_by_id	examples/cpp/marker-index.h	/^  std::unordered_map<MarkerId, Node*> start_nodes_by_id;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::unordered_map<MarkerId,Node * >
Match	examples/rust/ast.rs	/^    Match(P<Expr>, Vec<Arm>),$/;"	e	language:Rust	enum:ExprKind
Maybe	examples/rust/ast.rs	/^    Maybe,$/;"	e	language:Rust	enum:TraitBoundModifier
MetaItem	examples/rust/ast.rs	/^    MetaItem(MetaItem),$/;"	e	language:Rust	enum:NestedMetaItemKind
MetaItem	examples/rust/ast.rs	/^pub struct MetaItem {$/;"	s	language:Rust
MetaItemKind	examples/rust/ast.rs	/^pub enum MetaItemKind {$/;"	g	language:Rust
Method	examples/go/value.go	/^	Method string$/;"	m	language:Go	struct:ValueError
Method	examples/go/value.go	/^func (v Value) Method(i int) Value {$/;"	f	language:Go
Method	examples/rust/ast.rs	/^    Method(MethodSig, Option<P<Block>>),$/;"	e	language:Rust	enum:TraitItemKind
Method	examples/rust/ast.rs	/^    Method(MethodSig, P<Block>),$/;"	e	language:Rust	enum:ImplItemKind
MethodByName	examples/go/value.go	/^func (v Value) MethodByName(name string) Value {$/;"	f	language:Go
MethodCall	examples/rust/ast.rs	/^    MethodCall(PathSegment, Vec<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
MethodSig	examples/rust/ast.rs	/^pub struct MethodSig {$/;"	s	language:Rust
Mod	examples/rust/ast.rs	/^    Mod(Mod),$/;"	e	language:Rust	enum:ItemKind
Mod	examples/rust/ast.rs	/^pub struct Mod {$/;"	s	language:Rust
Mul	examples/rust/ast.rs	/^    Mul,$/;"	e	language:Rust	enum:BinOpKind
MutTy	examples/rust/ast.rs	/^pub struct MutTy {$/;"	s	language:Rust
Mutability	examples/rust/ast.rs	/^pub enum Mutability {$/;"	g	language:Rust
Mutable	examples/rust/ast.rs	/^    Mutable,$/;"	e	language:Rust	enum:Mutability
NameValue	examples/rust/ast.rs	/^    NameValue(Lit)$/;"	e	language:Rust	enum:MetaItemKind
Ne	examples/rust/ast.rs	/^    Ne,$/;"	e	language:Rust	enum:BinOpKind
Neg	examples/rust/ast.rs	/^    Neg,$/;"	e	language:Rust	enum:UnOp
Negative	examples/rust/ast.rs	/^    Negative,$/;"	e	language:Rust	enum:ImplPolarity
Nested	examples/rust/ast.rs	/^    Nested(Vec<(UseTree, NodeId)>),$/;"	e	language:Rust	enum:UseTreeKind
NestedMetaItem	examples/rust/ast.rs	/^pub type NestedMetaItem = Spanned<NestedMetaItemKind>;$/;"	t	language:Rust
NestedMetaItemKind	examples/rust/ast.rs	/^pub enum NestedMetaItemKind {$/;"	g	language:Rust
Never	examples/rust/ast.rs	/^    Never,$/;"	e	language:Rust	enum:TyKind
New	examples/go/value.go	/^func New(typ Type) Value {$/;"	f	language:Go
NewAt	examples/go/value.go	/^func NewAt(typ Type, p unsafe.Pointer) Value {$/;"	f	language:Go
NewPerson	examples/go/small.go	/^func NewPerson(name string, mom *Person) Person {$/;"	f	language:Go
No	examples/rust/ast.rs	/^    No$/;"	e	language:Rust	enum:IsAuto
NoBraces	examples/rust/ast.rs	/^    NoBraces,$/;"	e	language:Rust	enum:MacStmtStyle
Node	examples/cpp/marker-index.h	/^  struct Node {$/;"	s	language:C++	class:MarkerIndex
NodeId	examples/rust/ast.rs	/^impl NodeId {$/;"	c	language:Rust
NodeId	examples/rust/ast.rs	/^impl fmt::Display for NodeId {$/;"	c	language:Rust
NodeId	examples/rust/ast.rs	/^impl indexed_vec::Idx for NodeId {$/;"	c	language:Rust
NodeId	examples/rust/ast.rs	/^impl serialize::UseSpecializedDecodable for NodeId {$/;"	c	language:Rust
NodeId	examples/rust/ast.rs	/^impl serialize::UseSpecializedEncodable for NodeId {$/;"	c	language:Rust
NodeId	examples/rust/ast.rs	/^pub struct NodeId(u32);$/;"	s	language:Rust
None	examples/rust/ast.rs	/^    None,$/;"	e	language:Rust	enum:TraitBoundModifier
None	examples/rust/ast.rs	/^    None,$/;"	e	language:Rust	enum:TraitObjectSyntax
Normal	examples/rust/ast.rs	/^    Normal,$/;"	e	language:Rust	enum:Unsafety
Not	examples/rust/ast.rs	/^    Not,$/;"	e	language:Rust	enum:UnOp
NotConst	examples/rust/ast.rs	/^    NotConst,$/;"	e	language:Rust	enum:Constness
NumField	examples/go/value.go	/^func (v Value) NumField() int {$/;"	f	language:Go
NumMethod	examples/go/value.go	/^func (v Value) NumMethod() int {$/;"	f	language:Go
Or	examples/rust/ast.rs	/^    Or,$/;"	e	language:Rust	enum:BinOpKind
Outer	examples/rust/ast.rs	/^    Outer,$/;"	e	language:Rust	enum:AttrStyle
OverflowComplex	examples/go/value.go	/^func (v Value) OverflowComplex(x complex128) bool {$/;"	f	language:Go
OverflowFloat	examples/go/value.go	/^func (v Value) OverflowFloat(x float64) bool {$/;"	f	language:Go
OverflowInt	examples/go/value.go	/^func (v Value) OverflowInt(x int64) bool {$/;"	f	language:Go
OverflowUint	examples/go/value.go	/^func (v Value) OverflowUint(x uint64) bool {$/;"	f	language:Go
Paren	examples/rust/ast.rs	/^    Paren(P<Expr>),$/;"	e	language:Rust	enum:ExprKind
Paren	examples/rust/ast.rs	/^    Paren(P<Ty>),$/;"	e	language:Rust	enum:TyKind
Parenthesized	examples/rust/ast.rs	/^    Parenthesized(ParenthesizedParameterData),$/;"	e	language:Rust	enum:PathParameters
ParenthesizedParameterData	examples/rust/ast.rs	/^impl Into<Option<P<PathParameters>>> for ParenthesizedParameterData {$/;"	c	language:Rust
ParenthesizedParameterData	examples/rust/ast.rs	/^pub struct ParenthesizedParameterData {$/;"	s	language:Rust
Pat	examples/rust/ast.rs	/^impl Pat {$/;"	c	language:Rust
Pat	examples/rust/ast.rs	/^impl fmt::Debug for Pat {$/;"	c	language:Rust
Pat	examples/rust/ast.rs	/^pub struct Pat {$/;"	s	language:Rust
PatKind	examples/rust/ast.rs	/^pub enum PatKind {$/;"	g	language:Rust
Path	examples/rust/ast.rs	/^    Path(Option<QSelf>, Path),$/;"	e	language:Rust	enum:ExprKind
Path	examples/rust/ast.rs	/^    Path(Option<QSelf>, Path),$/;"	e	language:Rust	enum:PatKind
Path	examples/rust/ast.rs	/^    Path(Option<QSelf>, Path),$/;"	e	language:Rust	enum:TyKind
Path	examples/rust/ast.rs	/^impl Path {$/;"	c	language:Rust
Path	examples/rust/ast.rs	/^impl fmt::Debug for Path {$/;"	c	language:Rust
Path	examples/rust/ast.rs	/^impl fmt::Display for Path {$/;"	c	language:Rust
Path	examples/rust/ast.rs	/^impl<'a> PartialEq<&'a str> for Path {$/;"	c	language:Rust
Path	examples/rust/ast.rs	/^pub struct Path {$/;"	s	language:Rust
PathParameters	examples/rust/ast.rs	/^impl PathParameters {$/;"	c	language:Rust
PathParameters	examples/rust/ast.rs	/^pub enum PathParameters {$/;"	g	language:Rust
PathSegment	examples/rust/ast.rs	/^impl PathSegment {$/;"	c	language:Rust
PathSegment	examples/rust/ast.rs	/^pub struct PathSegment {$/;"	s	language:Rust
Person	examples/go/small.go	/^type Person struct {$/;"	s	language:Go
Pointer	examples/go/value.go	/^func (v Value) Pointer() uintptr {$/;"	f	language:Go
PolyTraitRef	examples/rust/ast.rs	/^impl PolyTraitRef {$/;"	c	language:Rust
PolyTraitRef	examples/rust/ast.rs	/^pub struct PolyTraitRef {$/;"	s	language:Rust
Positive	examples/rust/ast.rs	/^    Positive,$/;"	e	language:Rust	enum:ImplPolarity
Ptr	examples/rust/ast.rs	/^    Ptr(MutTy),$/;"	e	language:Rust	enum:TyKind
PubCrate	examples/rust/ast.rs	/^    PubCrate,$/;"	e	language:Rust	enum:CrateSugar
Public	examples/rust/ast.rs	/^    Public,$/;"	e	language:Rust	enum:Visibility
QSelf	examples/rust/ast.rs	/^pub struct QSelf {$/;"	s	language:Rust
Range	examples/rust/ast.rs	/^    Range(Option<P<Expr>>, Option<P<Expr>>, RangeLimits),$/;"	e	language:Rust	enum:ExprKind
Range	examples/rust/ast.rs	/^    Range(P<Expr>, P<Expr>, RangeEnd),$/;"	e	language:Rust	enum:PatKind
RangeEnd	examples/rust/ast.rs	/^pub enum RangeEnd {$/;"	g	language:Rust
RangeLimits	examples/rust/ast.rs	/^pub enum RangeLimits {$/;"	g	language:Rust
RangeSyntax	examples/rust/ast.rs	/^pub enum RangeSyntax {$/;"	g	language:Rust
Raw	examples/rust/ast.rs	/^    Raw(usize)$/;"	e	language:Rust	enum:StrStyle
Recv	examples/go/value.go	/^func (v Value) Recv() (x Value, ok bool) {$/;"	f	language:Go
Ref	examples/rust/ast.rs	/^    Ref(P<Pat>, Mutability),$/;"	e	language:Rust	enum:PatKind
Ref	examples/rust/ast.rs	/^    Ref,$/;"	e	language:Rust	enum:CaptureBy
Region	examples/rust/ast.rs	/^    Region(Option<Lifetime>, Mutability),$/;"	e	language:Rust	enum:SelfKind
RegionPredicate	examples/rust/ast.rs	/^    RegionPredicate(WhereRegionPredicate),$/;"	e	language:Rust	enum:WherePredicate
RegionTyParamBound	examples/rust/ast.rs	/^    RegionTyParamBound(Lifetime)$/;"	e	language:Rust	enum:TyParamBound
Rem	examples/rust/ast.rs	/^    Rem,$/;"	e	language:Rust	enum:BinOpKind
Repeat	examples/rust/ast.rs	/^    Repeat(P<Expr>, P<Expr>),$/;"	e	language:Rust	enum:ExprKind
Restricted	examples/rust/ast.rs	/^    Restricted { path: P<Path>, id: NodeId },$/;"	e	language:Rust	enum:Visibility
Ret	examples/rust/ast.rs	/^    Ret(Option<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
Rptr	examples/rust/ast.rs	/^    Rptr(Option<Lifetime>, MutTy),$/;"	e	language:Rust	enum:TyKind
Rule	examples/cpp/rule.cc	/^Rule::Rule(Rule &&other) noexcept : blank_(Blank{}), type(BlankType) {$/;"	f	language:C++	class:tree_sitter::rules::Rule
Rule	examples/cpp/rule.cc	/^Rule::Rule(const Rule &other) : blank_(Blank{}), type(BlankType) {$/;"	f	language:C++	class:tree_sitter::rules::Rule
Select	examples/go/value.go	/^func Select(cases []SelectCase) (chosen int, recv Value, recvOK bool) {$/;"	f	language:Go
SelectCase	examples/go/value.go	/^type SelectCase struct {$/;"	s	language:Go
SelectDefault	examples/go/value.go	/^	SelectDefault           \/\/ default$/;"	c	language:Go
SelectDir	examples/go/value.go	/^type SelectDir int$/;"	t	language:Go
SelectRecv	examples/go/value.go	/^	SelectRecv              \/\/ case <-Chan:$/;"	c	language:Go
SelectSend	examples/go/value.go	/^	SelectSend              \/\/ case Chan <- Send$/;"	c	language:Go
SelfKind	examples/rust/ast.rs	/^pub enum SelfKind {$/;"	g	language:Rust
Semi	examples/rust/ast.rs	/^    Semi(P<Expr>),$/;"	e	language:Rust	enum:StmtKind
Semicolon	examples/rust/ast.rs	/^    Semicolon,$/;"	e	language:Rust	enum:MacStmtStyle
Send	examples/go/value.go	/^	Send Value     \/\/ value to send (for send)$/;"	m	language:Go	struct:SelectCase
Send	examples/go/value.go	/^func (v Value) Send(x Value) {$/;"	f	language:Go
Set	examples/go/value.go	/^func (v Value) Set(x Value) {$/;"	f	language:Go
SetBool	examples/go/value.go	/^func (v Value) SetBool(x bool) {$/;"	f	language:Go
SetBytes	examples/go/value.go	/^func (v Value) SetBytes(x []byte) {$/;"	f	language:Go
SetCap	examples/go/value.go	/^func (v Value) SetCap(n int) {$/;"	f	language:Go
SetComplex	examples/go/value.go	/^func (v Value) SetComplex(x complex128) {$/;"	f	language:Go
SetFloat	examples/go/value.go	/^func (v Value) SetFloat(x float64) {$/;"	f	language:Go
SetInt	examples/go/value.go	/^func (v Value) SetInt(x int64) {$/;"	f	language:Go
SetLen	examples/go/value.go	/^func (v Value) SetLen(n int) {$/;"	f	language:Go
SetMapIndex	examples/go/value.go	/^func (v Value) SetMapIndex(key, val Value) {$/;"	f	language:Go
SetPointer	examples/go/value.go	/^func (v Value) SetPointer(x unsafe.Pointer) {$/;"	f	language:Go
SetString	examples/go/value.go	/^func (v Value) SetString(x string) {$/;"	f	language:Go
SetUint	examples/go/value.go	/^func (v Value) SetUint(x uint64) {$/;"	f	language:Go
Shl	examples/rust/ast.rs	/^    Shl,$/;"	e	language:Rust	enum:BinOpKind
Shr	examples/rust/ast.rs	/^    Shr,$/;"	e	language:Rust	enum:BinOpKind
Signed	examples/rust/ast.rs	/^    Signed(IntTy),$/;"	e	language:Rust	enum:LitIntType
Simple	examples/rust/ast.rs	/^    Simple(Ident),$/;"	e	language:Rust	enum:UseTreeKind
Slice	examples/go/value.go	/^func (v Value) Slice(i, j int) Value {$/;"	f	language:Go
Slice	examples/rust/ast.rs	/^    Slice(P<Ty>),$/;"	e	language:Rust	enum:TyKind
Slice	examples/rust/ast.rs	/^    Slice(Vec<P<Pat>>, Option<P<Pat>>, Vec<P<Pat>>),$/;"	e	language:Rust	enum:PatKind
Slice3	examples/go/value.go	/^func (v Value) Slice3(i, j, k int) Value {$/;"	f	language:Go
SliceHeader	examples/go/value.go	/^type SliceHeader struct {$/;"	s	language:Go
SpannedIdent	examples/rust/ast.rs	/^pub type SpannedIdent = Spanned<Ident>;$/;"	t	language:Rust
SpliceResult	examples/cpp/marker-index.h	/^  struct SpliceResult {$/;"	s	language:C++	class:MarkerIndex
Static	examples/rust/ast.rs	/^    Static(P<Ty>, Mutability, P<Expr>),$/;"	e	language:Rust	enum:ItemKind
Static	examples/rust/ast.rs	/^    Static(P<Ty>, bool),$/;"	e	language:Rust	enum:ForeignItemKind
Stmt	examples/rust/ast.rs	/^impl Stmt {$/;"	c	language:Rust
Stmt	examples/rust/ast.rs	/^impl fmt::Debug for Stmt {$/;"	c	language:Rust
Stmt	examples/rust/ast.rs	/^pub struct Stmt {$/;"	s	language:Rust
StmtKind	examples/rust/ast.rs	/^pub enum StmtKind {$/;"	g	language:Rust
Str	examples/rust/ast.rs	/^    Str(Symbol, StrStyle),$/;"	e	language:Rust	enum:LitKind
StrStyle	examples/rust/ast.rs	/^pub enum StrStyle {$/;"	g	language:Rust
String	examples/go/value.go	/^func (v Value) String() string {$/;"	f	language:Go
StringHeader	examples/go/value.go	/^type StringHeader struct {$/;"	s	language:Go
Struct	examples/rust/ast.rs	/^    Struct(Path, Vec<Field>, Option<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
Struct	examples/rust/ast.rs	/^    Struct(Path, Vec<Spanned<FieldPat>>, bool),$/;"	e	language:Rust	enum:PatKind
Struct	examples/rust/ast.rs	/^    Struct(VariantData, Generics),$/;"	e	language:Rust	enum:ItemKind
Struct	examples/rust/ast.rs	/^    Struct(Vec<StructField>, NodeId),$/;"	e	language:Rust	enum:VariantData
StructField	examples/rust/ast.rs	/^pub struct StructField {$/;"	s	language:Rust
Sub	examples/rust/ast.rs	/^    Sub,$/;"	e	language:Rust	enum:BinOpKind
TREE_SITTER_VERSION	Makefile	/^TREE_SITTER_VERSION := 0.20.4$/;"	m	language:Make
TestCalibrate	examples/go/letter_test.go	/^func TestCalibrate(t *testing.T) {$/;"	f	language:Go
TestIsLetter	examples/go/letter_test.go	/^func TestIsLetter(t *testing.T) {$/;"	f	language:Go
TestIsSpace	examples/go/letter_test.go	/^func TestIsSpace(t *testing.T) {$/;"	f	language:Go
TestIsUpper	examples/go/letter_test.go	/^func TestIsUpper(t *testing.T) {$/;"	f	language:Go
TestLatinOffset	examples/go/letter_test.go	/^func TestLatinOffset(t *testing.T) {$/;"	f	language:Go
TestLetterOptimizations	examples/go/letter_test.go	/^func TestLetterOptimizations(t *testing.T) {$/;"	f	language:Go
TestSimpleFold	examples/go/letter_test.go	/^func TestSimpleFold(t *testing.T) {$/;"	f	language:Go
TestTo	examples/go/letter_test.go	/^func TestTo(t *testing.T) {$/;"	f	language:Go
TestToLowerCase	examples/go/letter_test.go	/^func TestToLowerCase(t *testing.T) {$/;"	f	language:Go
TestToTitleCase	examples/go/letter_test.go	/^func TestToTitleCase(t *testing.T) {$/;"	f	language:Go
TestToUpperCase	examples/go/letter_test.go	/^func TestToUpperCase(t *testing.T) {$/;"	f	language:Go
TestTurkishCase	examples/go/letter_test.go	/^func TestTurkishCase(t *testing.T) {$/;"	f	language:Go
Trait	examples/rust/ast.rs	/^    Trait(IsAuto, Unsafety, Generics, TyParamBounds, Vec<TraitItem>),$/;"	e	language:Rust	enum:ItemKind
TraitAlias	examples/rust/ast.rs	/^    TraitAlias(Generics, TyParamBounds),$/;"	e	language:Rust	enum:ItemKind
TraitBoundModifier	examples/rust/ast.rs	/^pub enum TraitBoundModifier {$/;"	g	language:Rust
TraitItem	examples/rust/ast.rs	/^pub struct TraitItem {$/;"	s	language:Rust
TraitItemKind	examples/rust/ast.rs	/^pub enum TraitItemKind {$/;"	g	language:Rust
TraitObject	examples/rust/ast.rs	/^    TraitObject(TyParamBounds, TraitObjectSyntax),$/;"	e	language:Rust	enum:TyKind
TraitObjectSyntax	examples/rust/ast.rs	/^pub enum TraitObjectSyntax {$/;"	g	language:Rust
TraitRef	examples/rust/ast.rs	/^pub struct TraitRef {$/;"	s	language:Rust
TraitTyParamBound	examples/rust/ast.rs	/^    TraitTyParamBound(PolyTraitRef, TraitBoundModifier),$/;"	e	language:Rust	enum:TyParamBound
Try	examples/rust/ast.rs	/^    Try(P<Expr>),$/;"	e	language:Rust	enum:ExprKind
TryRecv	examples/go/value.go	/^func (v Value) TryRecv() (x Value, ok bool) {$/;"	f	language:Go
TrySend	examples/go/value.go	/^func (v Value) TrySend(x Value) bool {$/;"	f	language:Go
Tup	examples/rust/ast.rs	/^    Tup(Vec<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
Tup	examples/rust/ast.rs	/^    Tup(Vec<P<Ty>> ),$/;"	e	language:Rust	enum:TyKind
TupField	examples/rust/ast.rs	/^    TupField(P<Expr>, Spanned<usize>),$/;"	e	language:Rust	enum:ExprKind
Tuple	examples/rust/ast.rs	/^    Tuple(Vec<P<Pat>>, Option<usize>),$/;"	e	language:Rust	enum:PatKind
Tuple	examples/rust/ast.rs	/^    Tuple(Vec<StructField>, NodeId),$/;"	e	language:Rust	enum:VariantData
TupleStruct	examples/rust/ast.rs	/^    TupleStruct(Path, Vec<P<Pat>>, Option<usize>),$/;"	e	language:Rust	enum:PatKind
Ty	examples/rust/ast.rs	/^    Ty(P<Ty>),$/;"	e	language:Rust	enum:FunctionRetTy
Ty	examples/rust/ast.rs	/^    Ty(P<Ty>, Generics),$/;"	e	language:Rust	enum:ItemKind
Ty	examples/rust/ast.rs	/^    Ty,$/;"	e	language:Rust	enum:ForeignItemKind
Ty	examples/rust/ast.rs	/^impl fmt::Debug for Ty {$/;"	c	language:Rust
Ty	examples/rust/ast.rs	/^pub struct Ty {$/;"	s	language:Rust
TyKind	examples/rust/ast.rs	/^pub enum TyKind {$/;"	g	language:Rust
TyParam	examples/rust/ast.rs	/^pub struct TyParam {$/;"	s	language:Rust
TyParamBound	examples/rust/ast.rs	/^pub enum TyParamBound {$/;"	g	language:Rust
TyParamBounds	examples/rust/ast.rs	/^pub type TyParamBounds = Vec<TyParamBound>;$/;"	t	language:Rust
Type	examples/go/value.go	/^func (v Value) Type() Type {$/;"	f	language:Go
Type	examples/rust/ast.rs	/^    Type(P<Expr>, P<Ty>),$/;"	e	language:Rust	enum:ExprKind
Type	examples/rust/ast.rs	/^    Type(P<Ty>),$/;"	e	language:Rust	enum:ImplItemKind
Type	examples/rust/ast.rs	/^    Type(TyParam),$/;"	e	language:Rust	enum:GenericParam
Type	examples/rust/ast.rs	/^    Type(TyParamBounds, Option<P<Ty>>),$/;"	e	language:Rust	enum:TraitItemKind
TypeBinding	examples/rust/ast.rs	/^pub struct TypeBinding {$/;"	s	language:Rust
Typeof	examples/rust/ast.rs	/^    Typeof(P<Expr>),$/;"	e	language:Rust	enum:TyKind
U128	examples/rust/ast.rs	/^    U128,$/;"	e	language:Rust	enum:UintTy
U16	examples/rust/ast.rs	/^    U16,$/;"	e	language:Rust	enum:UintTy
U32	examples/rust/ast.rs	/^    U32,$/;"	e	language:Rust	enum:UintTy
U64	examples/rust/ast.rs	/^    U64,$/;"	e	language:Rust	enum:UintTy
U8	examples/rust/ast.rs	/^    U8,$/;"	e	language:Rust	enum:UintTy
Uint	examples/go/value.go	/^func (v Value) Uint() uint64 {$/;"	f	language:Go
UintTy	examples/rust/ast.rs	/^impl UintTy {$/;"	c	language:Rust
UintTy	examples/rust/ast.rs	/^impl fmt::Debug for UintTy {$/;"	c	language:Rust
UintTy	examples/rust/ast.rs	/^impl fmt::Display for UintTy {$/;"	c	language:Rust
UintTy	examples/rust/ast.rs	/^pub enum UintTy {$/;"	g	language:Rust
UnOp	examples/rust/ast.rs	/^impl UnOp {$/;"	c	language:Rust
UnOp	examples/rust/ast.rs	/^pub enum UnOp {$/;"	g	language:Rust
Unary	examples/rust/ast.rs	/^    Unary(UnOp, P<Expr>),$/;"	e	language:Rust	enum:ExprKind
Union	examples/rust/ast.rs	/^    Union(VariantData, Generics),$/;"	e	language:Rust	enum:ItemKind
Unit	examples/rust/ast.rs	/^    Unit(NodeId),$/;"	e	language:Rust	enum:VariantData
UnlockOSThread	examples/go/proc.go	/^func UnlockOSThread() {$/;"	f	language:Go
Unsafe	examples/rust/ast.rs	/^    Unsafe(UnsafeSource),$/;"	e	language:Rust	enum:BlockCheckMode
Unsafe	examples/rust/ast.rs	/^    Unsafe,$/;"	e	language:Rust	enum:Unsafety
UnsafeAddr	examples/go/value.go	/^func (v Value) UnsafeAddr() uintptr {$/;"	f	language:Go
UnsafeSource	examples/rust/ast.rs	/^pub enum UnsafeSource {$/;"	g	language:Rust
Unsafety	examples/rust/ast.rs	/^impl fmt::Display for Unsafety {$/;"	c	language:Rust
Unsafety	examples/rust/ast.rs	/^pub enum Unsafety {$/;"	g	language:Rust
Unsigned	examples/rust/ast.rs	/^    Unsigned(UintTy),$/;"	e	language:Rust	enum:LitIntType
Unsuffixed	examples/rust/ast.rs	/^    Unsuffixed,$/;"	e	language:Rust	enum:LitIntType
Use	examples/rust/ast.rs	/^    Use(P<UseTree>),$/;"	e	language:Rust	enum:ItemKind
UseTree	examples/rust/ast.rs	/^pub struct UseTree {$/;"	s	language:Rust
UseTreeKind	examples/rust/ast.rs	/^pub enum UseTreeKind {$/;"	g	language:Rust
UserProvided	examples/rust/ast.rs	/^    UserProvided,$/;"	e	language:Rust	enum:UnsafeSource
Usize	examples/rust/ast.rs	/^    Usize,$/;"	e	language:Rust	enum:UintTy
Value	examples/go/value.go	/^type Value struct {$/;"	s	language:Go
Value	examples/rust/ast.rs	/^    Value(Mutability),$/;"	e	language:Rust	enum:SelfKind
Value	examples/rust/ast.rs	/^    Value,$/;"	e	language:Rust	enum:CaptureBy
ValueError	examples/go/value.go	/^type ValueError struct {$/;"	s	language:Go
ValueOf	examples/go/value.go	/^func ValueOf(i interface{}) Value {$/;"	f	language:Go
Variant	examples/rust/ast.rs	/^pub type Variant = Spanned<Variant_>;$/;"	t	language:Rust
VariantData	examples/rust/ast.rs	/^impl VariantData {$/;"	c	language:Rust
VariantData	examples/rust/ast.rs	/^pub enum VariantData {$/;"	g	language:Rust
Variant_	examples/rust/ast.rs	/^pub struct Variant_ {$/;"	s	language:Rust
Visibility	examples/rust/ast.rs	/^pub enum Visibility {$/;"	g	language:Rust
WEB_TREE_SITTER_DIR	Makefile	/^WEB_TREE_SITTER_DIR := vendor\/web-tree-sitter\/$(TREE_SITTER_VERSION)$/;"	m	language:Make
WEB_TREE_SITTER_FILES	Makefile	/^WEB_TREE_SITTER_FILES := README.md package.json tree-sitter-web.d.ts tree-sitter.js tree-sitter./;"	m	language:Make
WEB_TREE_SITTER_PATCH	Makefile	/^WEB_TREE_SITTER_PATCH := patches\/tree-sitter+$(TREE_SITTER_VERSION).patch$/;"	m	language:Make
WhereBoundPredicate	examples/rust/ast.rs	/^pub struct WhereBoundPredicate {$/;"	s	language:Rust
WhereClause	examples/rust/ast.rs	/^pub struct WhereClause {$/;"	s	language:Rust
WhereEqPredicate	examples/rust/ast.rs	/^pub struct WhereEqPredicate {$/;"	s	language:Rust
WherePredicate	examples/rust/ast.rs	/^pub enum WherePredicate {$/;"	g	language:Rust
WhereRegionPredicate	examples/rust/ast.rs	/^pub struct WhereRegionPredicate {$/;"	s	language:Rust
While	examples/rust/ast.rs	/^    While(P<Expr>, P<Block>, Option<SpannedIdent>),$/;"	e	language:Rust	enum:ExprKind
WhileLet	examples/rust/ast.rs	/^    WhileLet(P<Pat>, P<Expr>, P<Block>, Option<SpannedIdent>),$/;"	e	language:Rust	enum:ExprKind
Wild	examples/rust/ast.rs	/^    Wild,$/;"	e	language:Rust	enum:PatKind
Word	examples/rust/ast.rs	/^    Word,$/;"	e	language:Rust	enum:MetaItemKind
Yes	examples/rust/ast.rs	/^    Yes,$/;"	e	language:Rust	enum:IsAuto
Yield	examples/rust/ast.rs	/^    Yield(Option<P<Expr>>),$/;"	e	language:Rust	enum:ExprKind
Zero	examples/go/value.go	/^func Zero(typ Type) Value {$/;"	f	language:Go
_	examples/go/value.go	/^	_             SelectDir = iota$/;"	c	language:Go
_ExternalCode	examples/go/proc.go	/^func _ExternalCode() { _ExternalCode() }$/;"	f	language:Go
_GC	examples/go/proc.go	/^func _GC()           { _GC() }$/;"	f	language:Go
_GoidCacheBatch	examples/go/proc.go	/^	_GoidCacheBatch = 16$/;"	c	language:Go
_System	examples/go/proc.go	/^func _System()       { _System() }$/;"	f	language:Go
__anon211a28b10102	examples/cpp/rule.cc	/^    [elements](Choice choice) {$/;"	f	language:C++	function:tree_sitter::rules::add_choice_element	file:
__anon211a28b10202	examples/cpp/rule.cc	/^    [elements](auto rule) {$/;"	f	language:C++	function:tree_sitter::rules::add_choice_element	file:
__anon211a28b10302	examples/cpp/rule.cc	/^      [](Blank) {},$/;"	f	language:C++	function:tree_sitter::rules::Rule::seq	file:
__anon211a28b10402	examples/cpp/rule.cc	/^      [&](Metadata metadata) {$/;"	f	language:C++	function:tree_sitter::rules::Rule::seq	file:
__anon211a28b10502	examples/cpp/rule.cc	/^      [&](auto) {$/;"	f	language:C++	function:tree_sitter::rules::Rule::seq	file:
`	examples/ruby/declarations.rb	/^def `(a)$/;"	f	language:Ruby
a	examples/javascript/destructuring.js	/^function a ({b, c}, {d}) {}$/;"	f	language:JavaScript
a	examples/javascript/expressions.js	/^var a = b$/;"	v	language:JavaScript
a	examples/javascript/expressions.js	/^var x = { a: "b" };$/;"	p	language:JavaScript	class:x
a	examples/javascript/semicolon_insertion.js	/^function a() {b}$/;"	f	language:JavaScript
a	examples/javascript/semicolon_insertion.js	/^let a \/\/ comment at end of declaration$/;"	v	language:JavaScript
a	examples/javascript/statements.js	/^const a = 1;$/;"	C	language:JavaScript
a/lib/binding_web/exports.json	patches/tree-sitter+0.20.4.patch	/^--- a\/lib\/binding_web\/exports.json$/;"	m	language:Diff
a/lib/binding_web/package.json	patches/tree-sitter+0.20.4.patch	/^--- a\/lib\/binding_web\/package.json$/;"	m	language:Diff
aMethod	examples/javascript/statements.js	/^  aMethod: function() {}$/;"	m	language:JavaScript	class:x
aProperty	examples/javascript/statements.js	/^  aProperty: 1,$/;"	p	language:JavaScript	class:x
abi	examples/rust/ast.rs	/^    pub abi: Abi,$/;"	m	language:Rust	struct:BareFnTy
abi	examples/rust/ast.rs	/^    pub abi: Abi,$/;"	m	language:Rust	struct:ForeignMod
abi	examples/rust/ast.rs	/^    pub abi: Abi,$/;"	m	language:Rust	struct:MethodSig
acquireSudog	examples/go/proc.go	/^func acquireSudog() *sudog {$/;"	f	language:Go
acquirep	examples/go/proc.go	/^func acquirep(_p_ *p) {$/;"	f	language:Go
acquirep1	examples/go/proc.go	/^func acquirep1(_p_ *p) {$/;"	f	language:Go
activationEvents	package.json	/^  "activationEvents": [$/;"	a	language:JSON
add	examples/javascript/expressions.js	/^  add(a, b) {$/;"	m	language:JavaScript	class:x
add_choice_element	examples/cpp/rule.cc	/^static inline void add_choice_element(std::vector<Rule> *elements, const Rule &new_rule) {$/;"	f	language:C++	namespace:tree_sitter::rules	typeref:typename:void	file:
add_trailing_semicolon	examples/rust/ast.rs	/^    pub fn add_trailing_semicolon(mut self) -> Self {$/;"	F	language:Rust	implementation:Stmt
afterfork	examples/go/proc.go	/^func afterfork() {$/;"	f	language:Go
align	examples/go/value.go	/^func align(x, n uintptr) uintptr {$/;"	f	language:Go
alignstack	examples/rust/ast.rs	/^    pub alignstack: bool,$/;"	m	language:Rust	struct:InlineAsm
allgadd	examples/go/proc.go	/^func allgadd(gp *g) {$/;"	f	language:Go
allglock	examples/go/proc.go	/^	allglock mutex$/;"	v	language:Go
allgs	examples/go/proc.go	/^	allgs    []*g$/;"	v	language:Go
allocm	examples/go/proc.go	/^func allocm(_p_ *p, fn func()) *m {$/;"	f	language:Go
angles	textmate/ruby.tmLanguage.json	/^                        "angles": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository
angles	textmate/ruby.tmLanguage.json	/^                        "angles": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository
angles	textmate/ruby.tmLanguage.json	/^                        "angles": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.2.repository
angles	textmate/ruby.tmLanguage.json	/^                        "angles": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.3.repository
angles	textmate/ruby.tmLanguage.json	/^                        "angles": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.4.repository
angles	textmate/ruby.tmLanguage.json	/^                        "angles": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.5.repository
angles	textmate/ruby.tmLanguage.json	/^                        "angles": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository
angles	textmate/ruby.tmLanguage.json	/^                        "angles": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository
angles	textmate/ruby.tmLanguage.json	/^                        "angles": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.8.repository
arrayAt	examples/go/value.go	/^func arrayAt(p unsafe.Pointer, i int, eltSize uintptr) unsafe.Pointer {$/;"	f	language:Go
as_u32	examples/rust/ast.rs	/^    pub fn as_u32(&self) -> u32 {$/;"	F	language:Rust	implementation:NodeId
as_usize	examples/rust/ast.rs	/^    pub fn as_usize(&self) -> usize {$/;"	F	language:Rust	implementation:NodeId
asm	examples/rust/ast.rs	/^    pub asm: Symbol,$/;"	m	language:Rust	struct:GlobalAsm
asm	examples/rust/ast.rs	/^    pub asm: Symbol,$/;"	m	language:Rust	struct:InlineAsm
asm_str_style	examples/rust/ast.rs	/^    pub asm_str_style: StrStyle,$/;"	m	language:Rust	struct:InlineAsm
assert_encodable	examples/rust/ast.rs	/^        fn assert_encodable<T: serialize::Encodable>() {}$/;"	f	language:Rust	function:tests::check_asts_encodable
assignTo	examples/go/value.go	/^func (v Value) assignTo(context string, dst *rtype, target unsafe.Pointer) Value {$/;"	f	language:Go
attribute	textmate/rust.tmLanguage.json	/^		"attribute": {$/;"	o	language:JSON	object:repository
attrs	examples/rust/ast.rs	/^    pub attrs: ThinVec<Attribute>$/;"	m	language:Rust	struct:Expr
attrs	examples/rust/ast.rs	/^    pub attrs: ThinVec<Attribute>,$/;"	m	language:Rust	struct:Field
attrs	examples/rust/ast.rs	/^    pub attrs: ThinVec<Attribute>,$/;"	m	language:Rust	struct:FieldPat
attrs	examples/rust/ast.rs	/^    pub attrs: ThinVec<Attribute>,$/;"	m	language:Rust	struct:LifetimeDef
attrs	examples/rust/ast.rs	/^    pub attrs: ThinVec<Attribute>,$/;"	m	language:Rust	struct:Local
attrs	examples/rust/ast.rs	/^    pub attrs: ThinVec<Attribute>,$/;"	m	language:Rust	struct:TyParam
attrs	examples/rust/ast.rs	/^    pub attrs: Vec<Attribute>,$/;"	m	language:Rust	struct:Arm
attrs	examples/rust/ast.rs	/^    pub attrs: Vec<Attribute>,$/;"	m	language:Rust	struct:Crate
attrs	examples/rust/ast.rs	/^    pub attrs: Vec<Attribute>,$/;"	m	language:Rust	struct:ForeignItem
attrs	examples/rust/ast.rs	/^    pub attrs: Vec<Attribute>,$/;"	m	language:Rust	struct:ImplItem
attrs	examples/rust/ast.rs	/^    pub attrs: Vec<Attribute>,$/;"	m	language:Rust	struct:Item
attrs	examples/rust/ast.rs	/^    pub attrs: Vec<Attribute>,$/;"	m	language:Rust	struct:StructField
attrs	examples/rust/ast.rs	/^    pub attrs: Vec<Attribute>,$/;"	m	language:Rust	struct:TraitItem
attrs	examples/rust/ast.rs	/^    pub attrs: Vec<Attribute>,$/;"	m	language:Rust	struct:Variant_
b	examples/javascript/destructuring.js	/^function b({c} = {}) {}$/;"	f	language:JavaScript
b	examples/javascript/semicolon_insertion.js	/^function a () { function b () {} function *c () {} class D {} return }$/;"	f	language:JavaScript	function:a
b	examples/javascript/statements.js	/^const b = 1;$/;"	C	language:JavaScript
badmcall	examples/go/proc.go	/^func badmcall(fn func(*g)) {$/;"	f	language:Go
badmcall2	examples/go/proc.go	/^func badmcall2(fn func(*g)) {$/;"	f	language:Go
badreflectcall	examples/go/proc.go	/^func badreflectcall() {$/;"	f	language:Go
badunlockosthread	examples/go/proc.go	/^func badunlockosthread() {$/;"	f	language:Go
bar	examples/javascript/expressions.js	/^  bar() {$/;"	m	language:JavaScript	class:Foo
bar	examples/ruby/declarations.rb	/^	def bar$/;"	f	language:Ruby	class:Foo
bar	examples/ruby/declarations.rb	/^	def bar$/;"	f	language:Ruby	module:Foo
beforefork	examples/go/proc.go	/^func beforefork() {$/;"	f	language:Go
begin	textmate/cpp.tmLanguage.json	/^									"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.patterns.0
begin	textmate/cpp.tmLanguage.json	/^									"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\/\/",$/;"	s	language:JSON	object:repository.comments.patterns.4.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\n",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.6
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\n",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.6
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\n",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.4
begin	textmate/cpp.tmLanguage.json	/^							"begin": "\\\\n",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.4
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*(elif)\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*(elif)\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*(else)\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*(else)\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*elif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*elif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*elif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*elif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*elif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*elif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*else\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2
begin	textmate/cpp.tmLanguage.json	/^							"begin": "^\\\\s*((#)\\\\s*else\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2
begin	textmate/cpp.tmLanguage.json	/^					"begin": "'",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5
begin	textmate/cpp.tmLanguage.json	/^					"begin": "'",$/;"	s	language:JSON	object:repository.strings.patterns.2
begin	textmate/cpp.tmLanguage.json	/^					"begin": "(?x)\\n(?!(?:while|for|do|if|else|switch|catch|enumerate|return|typeid|alignof|al/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4
begin	textmate/cpp.tmLanguage.json	/^					"begin": "(^[ \\\\t]+)?(?=\/\/)",$/;"	s	language:JSON	object:repository.comments.patterns.4
begin	textmate/cpp.tmLanguage.json	/^					"begin": "(u|u8|U|L)?R\\"(?:([^ ()\\\\\\\\\\\\t]{0,16})|([^ ()\\\\\\\\\\\\t]*))\\\\(",$/;"	s	language:JSON	object:repository.strings.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "(u|u8|U|L)?\\"",$/;"	s	language:JSON	object:repository.strings.patterns.1
begin	textmate/cpp.tmLanguage.json	/^					"begin": "<",$/;"	s	language:JSON	object:patterns.9.patterns.2
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\/\\\\*",$/;"	s	language:JSON	object:repository.comments.patterns.1
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\"",$/;"	s	language:JSON	object:patterns.9.patterns.1
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\"",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\\\(",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\\\(",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\\\?",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\\\G(?=.)(?!\/\/|\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\\\n",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.2
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\\\n",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2
begin	textmate/cpp.tmLanguage.json	/^					"begin": "\\\\n",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2
begin	textmate/cpp.tmLanguage.json	/^					"begin": "^\\\\s*((#)\\\\s*if(?:n?def)?\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "^\\\\s*((#)\\\\s*if(?:n?def)?\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "^\\\\s*((#)\\\\s*if\\\\b)(?=\\\\s*\\\\(*\\\\b0*1\\\\b\\\\)*\\\\s*(?:$|\/\/|\/\\\\/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "^\\\\s*((#)\\\\s*if\\\\b)(?=\\\\s*\\\\(*\\\\b0*1\\\\b\\\\)*\\\\s*(?:$|\/\/|\/\\\\/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "^\\\\s*((#)\\\\s*if\\\\b)(?=\\\\s*\\\\(*\\\\b0+\\\\b\\\\)*\\\\s*(?:$|\/\/|\/\\\\*/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "^\\\\s*((#)\\\\s*if\\\\b)(?=\\\\s*\\\\(*\\\\b0+\\\\b\\\\)*\\\\s*(?:$|\/\/|\/\\\\*/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "{",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0
begin	textmate/cpp.tmLanguage.json	/^					"begin": "{",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1
begin	textmate/cpp.tmLanguage.json	/^			"begin": "(?x)\\n^\\\\s* ((\\\\#)\\\\s*define) \\\\s+    # define\\n((?<id>[a-zA-Z_$][\\\\w$]/;"	s	language:JSON	object:patterns.8
begin	textmate/cpp.tmLanguage.json	/^			"begin": "^\\\\s*((#)\\\\s*(include(?:_next)?|import))\\\\b\\\\s*",$/;"	s	language:JSON	object:patterns.9
begin	textmate/cpp.tmLanguage.json	/^			"begin": "^\\\\s*((#)\\\\s*elif\\\\b)(?=\\\\s*\\\\(*\\\\b0*1\\\\b\\\\)*\\\\s*(?:$|\/\/|\/\\\\/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif
begin	textmate/cpp.tmLanguage.json	/^			"begin": "^\\\\s*((#)\\\\s*elif\\\\b)(?=\\\\s*\\\\(*\\\\b0*1\\\\b\\\\)*\\\\s*(?:$|\/\/|\/\\\\/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block
begin	textmate/cpp.tmLanguage.json	/^			"begin": "^\\\\s*((#)\\\\s*elif\\\\b)(?=\\\\s*\\\\(*\\\\b0+\\\\b\\\\)*\\\\s*(?:$|\/\/|\/\\\\*/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif
begin	textmate/cpp.tmLanguage.json	/^			"begin": "^\\\\s*((#)\\\\s*else\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else
begin	textmate/cpp.tmLanguage.json	/^			"begin": "^\\\\s*((#)\\\\s*else\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else-block
begin	textmate/go.tmLanguage.json	/^					"begin": "'",$/;"	s	language:JSON	object:repository.runes.patterns.0
begin	textmate/go.tmLanguage.json	/^					"begin": "\/\/",$/;"	s	language:JSON	object:repository.comments.patterns.1
begin	textmate/go.tmLanguage.json	/^					"begin": "\/\\\\*",$/;"	s	language:JSON	object:repository.comments.patterns.0
begin	textmate/go.tmLanguage.json	/^			"begin": "\\"",$/;"	s	language:JSON	object:patterns.1
begin	textmate/go.tmLanguage.json	/^			"begin": "`",$/;"	s	language:JSON	object:patterns.2
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "(?=\\\\\\\\|#\\\\{)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.symbol.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "(?=\\\\\\\\|#\\\\{)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.string.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "<",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "<",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.angles.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "<",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.angles.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "<",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.angles.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "<",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.angles.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "<",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.angles.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "<",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "<",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.angles.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "<",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.angles.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.parens.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.parens.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.parens.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.parens.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.parens.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.parens.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.parens.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\[",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\[",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.brackets.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\[",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.brackets.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\[",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.brackets.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\[",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.brackets.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\[",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.brackets.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\[",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\[",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.brackets.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\[",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.brackets.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.braces.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.braces.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.braces.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.braces.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.braces.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.braces.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                                    "begin": "\\\\{",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.braces.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=<)(?!>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=<)(?!>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=<)(?!>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=<)(?!>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=<)(?!>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=<)(?!>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=<)(?!>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=<)(?!>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=<)(?!>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\()(?!\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\()(?!\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\()(?!\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\()(?!\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\()(?!\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\()(?!\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\()(?!\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\()(?!\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\()(?!\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\[)(?!\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\[)(?!\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\[)(?!\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\[)(?!\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\[)(?!\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\[)(?!\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\[)(?!\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\[)(?!\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\[)(?!\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\{)(?!\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\{)(?!\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\{)(?!\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\{)(?!\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\{)(?!\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\{)(?!\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\{)(?!\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\{)(?!\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                            "begin": "\\\\G(?<=\\\\{)(?!\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "#",$/;"	s	language:JSON	object:patterns.18.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "#\\\\{",$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "%I(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "%Q?(?:([(\\\\[{<])|([^\\\\w\\\\s=]|_))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "%W(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "%i(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "%q(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "%r(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "%s(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "%w(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "%x(?:([(\\\\[{<])|([^\\\\w\\\\s]|_))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?<=^|\\\\s)(#)\\\\s(?=[[a-zA-Z0-9,. \\\\t?!-][^\\\\x{00}-\\\\x{7F/;"	s	language:JSON	object:repository.regex_sub.patterns.6
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?=<?xml|<(?i:html\\\\b)|!DOCTYPE (?i:html\\\\b))",$/;"	s	language:JSON	object:patterns.20.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.27.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.29.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.26.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.25.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.24.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.21.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.28.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.30.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.31.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.23.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "(?><<[-~](\\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1)",$/;"	s	language:JSON	object:patterns.22.patterns.0
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "\\\\(",$/;"	s	language:JSON	object:repository.regex_sub.patterns.5
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "\\\\(\\\\?#",$/;"	s	language:JSON	object:repository.regex_sub.patterns.4
begin	textmate/ruby.tmLanguage.json	/^                    "begin": "\\\\[\\\\^?",$/;"	s	language:JSON	object:repository.regex_sub.patterns.3
begin	textmate/ruby.tmLanguage.json	/^            "begin": "'",$/;"	s	language:JSON	object:patterns.12
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?<=\\\\{|do|\\\\{\\\\s|do\\\\s)(\\\\|)",$/;"	s	language:JSON	object:patterns.34
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)(?:JS|JAVASCRIPT))\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.27
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)(?:SH|SHELL))\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.29
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)C)\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.26
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)CPP)\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.25
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)CSS)\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.24
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)HTML)\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.21
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)JQUERY)\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.28
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)LUA)\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.30
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)RUBY)\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.31
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)SQL)\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.23
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?=(?><<[-~](\\"?)((?:[_\\\\w]+_|)XML)\\\\b\\\\1))",$/;"	s	language:JSON	object:patterns.22
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?><<[-~](\\\\w+))",$/;"	s	language:JSON	object:patterns.33
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(?>=\\\\s*<<(\\\\w+))",$/;"	s	language:JSON	object:patterns.32
begin	textmate/ruby.tmLanguage.json	/^            "begin": "(^[ \\\\t]+)?(?=#)",$/;"	s	language:JSON	object:patterns.18
begin	textmate/ruby.tmLanguage.json	/^            "begin": "\\"",$/;"	s	language:JSON	object:patterns.13
begin	textmate/ruby.tmLanguage.json	/^            "begin": "^<<[-~]?\\\\w+",$/;"	s	language:JSON	object:repository.heredoc
begin	textmate/ruby.tmLanguage.json	/^            "begin": "^=begin",$/;"	s	language:JSON	object:patterns.17
begin	textmate/ruby.tmLanguage.json	/^            "begin": "^__END__\\\\n",$/;"	s	language:JSON	object:patterns.20
begin	textmate/ruby.tmLanguage.json	/^            "begin": "`",$/;"	s	language:JSON	object:patterns.14
begin	textmate/ruby.tmLanguage.json	/^            "begin":$/;"	s	language:JSON	object:patterns.16
begin	textmate/rust.tmLanguage.json	/^					"begin": "#\\\\!?\\\\[",$/;"	s	language:JSON	object:repository.attribute.patterns.0
begin	textmate/rust.tmLanguage.json	/^					"begin": "\/\/",$/;"	s	language:JSON	object:repository.comments.patterns.3
begin	textmate/rust.tmLanguage.json	/^					"begin": "\/\/[!\/](?=[^\/])",$/;"	s	language:JSON	object:repository.comments.patterns.2
begin	textmate/rust.tmLanguage.json	/^					"begin": "\/\\\\*",$/;"	s	language:JSON	object:repository.block_comment.patterns.0
begin	textmate/rust.tmLanguage.json	/^					"begin": "\/\\\\*[\\\\*!](?![\\\\*\/])",$/;"	s	language:JSON	object:repository.block_doc_comment.patterns.0
begin	textmate/rust.tmLanguage.json	/^					"begin": "\\\\b\\\\w+\\\\(",$/;"	s	language:JSON	object:repository.metaItem.patterns.0
begin	textmate/rust.tmLanguage.json	/^					"begin": "b?\\"",$/;"	s	language:JSON	object:repository.literals.patterns.9
begin	textmate/rust.tmLanguage.json	/^					"begin": "b?r(#*)\\"",$/;"	s	language:JSON	object:repository.literals.patterns.10
begin	textmate/rust.tmLanguage.json	/^					"begin": "{",$/;"	s	language:JSON	object:repository.code.patterns.0
begin	textmate/typescript.tmLanguage.json	/^							"begin": "\/\/",$/;"	s	language:JSON	object:repository.comment.patterns.2.patterns.0
begin	textmate/typescript.tmLanguage.json	/^					"begin": "(?<=[=(:,\\\\[?+!]|return|case|=>|&&|\\\\|\\\\||\\\\*\\\\\/)\\\\s*(\/)(?![\/*+?])/;"	s	language:JSON	object:repository.regex.patterns.0
begin	textmate/typescript.tmLanguage.json	/^					"begin": "(\\\\()((\\\\?=)|(\\\\?!))",$/;"	s	language:JSON	object:repository.regexp.patterns.4
begin	textmate/typescript.tmLanguage.json	/^					"begin": "(\\\\[)(\\\\^)?",$/;"	s	language:JSON	object:repository.regexp.patterns.6
begin	textmate/typescript.tmLanguage.json	/^					"begin": "(^[ \\\\t]+)?(?=\/\/)",$/;"	s	language:JSON	object:repository.comment.patterns.2
begin	textmate/typescript.tmLanguage.json	/^					"begin": "\/(?![\/*])(?=(?:[^\/\\\\\\\\\\\\[]|\\\\\\\\.|\\\\[([^\\\\]\\\\\\\\]|\\\\\\\\.)+\\/;"	s	language:JSON	object:repository.regex.patterns.1
begin	textmate/typescript.tmLanguage.json	/^					"begin": "\/\\\\*",$/;"	s	language:JSON	object:repository.comment.patterns.1
begin	textmate/typescript.tmLanguage.json	/^					"begin": "\/\\\\*\\\\*(?!\/)",$/;"	s	language:JSON	object:repository.comment.patterns.0
begin	textmate/typescript.tmLanguage.json	/^					"begin": "\\\\((\\\\?:)?",$/;"	s	language:JSON	object:repository.regexp.patterns.5
begin	textmate/typescript.tmLanguage.json	/^			"begin": "'",$/;"	s	language:JSON	object:repository.qstring-single
begin	textmate/typescript.tmLanguage.json	/^			"begin": "(?<!\\\\.|\\\\$)\\\\@",$/;"	s	language:JSON	object:repository.decorator
begin	textmate/typescript.tmLanguage.json	/^			"begin": "([_$[:alpha:]][_$[:alnum:]]*)?(`)",$/;"	s	language:JSON	object:repository.template
begin	textmate/typescript.tmLanguage.json	/^			"begin": "\\"",$/;"	s	language:JSON	object:repository.qstring-double
begin	textmate/typescript.tmLanguage.json	/^			"begin": "\\\\$\\\\{",$/;"	s	language:JSON	object:repository.template-substitution-element
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.comments.patterns.4.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2
beginCaptures	textmate/cpp.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:patterns.9.patterns.1
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:patterns.9.patterns.2
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.comments.patterns.1
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.comments.patterns.4
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.strings.patterns.0
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.strings.patterns.1
beginCaptures	textmate/cpp.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.strings.patterns.2
beginCaptures	textmate/cpp.tmLanguage.json	/^			"beginCaptures": {$/;"	o	language:JSON	object:patterns.8
beginCaptures	textmate/cpp.tmLanguage.json	/^			"beginCaptures": {$/;"	o	language:JSON	object:patterns.9
beginCaptures	textmate/cpp.tmLanguage.json	/^			"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-elif
beginCaptures	textmate/cpp.tmLanguage.json	/^			"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif
beginCaptures	textmate/cpp.tmLanguage.json	/^			"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-elif-block
beginCaptures	textmate/cpp.tmLanguage.json	/^			"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-else
beginCaptures	textmate/cpp.tmLanguage.json	/^			"beginCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-else-block
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.21.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.22.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.23.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.24.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.25.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.26.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.27.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.28.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.29.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.30.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:patterns.31.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.2
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.3
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.4
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.5
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.8
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.3
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.4
beginCaptures	textmate/ruby.tmLanguage.json	/^                    "beginCaptures": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.6
beginCaptures	textmate/ruby.tmLanguage.json	/^            "beginCaptures": {$/;"	o	language:JSON	object:patterns.18
beginCaptures	textmate/ruby.tmLanguage.json	/^            "beginCaptures": {$/;"	o	language:JSON	object:patterns.32
beginCaptures	textmate/ruby.tmLanguage.json	/^            "beginCaptures": {$/;"	o	language:JSON	object:patterns.33
beginCaptures	textmate/rust.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.attribute.patterns.0
beginCaptures	textmate/rust.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.metaItem.patterns.0
beginCaptures	textmate/typescript.tmLanguage.json	/^							"beginCaptures": {$/;"	o	language:JSON	object:repository.comment.patterns.2.patterns.0
beginCaptures	textmate/typescript.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.regex.patterns.0
beginCaptures	textmate/typescript.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.regex.patterns.1
beginCaptures	textmate/typescript.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.regexp.patterns.4
beginCaptures	textmate/typescript.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.regexp.patterns.5
beginCaptures	textmate/typescript.tmLanguage.json	/^					"beginCaptures": {$/;"	o	language:JSON	object:repository.regexp.patterns.6
beginCaptures	textmate/typescript.tmLanguage.json	/^			"beginCaptures": {$/;"	o	language:JSON	object:repository.template
beginning_vert	examples/rust/ast.rs	/^    pub beginning_vert: Option<Span>, \/\/ For RFC 1925 feature gate$/;"	m	language:Rust	struct:Arm
benchmark	package.json	/^    "benchmark": "npm run compile && node .\/out\/benchmark",$/;"	s	language:JSON	object:scripts
binary	examples/go/letter_test.go	/^func binary(ranges []Range16, r uint16) bool {$/;"	f	language:Go
bindings	examples/rust/ast.rs	/^    pub bindings: Vec<TypeBinding>,$/;"	m	language:Rust	struct:AngleBracketedParameterData
bit_width	examples/rust/ast.rs	/^    pub fn bit_width(&self) -> Option<usize> {$/;"	F	language:Rust	implementation:IntTy
bit_width	examples/rust/ast.rs	/^    pub fn bit_width(&self) -> Option<usize> {$/;"	F	language:Rust	implementation:UintTy
bit_width	examples/rust/ast.rs	/^    pub fn bit_width(&self) -> usize {$/;"	F	language:Rust	implementation:FloatTy
block_comment	textmate/rust.tmLanguage.json	/^		"block_comment": {$/;"	o	language:JSON	object:repository
block_doc_comment	textmate/rust.tmLanguage.json	/^		"block_doc_comment": {$/;"	o	language:JSON	object:repository
body	examples/rust/ast.rs	/^    pub body: P<Expr>,$/;"	m	language:Rust	struct:Arm
bound_generic_params	examples/rust/ast.rs	/^    pub bound_generic_params: Vec<GenericParam>,$/;"	m	language:Rust	struct:PolyTraitRef
bound_generic_params	examples/rust/ast.rs	/^    pub bound_generic_params: Vec<GenericParam>,$/;"	m	language:Rust	struct:WhereBoundPredicate
boundaries	examples/cpp/marker-index.h	/^    std::vector<Boundary> boundaries;$/;"	m	language:C++	struct:MarkerIndex::BoundaryQueryResult	typeref:typename:std::vector<Boundary>
bounded_ty	examples/rust/ast.rs	/^    pub bounded_ty: P<Ty>,$/;"	m	language:Rust	struct:WhereBoundPredicate
bounds	examples/rust/ast.rs	/^    pub bounds: TyParamBounds,$/;"	m	language:Rust	struct:TyParam
bounds	examples/rust/ast.rs	/^    pub bounds: TyParamBounds,$/;"	m	language:Rust	struct:WhereBoundPredicate
bounds	examples/rust/ast.rs	/^    pub bounds: Vec<Lifetime>$/;"	m	language:Rust	struct:LifetimeDef
bounds	examples/rust/ast.rs	/^    pub bounds: Vec<Lifetime>,$/;"	m	language:Rust	struct:WhereRegionPredicate
braces	textmate/ruby.tmLanguage.json	/^                        "braces": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository
braces	textmate/ruby.tmLanguage.json	/^                        "braces": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository
braces	textmate/ruby.tmLanguage.json	/^                        "braces": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.2.repository
braces	textmate/ruby.tmLanguage.json	/^                        "braces": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.3.repository
braces	textmate/ruby.tmLanguage.json	/^                        "braces": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.4.repository
braces	textmate/ruby.tmLanguage.json	/^                        "braces": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.5.repository
braces	textmate/ruby.tmLanguage.json	/^                        "braces": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository
braces	textmate/ruby.tmLanguage.json	/^                        "braces": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository
braces	textmate/ruby.tmLanguage.json	/^                        "braces": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.8.repository
brackets	textmate/ruby.tmLanguage.json	/^                        "brackets": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository
brackets	textmate/ruby.tmLanguage.json	/^                        "brackets": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository
brackets	textmate/ruby.tmLanguage.json	/^                        "brackets": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.2.repository
brackets	textmate/ruby.tmLanguage.json	/^                        "brackets": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.3.repository
brackets	textmate/ruby.tmLanguage.json	/^                        "brackets": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.4.repository
brackets	textmate/ruby.tmLanguage.json	/^                        "brackets": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.5.repository
brackets	textmate/ruby.tmLanguage.json	/^                        "brackets": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository
brackets	textmate/ruby.tmLanguage.json	/^                        "brackets": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository
brackets	textmate/ruby.tmLanguage.json	/^                        "brackets": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.8.repository
build	package.json	/^    "build": "vsce package -o build.vsix",$/;"	s	language:JSON	object:scripts
buildVersion	examples/go/proc.go	/^var buildVersion = sys.TheVersion$/;"	v	language:Go
bundledDependencies	package.json	/^  "bundledDependencies": [$/;"	a	language:JSON
c	examples/javascript/expressions.js	/^  , c = d$/;"	v	language:JavaScript
c	examples/javascript/expressions.js	/^c = {d: (3, 4 + 5, 6)};$/;"	c	language:JavaScript
c	examples/javascript/expressions.js	/^var x = { c: "d", "e": f, 1: 2 };$/;"	p	language:JavaScript	class:x
c	examples/javascript/semicolon_insertion.js	/^function a () { function b () {} function *c () {} class D {} return }$/;"	g	language:JavaScript	class:a
c	examples/javascript/semicolon_insertion.js	/^function c() {return d}$/;"	f	language:JavaScript
c	examples/javascript/semicolon_insertion.js	/^let b \/* comment between declarators *\/, c$/;"	v	language:JavaScript
c	examples/javascript/statements.js	/^const c = 1;$/;"	C	language:JavaScript
calibrate	examples/go/letter_test.go	/^var calibrate = flag.Bool("calibrate", false, "compute crossover for linear vs. binary search")$/;"	v	language:Go
call	examples/go/value.go	/^func (v Value) call(op string, in []Value) []Value {$/;"	f	language:Go
call	examples/go/value.go	/^func call(argtype *rtype, fn, arg unsafe.Pointer, n uint32, retoffset uint32)$/;"	f	language:Go
callGC	examples/go/value.go	/^var callGC bool \/\/ for testing; see TestCallMethodJump$/;"	v	language:Go
callMethod	examples/go/value.go	/^func callMethod(ctxt *methodValue, frame unsafe.Pointer) {$/;"	f	language:Go
callReflect	examples/go/value.go	/^func callReflect(ctxt *makeFuncImpl, frame unsafe.Pointer) {$/;"	f	language:Go
cannotSet	examples/go/value.go	/^const cannotSet = "cannot set value obtained from unexported struct field"$/;"	c	language:Go
capabilities	package.json	/^  "capabilities": {$/;"	o	language:JSON
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.comments.patterns.0
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.comments.patterns.3
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.keywords.patterns.0
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.keywords.patterns.1
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.keywords.patterns.2
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.keywords.patterns.3
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.line_continuation_character.patterns.0
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.1
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.1
captures	textmate/cpp.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.string_placeholder.patterns.1
captures	textmate/go.tmLanguage.json	/^			"captures": {$/;"	o	language:JSON	object:patterns.3
captures	textmate/go.tmLanguage.json	/^			"captures": {$/;"	o	language:JSON	object:patterns.4
captures	textmate/go.tmLanguage.json	/^			"captures": {$/;"	o	language:JSON	object:patterns.5
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.1
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.1
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.1
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.1
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository.symbol.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository.angles.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository.braces.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository.brackets.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository.parens.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.1
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.1
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.1
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.1
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository.string.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository.angles.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository.braces.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository.brackets.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                                    "captures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository.parens.patterns.0
captures	textmate/ruby.tmLanguage.json	/^                    "captures": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.1
captures	textmate/ruby.tmLanguage.json	/^                    "captures": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.2
captures	textmate/ruby.tmLanguage.json	/^                    "captures": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.3
captures	textmate/ruby.tmLanguage.json	/^                    "captures": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.2
captures	textmate/ruby.tmLanguage.json	/^                    "captures": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.5
captures	textmate/ruby.tmLanguage.json	/^            "captures": {$/;"	o	language:JSON	object:patterns.16
captures	textmate/ruby.tmLanguage.json	/^            "captures": {$/;"	o	language:JSON	object:patterns.20
captures	textmate/ruby.tmLanguage.json	/^            "captures": {$/;"	o	language:JSON	object:patterns.34
captures	textmate/ruby.tmLanguage.json	/^            "captures": {$/;"	o	language:JSON	object:patterns.41
captures	textmate/ruby.tmLanguage.json	/^            "captures": {$/;"	o	language:JSON	object:patterns.47
captures	textmate/ruby.tmLanguage.json	/^            "captures": {$/;"	o	language:JSON	object:patterns.48
captures	textmate/typescript.tmLanguage.json	/^							"captures": {$/;"	o	language:JSON	object:repository.regexp.patterns.6.patterns.0
captures	textmate/typescript.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.comment.patterns.0
captures	textmate/typescript.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.comment.patterns.1
captures	textmate/typescript.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.docblock.patterns.1
captures	textmate/typescript.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.docblock.patterns.2
captures	textmate/typescript.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.keyword.patterns.0
captures	textmate/typescript.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.keyword.patterns.1
captures	textmate/typescript.tmLanguage.json	/^					"captures": {$/;"	o	language:JSON	object:repository.numeric-literal.patterns.3
cas	examples/go/letter_test.go	/^	cas     int$/;"	m	language:Go	struct:caseT
caseString	examples/go/letter_test.go	/^func caseString(c int) string {$/;"	f	language:Go
caseT	examples/go/letter_test.go	/^type caseT struct {$/;"	s	language:Go
caseTest	examples/go/letter_test.go	/^var caseTest = []caseT{$/;"	v	language:Go
casfrom_Gscanstatus	examples/go/proc.go	/^func casfrom_Gscanstatus(gp *g, oldval, newval uint32) {$/;"	f	language:Go
casgcopystack	examples/go/proc.go	/^func casgcopystack(gp *g) uint32 {$/;"	f	language:Go
casgstatus	examples/go/proc.go	/^func casgstatus(gp *g, oldval, newval uint32) {$/;"	f	language:Go
castogscanstatus	examples/go/proc.go	/^func castogscanstatus(gp *g, oldval, newval uint32) bool {$/;"	f	language:Go
categories	package.json	/^  "categories": [$/;"	a	language:JSON
cgoThreadStart	examples/go/proc.go	/^var cgoThreadStart unsafe.Pointer$/;"	v	language:Go
cgothreadstart	examples/go/proc.go	/^type cgothreadstart struct {$/;"	s	language:Go
ch	examples/go/value.go	/^	ch  unsafe.Pointer \/\/ channel$/;"	m	language:Go	struct:runtimeSelect
chancap	examples/go/value.go	/^func chancap(ch unsafe.Pointer) int$/;"	f	language:Go
chanclose	examples/go/value.go	/^func chanclose(ch unsafe.Pointer)$/;"	f	language:Go
chanlen	examples/go/value.go	/^func chanlen(ch unsafe.Pointer) int$/;"	f	language:Go
chanrecv	examples/go/value.go	/^func chanrecv(t *rtype, ch unsafe.Pointer, nb bool, val unsafe.Pointer) (selected, received bool/;"	f	language:Go
chansend	examples/go/value.go	/^func chansend(t *rtype, ch unsafe.Pointer, val unsafe.Pointer, nb bool) bool$/;"	f	language:Go
check_asts_encodable	examples/rust/ast.rs	/^    fn check_asts_encodable() {$/;"	f	language:Rust	module:tests
checkdead	examples/go/proc.go	/^func checkdead() {$/;"	f	language:Go
checkmcount	examples/go/proc.go	/^func checkmcount() {$/;"	f	language:Go
choice	examples/cpp/rule.cc	/^Rule Rule::choice(const vector<Rule> &rules) {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule
clobbers	examples/rust/ast.rs	/^    pub clobbers: Vec<Symbol>,$/;"	m	language:Rust	struct:InlineAsm
code	textmate/rust.tmLanguage.json	/^		"code": {$/;"	o	language:JSON	object:repository
comment	textmate/cpp.tmLanguage.json	/^					"comment": "Terminator",$/;"	s	language:JSON	object:repository.keywords.patterns.4
comment	textmate/go.tmLanguage.json	/^					"comment": "Flow control keywords",$/;"	s	language:JSON	object:repository.keywords.patterns.0
comment	textmate/go.tmLanguage.json	/^					"comment": "Functions",$/;"	s	language:JSON	object:repository.keywords.patterns.8
comment	textmate/go.tmLanguage.json	/^					"comment": "Syntax error numeric literals",$/;"	s	language:JSON	object:repository.keywords.patterns.7
comment	textmate/go.tmLanguage.json	/^			"comment": "Floating-point literals",$/;"	s	language:JSON	object:patterns.6
comment	textmate/go.tmLanguage.json	/^			"comment": "Integers",$/;"	s	language:JSON	object:patterns.7
comment	textmate/go.tmLanguage.json	/^			"comment": "Interpreted string literals",$/;"	s	language:JSON	object:patterns.1
comment	textmate/go.tmLanguage.json	/^			"comment": "Language constants",$/;"	s	language:JSON	object:patterns.8
comment	textmate/go.tmLanguage.json	/^			"comment": "Note that the order here is very important!",$/;"	s	language:JSON	object:repository.operators
comment	textmate/go.tmLanguage.json	/^			"comment": "Raw string literals",$/;"	s	language:JSON	object:patterns.2
comment	textmate/go.tmLanguage.json	/^			"comment": "Syntax error receiving channels",$/;"	s	language:JSON	object:patterns.3
comment	textmate/go.tmLanguage.json	/^			"comment": "Syntax error sending channels",$/;"	s	language:JSON	object:patterns.4
comment	textmate/go.tmLanguage.json	/^			"comment": "Syntax error using slices",$/;"	s	language:JSON	object:patterns.5
comment	textmate/go.tmLanguage.json	/^			"comment": "Terminators",$/;"	s	language:JSON	object:patterns.9
comment	textmate/go.tmLanguage.json	/^	"comment": "Go language",$/;"	s	language:JSON
comment	textmate/ruby.tmLanguage.json	/^                    "comment":$/;"	s	language:JSON	object:repository.regex_sub.patterns.6
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded c",$/;"	s	language:JSON	object:patterns.26
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded c++",$/;"	s	language:JSON	object:patterns.25
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded css",$/;"	s	language:JSON	object:patterns.24
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded html",$/;"	s	language:JSON	object:patterns.21
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded jQuery javascript",$/;"	s	language:JSON	object:patterns.28
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded javascript",$/;"	s	language:JSON	object:patterns.27
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded lua",$/;"	s	language:JSON	object:patterns.30
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded ruby",$/;"	s	language:JSON	object:patterns.31
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded shell",$/;"	s	language:JSON	object:patterns.29
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded sql",$/;"	s	language:JSON	object:patterns.23
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Heredoc with embedded xml",$/;"	s	language:JSON	object:patterns.22
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Make sure this goes after assignment and comparison",$/;"	s	language:JSON	object:patterns.40
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Mark as method separator if double colons not followed by capital letter/;"	s	language:JSON	object:patterns.48
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Mark as namespace separator if double colons followed by capital letter"/;"	s	language:JSON	object:patterns.47
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Must come after method and constant separators to prefer double colons",$/;"	s	language:JSON	object:patterns.49
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Needs higher precidence than regular expressions.",$/;"	s	language:JSON	object:patterns.11
comment	textmate/ruby.tmLanguage.json	/^            "comment": "Safe navigation operator - Added in 2.3",$/;"	s	language:JSON	object:patterns.41
comment	textmate/ruby.tmLanguage.json	/^            "comment": "These aren't actual keywords, but they're builtin methods that basically/;"	s	language:JSON	object:patterns.3
comment	textmate/ruby.tmLanguage.json	/^            "comment": "These aren't actual keywords, but they're builtin methods that basically/;"	s	language:JSON	object:patterns.4
comment	textmate/ruby.tmLanguage.json	/^            "comment": "__END__ marker",$/;"	s	language:JSON	object:patterns.20
comment	textmate/ruby.tmLanguage.json	/^            "comment": "double quoted string (allows for interpolation)",$/;"	s	language:JSON	object:patterns.13
comment	textmate/ruby.tmLanguage.json	/^            "comment": "execute string (allows for interpolation)",$/;"	s	language:JSON	object:patterns.14
comment	textmate/ruby.tmLanguage.json	/^            "comment": "heredoc with indented terminator",$/;"	s	language:JSON	object:patterns.33
comment	textmate/ruby.tmLanguage.json	/^            "comment": "multiline comments",$/;"	s	language:JSON	object:patterns.17
comment	textmate/ruby.tmLanguage.json	/^            "comment": "single quoted string (does not allow interpolation)",$/;"	s	language:JSON	object:patterns.12
comment	textmate/ruby.tmLanguage.json	/^            "comment":$/;"	s	language:JSON	object:patterns.16
comment	textmate/ruby.tmLanguage.json	/^            "comment":$/;"	s	language:JSON	object:patterns.19
comment	textmate/rust.tmLanguage.json	/^					"comment": "Arithmetic operator",$/;"	s	language:JSON	object:repository.keywords.patterns.5
comment	textmate/rust.tmLanguage.json	/^					"comment": "Assignment operator",$/;"	s	language:JSON	object:repository.keywords.patterns.4
comment	textmate/rust.tmLanguage.json	/^					"comment": "Attribute",$/;"	s	language:JSON	object:repository.attribute.patterns.0
comment	textmate/rust.tmLanguage.json	/^					"comment": "Block comment",$/;"	s	language:JSON	object:repository.block_comment.patterns.0
comment	textmate/rust.tmLanguage.json	/^					"comment": "Block documentation comment",$/;"	s	language:JSON	object:repository.block_doc_comment.patterns.0
comment	textmate/rust.tmLanguage.json	/^					"comment": "Boolean literals",$/;"	s	language:JSON	object:repository.literals.patterns.0
comment	textmate/rust.tmLanguage.json	/^					"comment": "By entering a block, we stop matching any top-level patterns that aren't inside/;"	s	language:JSON	object:repository.code.patterns.0
comment	textmate/rust.tmLanguage.json	/^					"comment": "Comparison operator (second group because of regex precedence)",$/;"	s	language:JSON	object:repository.keywords.patterns.7
comment	textmate/rust.tmLanguage.json	/^					"comment": "Comparison operator",$/;"	s	language:JSON	object:repository.keywords.patterns.3
comment	textmate/rust.tmLanguage.json	/^					"comment": "Control keywords",$/;"	s	language:JSON	object:repository.keywords.patterns.1
comment	textmate/rust.tmLanguage.json	/^					"comment": "Double-quote string literal",$/;"	s	language:JSON	object:repository.literals.patterns.9
comment	textmate/rust.tmLanguage.json	/^					"comment": "Floating point literal (exponent)",$/;"	s	language:JSON	object:repository.literals.patterns.2
comment	textmate/rust.tmLanguage.json	/^					"comment": "Floating point literal (fraction)",$/;"	s	language:JSON	object:repository.literals.patterns.1
comment	textmate/rust.tmLanguage.json	/^					"comment": "Floating point literal (typed)",$/;"	s	language:JSON	object:repository.literals.patterns.3
comment	textmate/rust.tmLanguage.json	/^					"comment": "Integer literal (binary)",$/;"	s	language:JSON	object:repository.literals.patterns.7
comment	textmate/rust.tmLanguage.json	/^					"comment": "Integer literal (decimal)",$/;"	s	language:JSON	object:repository.literals.patterns.4
comment	textmate/rust.tmLanguage.json	/^					"comment": "Integer literal (hexadecimal)",$/;"	s	language:JSON	object:repository.literals.patterns.5
comment	textmate/rust.tmLanguage.json	/^					"comment": "Integer literal (octal)",$/;"	s	language:JSON	object:repository.literals.patterns.6
comment	textmate/rust.tmLanguage.json	/^					"comment": "Miscellaneous operator",$/;"	s	language:JSON	object:repository.keywords.patterns.2
comment	textmate/rust.tmLanguage.json	/^					"comment": "Raw double-quote string literal",$/;"	s	language:JSON	object:repository.literals.patterns.10
comment	textmate/rust.tmLanguage.json	/^					"comment": "Regular keywords",$/;"	s	language:JSON	object:repository.keywords.patterns.0
comment	textmate/rust.tmLanguage.json	/^					"comment": "Sigil",$/;"	s	language:JSON	object:repository.keywords.patterns.6
comment	textmate/rust.tmLanguage.json	/^					"comment": "Single-line comment",$/;"	s	language:JSON	object:repository.comments.patterns.3
comment	textmate/rust.tmLanguage.json	/^					"comment": "Single-line documentation comment",$/;"	s	language:JSON	object:repository.comments.patterns.2
comment	textmate/rust.tmLanguage.json	/^					"comment": "Single-quote string literal (character)",$/;"	s	language:JSON	object:repository.literals.patterns.8
comment	textmate/rust.tmLanguage.json	/^					"comment": "Terminator",$/;"	s	language:JSON	object:repository.keywords.patterns.8
comment	textmate/rust.tmLanguage.json	/^			"comment": "Keywords that have a different meaning when used at top-level",$/;"	s	language:JSON	object:patterns.0
comment	textmate/typescript.tmLanguage.json	/^					"comment": "Terminator",$/;"	s	language:JSON	object:repository.keyword.patterns.4
comment	textmate/typescript.tmLanguage.json	/^		"comment": {$/;"	o	language:JSON	object:repository
comments	textmate/cpp.tmLanguage.json	/^		"comments": {$/;"	o	language:JSON	object:repository
comments	textmate/go.tmLanguage.json	/^		"comments": {$/;"	o	language:JSON	object:repository
comments	textmate/rust.tmLanguage.json	/^		"comments": {$/;"	o	language:JSON	object:repository
compile	package.json	/^    "compile": "tsc -p .\/ && make parsers",$/;"	s	language:JSON	object:scripts
compilerOptions	tsconfig.json	/^	"compilerOptions": {$/;"	o	language:JSON
constants	textmate/cpp.tmLanguage.json	/^		"constants": {$/;"	o	language:JSON	object:repository
constness	examples/rust/ast.rs	/^    pub constness: Spanned<Constness>,$/;"	m	language:Rust	struct:MethodSig
constraint	examples/rust/ast.rs	/^    pub constraint: Symbol,$/;"	m	language:Rust	struct:InlineAsmOutput
constructor	examples/javascript/expressions.js	/^  constructor() {$/;"	m	language:JavaScript	class:Foo
containing_start	examples/cpp/marker-index.h	/^    std::vector<MarkerId> containing_start;$/;"	m	language:C++	struct:MarkerIndex::BoundaryQueryResult	typeref:typename:std::vector<MarkerId>
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.elif-branch.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.elif-branch.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.elif-branch.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.elif-branch.in-block.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.else-branch.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.else-branch.in-block.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.if-branch.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.6
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.if-branch.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.if-branch.in-block.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.6
contentName	textmate/cpp.tmLanguage.json	/^							"contentName": "comment.block.preprocessor.if-branch.in-block.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3
contentName	textmate/cpp.tmLanguage.json	/^					"contentName": "comment.block.preprocessor.elif-branch.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.2
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.c",$/;"	s	language:JSON	object:patterns.26.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.c++",$/;"	s	language:JSON	object:patterns.25.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.css",$/;"	s	language:JSON	object:patterns.24.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.js",$/;"	s	language:JSON	object:patterns.27.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.js.jquery",$/;"	s	language:JSON	object:patterns.28.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.lua",$/;"	s	language:JSON	object:patterns.30.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.ruby",$/;"	s	language:JSON	object:patterns.31.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.ruby",$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.shell",$/;"	s	language:JSON	object:patterns.29.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "source.sql",$/;"	s	language:JSON	object:patterns.23.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "text.html",$/;"	s	language:JSON	object:patterns.21.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^                    "contentName": "text.xml",$/;"	s	language:JSON	object:patterns.22.patterns.0
contentName	textmate/ruby.tmLanguage.json	/^            "contentName": "string.regexp.classic.ruby",$/;"	s	language:JSON	object:patterns.16
contentName	textmate/ruby.tmLanguage.json	/^            "contentName": "text.plain",$/;"	s	language:JSON	object:patterns.20
contributes	package.json	/^  "contributes": {},$/;"	o	language:JSON
convertOp	examples/go/value.go	/^func convertOp(dst, src *rtype) func(Value, Type) Value {$/;"	f	language:Go
crate_root	examples/rust/ast.rs	/^    pub fn crate_root(span: Span) -> Self {$/;"	F	language:Rust	implementation:PathSegment
ctxt	examples/rust/ast.rs	/^    pub ctxt: SyntaxContext,$/;"	m	language:Rust	struct:GlobalAsm
ctxt	examples/rust/ast.rs	/^    pub ctxt: SyntaxContext,$/;"	m	language:Rust	struct:InlineAsm
current_node	examples/cpp/marker-index.h	/^    Node *current_node;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:Node *
current_node_position	examples/cpp/marker-index.h	/^    Point current_node_position;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:Point
cvtBytesString	examples/go/value.go	/^func cvtBytesString(v Value, t Type) Value {$/;"	f	language:Go
cvtComplex	examples/go/value.go	/^func cvtComplex(v Value, t Type) Value {$/;"	f	language:Go
cvtDirect	examples/go/value.go	/^func cvtDirect(v Value, typ Type) Value {$/;"	f	language:Go
cvtFloat	examples/go/value.go	/^func cvtFloat(v Value, t Type) Value {$/;"	f	language:Go
cvtFloatInt	examples/go/value.go	/^func cvtFloatInt(v Value, t Type) Value {$/;"	f	language:Go
cvtFloatUint	examples/go/value.go	/^func cvtFloatUint(v Value, t Type) Value {$/;"	f	language:Go
cvtI2I	examples/go/value.go	/^func cvtI2I(v Value, typ Type) Value {$/;"	f	language:Go
cvtInt	examples/go/value.go	/^func cvtInt(v Value, t Type) Value {$/;"	f	language:Go
cvtIntFloat	examples/go/value.go	/^func cvtIntFloat(v Value, t Type) Value {$/;"	f	language:Go
cvtIntString	examples/go/value.go	/^func cvtIntString(v Value, t Type) Value {$/;"	f	language:Go
cvtRunesString	examples/go/value.go	/^func cvtRunesString(v Value, t Type) Value {$/;"	f	language:Go
cvtStringBytes	examples/go/value.go	/^func cvtStringBytes(v Value, t Type) Value {$/;"	f	language:Go
cvtStringRunes	examples/go/value.go	/^func cvtStringRunes(v Value, t Type) Value {$/;"	f	language:Go
cvtT2I	examples/go/value.go	/^func cvtT2I(v Value, typ Type) Value {$/;"	f	language:Go
cvtUint	examples/go/value.go	/^func cvtUint(v Value, t Type) Value {$/;"	f	language:Go
cvtUintFloat	examples/go/value.go	/^func cvtUintFloat(v Value, t Type) Value {$/;"	f	language:Go
cvtUintString	examples/go/value.go	/^func cvtUintString(v Value, t Type) Value {$/;"	f	language:Go
d	examples/javascript/expressions.js	/^c = {d: (3, 4 + 5, 6)};$/;"	p	language:JavaScript	class:c
d	examples/javascript/statements.js	/^const d = 1;$/;"	C	language:JavaScript
data	examples/rust/ast.rs	/^    pub data: VariantData,$/;"	m	language:Rust	struct:Variant_
debug	package.json	/^    "debug": "npm run compile && node --nolazy --inspect-brk=9229 .\/out\/test",$/;"	s	language:JSON	object:scripts
dec	examples/ruby/classes.rb	/^def b.dec$/;"	F	language:Ruby
decl	examples/rust/ast.rs	/^    pub decl: P<FnDecl>$/;"	m	language:Rust	struct:BareFnTy
decl	examples/rust/ast.rs	/^    pub decl: P<FnDecl>,$/;"	m	language:Rust	struct:MethodSig
decorator	textmate/typescript.tmLanguage.json	/^		"decorator": {$/;"	o	language:JSON	object:repository
default	examples/rust/ast.rs	/^    fn default() ->  Generics {$/;"	F	language:Rust	implementation:Generics
default	examples/rust/ast.rs	/^    pub default: Option<P<Ty>>,$/;"	m	language:Rust	struct:TyParam
default_decode	examples/rust/ast.rs	/^    fn default_decode<D: Decoder>(d: &mut D) -> Result<NodeId, D::Error> {$/;"	F	language:Rust	implementation:NodeId
default_encode	examples/rust/ast.rs	/^    fn default_encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {$/;"	F	language:Rust	implementation:NodeId
default_to_global	examples/rust/ast.rs	/^    pub fn default_to_global(mut self) -> Path {$/;"	F	language:Rust	implementation:Path
defaultness	examples/rust/ast.rs	/^    pub defaultness: Defaultness,$/;"	m	language:Rust	struct:ImplItem
dependencies	package.json	/^  "dependencies": {$/;"	o	language:JSON
description	package.json	/^  "description": "Access document syntax using tree-sitter",$/;"	s	language:JSON
descriptive_variant	examples/rust/ast.rs	/^    pub fn descriptive_variant(&self) -> &str {$/;"	F	language:Rust	implementation:ForeignItemKind
descriptive_variant	examples/rust/ast.rs	/^    pub fn descriptive_variant(&self) -> &str {$/;"	F	language:Rust	implementation:ItemKind
destroy_value	examples/cpp/rule.cc	/^static void destroy_value(Rule *rule) {$/;"	f	language:C++	namespace:tree_sitter::rules	typeref:typename:void	file:
devDependencies	package.json	/^  "devDependencies": {$/;"	o	language:JSON
dialect	examples/rust/ast.rs	/^    pub dialect: AsmDialect,$/;"	m	language:Rust	struct:InlineAsm
dir	examples/go/value.go	/^	dir uintptr        \/\/ 0, SendDir, or RecvDir$/;"	m	language:Go	struct:runtimeSelect
displayName	package.json	/^  "displayName": "Parse tree",$/;"	s	language:JSON
disr_expr	examples/rust/ast.rs	/^    pub disr_expr: Option<P<Expr>>,$/;"	m	language:Rust	struct:Variant_
docblock	textmate/typescript.tmLanguage.json	/^		"docblock": {$/;"	o	language:JSON	object:repository
dolockOSThread	examples/go/proc.go	/^func dolockOSThread() {$/;"	f	language:Go
dounlockOSThread	examples/go/proc.go	/^func dounlockOSThread() {$/;"	f	language:Go
dropg	examples/go/proc.go	/^func dropg() {$/;"	f	language:Go
dropm	examples/go/proc.go	/^func dropm() {$/;"	f	language:Go
dummy	examples/go/value.go	/^var dummy struct {$/;"	v	language:Go
dumpgstatus	examples/go/proc.go	/^func dumpgstatus(gp *g) {$/;"	f	language:Go
e	examples/javascript/expressions.js	/^  , e = f;$/;"	v	language:JavaScript
e	examples/javascript/expressions.js	/^var x = { c: "d", "e": f, 1: 2 };$/;"	p	language:JavaScript	class:x
earlycgocallback	examples/go/proc.go	/^var earlycgocallback = []byte("fatal error: cgo callback before cgo call\\n")$/;"	v	language:Go
electron-rebuild	package.json	/^    "electron-rebuild": "^2.3.5",$/;"	s	language:JSON	object:devDependencies
emptyInterface	examples/go/value.go	/^type emptyInterface struct {$/;"	s	language:Go
end	textmate/cpp.tmLanguage.json	/^									"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.patterns.0
end	textmate/cpp.tmLanguage.json	/^									"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=\\\\n)",$/;"	s	language:JSON	object:repository.comments.patterns.4.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:elif|else|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:elif|else|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:else|elif|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.6
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:else|elif|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.6
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:else|elif|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:else|elif|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.4
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:else|elif|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:else|elif|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:else|elif|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*(?:else|elif|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.4
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*endif\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*endif\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*endif\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0
end	textmate/cpp.tmLanguage.json	/^							"end": "(?=^\\\\s*((#)\\\\s*endif\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2
end	textmate/cpp.tmLanguage.json	/^					"end": "'",$/;"	s	language:JSON	object:repository.strings.patterns.2
end	textmate/cpp.tmLanguage.json	/^					"end": "'|(?<!\\\\\\\\)(?=\\\\s*\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5
end	textmate/cpp.tmLanguage.json	/^					"end": "(?!\\\\G)",$/;"	s	language:JSON	object:repository.comments.patterns.4
end	textmate/cpp.tmLanguage.json	/^					"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "(?=^\\\\s*((#)\\\\s*(?:else|elif|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.2
end	textmate/cpp.tmLanguage.json	/^					"end": "(?=^\\\\s*((#)\\\\s*(?:endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2
end	textmate/cpp.tmLanguage.json	/^					"end": "(?=^\\\\s*((#)\\\\s*(?:endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2
end	textmate/cpp.tmLanguage.json	/^					"end": "(\\\\))|(?<!\\\\\\\\)(?=\\\\s*\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4
end	textmate/cpp.tmLanguage.json	/^					"end": "(\\\\))|(?<!\\\\\\\\)(?=\\\\s*\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5
end	textmate/cpp.tmLanguage.json	/^					"end": ":",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5
end	textmate/cpp.tmLanguage.json	/^					"end": ">",$/;"	s	language:JSON	object:patterns.9.patterns.2
end	textmate/cpp.tmLanguage.json	/^					"end": "\\"",$/;"	s	language:JSON	object:patterns.9.patterns.1
end	textmate/cpp.tmLanguage.json	/^					"end": "\\"",$/;"	s	language:JSON	object:repository.strings.patterns.1
end	textmate/cpp.tmLanguage.json	/^					"end": "\\"|(?<!\\\\\\\\)(?=\\\\s*\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4
end	textmate/cpp.tmLanguage.json	/^					"end": "\\\\)\\\\2(\\\\3)\\"",$/;"	s	language:JSON	object:repository.strings.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "\\\\)|(?=\/\/)|(?=\/\\\\*(?!.*\\\\\\\\\\\\s*\\\\n))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9
end	textmate/cpp.tmLanguage.json	/^					"end": "\\\\*\/",$/;"	s	language:JSON	object:repository.comments.patterns.1
end	textmate/cpp.tmLanguage.json	/^					"end": "^\\\\s*((#)\\\\s*endif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "^\\\\s*((#)\\\\s*endif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "^\\\\s*((#)\\\\s*endif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "^\\\\s*((#)\\\\s*endif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "^\\\\s*((#)\\\\s*endif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "^\\\\s*((#)\\\\s*endif\\\\b)",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "}|(?=\\\\s*#\\\\s*(?:elif|else|endif)\\\\b)|(?<!\\\\\\\\)(?=\\\\s*\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0
end	textmate/cpp.tmLanguage.json	/^					"end": "}|(?=\\\\s*#\\\\s*(?:elif|else|endif)\\\\b)|(?<!\\\\\\\\)(?=\\\\s*\\\\n)",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1
end	textmate/cpp.tmLanguage.json	/^			"end": "(?=(?:\/\/|\/\\\\*))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:patterns.8
end	textmate/cpp.tmLanguage.json	/^			"end": "(?=(?:\/\/|\/\\\\*))|(?<!\\\\\\\\)(?=\\\\n)",$/;"	s	language:JSON	object:patterns.9
end	textmate/cpp.tmLanguage.json	/^			"end": "(?=^\\\\s*((#)\\\\s*(?:elif|else|endif)\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif
end	textmate/cpp.tmLanguage.json	/^			"end": "(?=^\\\\s*((#)\\\\s*endif\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif
end	textmate/cpp.tmLanguage.json	/^			"end": "(?=^\\\\s*((#)\\\\s*endif\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block
end	textmate/cpp.tmLanguage.json	/^			"end": "(?=^\\\\s*((#)\\\\s*endif\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else
end	textmate/cpp.tmLanguage.json	/^			"end": "(?=^\\\\s*((#)\\\\s*endif\\\\b))",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else-block
end	textmate/go.tmLanguage.json	/^					"end": "$",$/;"	s	language:JSON	object:repository.comments.patterns.1
end	textmate/go.tmLanguage.json	/^					"end": "'",$/;"	s	language:JSON	object:repository.runes.patterns.0
end	textmate/go.tmLanguage.json	/^					"end": "\\\\*\/",$/;"	s	language:JSON	object:repository.comments.patterns.0
end	textmate/go.tmLanguage.json	/^			"end": "\\"",$/;"	s	language:JSON	object:patterns.1
end	textmate/go.tmLanguage.json	/^			"end": "`",$/;"	s	language:JSON	object:patterns.2
end	textmate/ruby.tmLanguage.json	/^                                    "end": "(?!\\\\G)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.symbol.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": "(?!\\\\G)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.string.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": ">",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": ">",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.angles.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": ">",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.angles.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": ">",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.angles.patterns.2
end	textmate/ruby.tmLanguage.json	/^                                    "end": ">",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.angles.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": ">",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.angles.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": ">",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": ">",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.angles.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": ">",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.angles.patterns.2
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.parens.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.parens.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.parens.patterns.2
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.parens.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.parens.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.parens.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.parens.patterns.2
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.brackets.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.brackets.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.brackets.patterns.2
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.brackets.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.brackets.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.brackets.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.brackets.patterns.2
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.braces.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.braces.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.braces.patterns.2
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.braces.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.braces.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.1
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.braces.patterns.0
end	textmate/ruby.tmLanguage.json	/^                                    "end": "\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.braces.patterns.2
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.3
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.3
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.3
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.3
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.3
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.3
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.3
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.3
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=>)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.3
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.0
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.0
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.0
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.0
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.0
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.0
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.0
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.0
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\))",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.0
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.1
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.1
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.1
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.1
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.1
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.1
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.1
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.1
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\])",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.1
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.2
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.2
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.2
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.2
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.2
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.2
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.2
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.2
end	textmate/ruby.tmLanguage.json	/^                            "end": "(?=\\\\})",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.2
end	textmate/ruby.tmLanguage.json	/^                    "end": "$\\\\n?",$/;"	s	language:JSON	object:repository.regex_sub.patterns.6
end	textmate/ruby.tmLanguage.json	/^                    "end": "(?=not)impossible",$/;"	s	language:JSON	object:patterns.20.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "([)\\\\]}>]\\\\2|\\\\1\\\\2)[eimnosux]*",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4
end	textmate/ruby.tmLanguage.json	/^                    "end": "(\\\\})",$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "[)\\\\]}>]\\\\2|\\\\1\\\\2",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "[)\\\\]}>]\\\\2|\\\\1\\\\2",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1
end	textmate/ruby.tmLanguage.json	/^                    "end": "[)\\\\]}>]\\\\2|\\\\1\\\\2",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2
end	textmate/ruby.tmLanguage.json	/^                    "end": "[)\\\\]}>]\\\\2|\\\\1\\\\2",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3
end	textmate/ruby.tmLanguage.json	/^                    "end": "[)\\\\]}>]\\\\2|\\\\1\\\\2",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5
end	textmate/ruby.tmLanguage.json	/^                    "end": "[)\\\\]}>]\\\\2|\\\\1\\\\2",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6
end	textmate/ruby.tmLanguage.json	/^                    "end": "[)\\\\]}>]\\\\2|\\\\1\\\\2",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7
end	textmate/ruby.tmLanguage.json	/^                    "end": "[)\\\\]}>]\\\\2|\\\\1\\\\2",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.regex_sub.patterns.4
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\)",$/;"	s	language:JSON	object:repository.regex_sub.patterns.5
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\]",$/;"	s	language:JSON	object:repository.regex_sub.patterns.3
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\n",$/;"	s	language:JSON	object:patterns.18.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.21.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.22.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.23.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.24.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.25.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.26.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.27.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.28.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.29.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.30.patterns.0
end	textmate/ruby.tmLanguage.json	/^                    "end": "\\\\s*\\\\2$\\\\n?",$/;"	s	language:JSON	object:patterns.31.patterns.0
end	textmate/ruby.tmLanguage.json	/^            "end": "$",$/;"	s	language:JSON	object:repository.heredoc
end	textmate/ruby.tmLanguage.json	/^            "end": "'",$/;"	s	language:JSON	object:patterns.12
end	textmate/ruby.tmLanguage.json	/^            "end": "((\/[eimnosux]*))",$/;"	s	language:JSON	object:patterns.16
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.18
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.21
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.22
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.23
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.24
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.25
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.26
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.27
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.28
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.29
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.30
end	textmate/ruby.tmLanguage.json	/^            "end": "(?!\\\\G)",$/;"	s	language:JSON	object:patterns.31
end	textmate/ruby.tmLanguage.json	/^            "end": "(?<!\\\\|)(\\\\|)(?!\\\\|)",$/;"	s	language:JSON	object:patterns.34
end	textmate/ruby.tmLanguage.json	/^            "end": "(?=not)impossible",$/;"	s	language:JSON	object:patterns.20
end	textmate/ruby.tmLanguage.json	/^            "end": "\\"",$/;"	s	language:JSON	object:patterns.13
end	textmate/ruby.tmLanguage.json	/^            "end": "\\\\s*\\\\1$",$/;"	s	language:JSON	object:patterns.33
end	textmate/ruby.tmLanguage.json	/^            "end": "^=end",$/;"	s	language:JSON	object:patterns.17
end	textmate/ruby.tmLanguage.json	/^            "end": "^\\\\1$",$/;"	s	language:JSON	object:patterns.32
end	textmate/ruby.tmLanguage.json	/^            "end": "`",$/;"	s	language:JSON	object:patterns.14
end	textmate/rust.tmLanguage.json	/^					"end": "$"$/;"	s	language:JSON	object:repository.comments.patterns.2
end	textmate/rust.tmLanguage.json	/^					"end": "$"$/;"	s	language:JSON	object:repository.comments.patterns.3
end	textmate/rust.tmLanguage.json	/^					"end": "\\"",$/;"	s	language:JSON	object:repository.literals.patterns.9
end	textmate/rust.tmLanguage.json	/^					"end": "\\"\\\\1"$/;"	s	language:JSON	object:repository.literals.patterns.10
end	textmate/rust.tmLanguage.json	/^					"end": "\\\\)",$/;"	s	language:JSON	object:repository.metaItem.patterns.0
end	textmate/rust.tmLanguage.json	/^					"end": "\\\\*\/",$/;"	s	language:JSON	object:repository.block_comment.patterns.0
end	textmate/rust.tmLanguage.json	/^					"end": "\\\\*\/",$/;"	s	language:JSON	object:repository.block_doc_comment.patterns.0
end	textmate/rust.tmLanguage.json	/^					"end": "\\\\]",$/;"	s	language:JSON	object:repository.attribute.patterns.0
end	textmate/rust.tmLanguage.json	/^					"end": "}",$/;"	s	language:JSON	object:repository.code.patterns.0
end	textmate/typescript.tmLanguage.json	/^							"end": "(?=$)"$/;"	s	language:JSON	object:repository.comment.patterns.2.patterns.0
end	textmate/typescript.tmLanguage.json	/^					"end": "(?=$)",$/;"	s	language:JSON	object:repository.comment.patterns.2
end	textmate/typescript.tmLanguage.json	/^					"end": "(\/)([gimuy]*)",$/;"	s	language:JSON	object:repository.regex.patterns.0
end	textmate/typescript.tmLanguage.json	/^					"end": "(\/)([gimuy]*)",$/;"	s	language:JSON	object:repository.regex.patterns.1
end	textmate/typescript.tmLanguage.json	/^					"end": "(\\\\))",$/;"	s	language:JSON	object:repository.regexp.patterns.4
end	textmate/typescript.tmLanguage.json	/^					"end": "(\\\\])",$/;"	s	language:JSON	object:repository.regexp.patterns.6
end	textmate/typescript.tmLanguage.json	/^					"end": "\\\\)",$/;"	s	language:JSON	object:repository.regexp.patterns.5
end	textmate/typescript.tmLanguage.json	/^					"end": "\\\\*\/",$/;"	s	language:JSON	object:repository.comment.patterns.0
end	textmate/typescript.tmLanguage.json	/^					"end": "\\\\*\/",$/;"	s	language:JSON	object:repository.comment.patterns.1
end	textmate/typescript.tmLanguage.json	/^			"end": "(?=\\\\s)",$/;"	s	language:JSON	object:repository.decorator
end	textmate/typescript.tmLanguage.json	/^			"end": "(\\")|((?:[^\\\\\\\\\\\\n])$)",$/;"	s	language:JSON	object:repository.qstring-double
end	textmate/typescript.tmLanguage.json	/^			"end": "(\\\\')|((?:[^\\\\\\\\\\\\n])$)",$/;"	s	language:JSON	object:repository.qstring-single
end	textmate/typescript.tmLanguage.json	/^			"end": "\\\\}",$/;"	s	language:JSON	object:repository.template-substitution-element
end	textmate/typescript.tmLanguage.json	/^			"end": "`",$/;"	s	language:JSON	object:repository.template
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:patterns.9.patterns.1
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:patterns.9.patterns.2
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.comments.patterns.1
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.strings.patterns.0
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.strings.patterns.1
endCaptures	textmate/cpp.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.strings.patterns.2
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.21.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.22.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.23.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.24.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.25.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.26.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.27.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.28.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.29.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.30.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:patterns.31.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.2
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.3
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.4
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.5
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.8
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.3
endCaptures	textmate/ruby.tmLanguage.json	/^                    "endCaptures": {$/;"	o	language:JSON	object:repository.regex_sub.patterns.4
endCaptures	textmate/ruby.tmLanguage.json	/^            "endCaptures": {$/;"	o	language:JSON	object:patterns.32
endCaptures	textmate/ruby.tmLanguage.json	/^            "endCaptures": {$/;"	o	language:JSON	object:patterns.33
endCaptures	textmate/rust.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.attribute.patterns.0
endCaptures	textmate/rust.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.metaItem.patterns.0
endCaptures	textmate/typescript.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.regex.patterns.0
endCaptures	textmate/typescript.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.regex.patterns.1
endCaptures	textmate/typescript.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.regexp.patterns.4
endCaptures	textmate/typescript.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.regexp.patterns.5
endCaptures	textmate/typescript.tmLanguage.json	/^					"endCaptures": {$/;"	o	language:JSON	object:repository.regexp.patterns.6
endCaptures	textmate/typescript.tmLanguage.json	/^			"endCaptures": {$/;"	o	language:JSON	object:repository.qstring-double
endCaptures	textmate/typescript.tmLanguage.json	/^			"endCaptures": {$/;"	o	language:JSON	object:repository.qstring-single
end_marker_ids	examples/cpp/marker-index.h	/^    flat_set<MarkerId> end_marker_ids;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:flat_set<MarkerId>
end_nodes_by_id	examples/cpp/marker-index.h	/^  std::unordered_map<MarkerId, Node*> end_nodes_by_id;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::unordered_map<MarkerId,Node * >
ending	examples/cpp/marker-index.h	/^    flat_set<MarkerId> ending;$/;"	m	language:C++	struct:MarkerIndex::Boundary	typeref:typename:flat_set<MarkerId>
engines	package.json	/^  "engines": {$/;"	o	language:JSON
entersyscall	examples/go/proc.go	/^func entersyscall(dummy int32) {$/;"	f	language:Go
entersyscall_gcwait	examples/go/proc.go	/^func entersyscall_gcwait() {$/;"	f	language:Go
entersyscall_sysmon	examples/go/proc.go	/^func entersyscall_sysmon() {$/;"	f	language:Go
entersyscallblock	examples/go/proc.go	/^func entersyscallblock(dummy int32) {$/;"	f	language:Go
entersyscallblock_handoff	examples/go/proc.go	/^func entersyscallblock_handoff() {$/;"	f	language:Go
eq	examples/rust/ast.rs	/^    fn eq(&self, string: &&'a str) -> bool {$/;"	F	language:Rust	implementation:Path
escaped_char	textmate/ruby.tmLanguage.json	/^        "escaped_char": {$/;"	o	language:JSON	object:repository
escaped_character	textmate/rust.tmLanguage.json	/^		"escaped_character": {$/;"	o	language:JSON	object:repository
escapes	examples/go/value.go	/^func escapes(x interface{}) {$/;"	f	language:Go
eslint	package.json	/^    "eslint": "^8.13.0",$/;"	s	language:JSON	object:devDependencies
eslint-config-prettier	package.json	/^    "eslint-config-prettier": "^8.5.0",$/;"	s	language:JSON	object:devDependencies
example	examples/go/small.go	/^package example$/;"	p	language:Go
example.GetMom	examples/go/small.go	/^func (self *Person) GetMom() *Person {$/;"	f	language:Go
example.GetName	examples/go/small.go	/^func (self *Person) GetName() string {$/;"	f	language:Go
example.NewPerson	examples/go/small.go	/^func NewPerson(name string, mom *Person) Person {$/;"	f	language:Go
example.Person	examples/go/small.go	/^type Person struct {$/;"	s	language:Go
example.main	examples/go/small.go	/^func main() {$/;"	f	language:Go
example.mom	examples/go/small.go	/^	mom  *Person$/;"	m	language:Go	struct:Person
example.name	examples/go/small.go	/^	name string$/;"	m	language:Go	struct:Person
example.people	examples/go/small.go	/^var people = []Person{$/;"	v	language:Go
exclude	tsconfig.json	/^	"exclude": [$/;"	a	language:JSON
exclusive_marker_ids	examples/cpp/marker-index.h	/^  flat_set<MarkerId> exclusive_marker_ids;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:flat_set<MarkerId>
execute	examples/go/proc.go	/^func execute(gp *g, inheritTime bool) {$/;"	f	language:Go
exitsyscall	examples/go/proc.go	/^func exitsyscall(dummy int32) {$/;"	f	language:Go
exitsyscall0	examples/go/proc.go	/^func exitsyscall0(gp *g) {$/;"	f	language:Go
exitsyscallfast	examples/go/proc.go	/^func exitsyscallfast() bool {$/;"	f	language:Go
exitsyscallfast_pidle	examples/go/proc.go	/^func exitsyscallfast_pidle() bool {$/;"	f	language:Go
expr	examples/rust/ast.rs	/^    pub expr: P<Expr>,$/;"	m	language:Rust	struct:Field
expr	examples/rust/ast.rs	/^    pub expr: P<Expr>,$/;"	m	language:Rust	struct:InlineAsmOutput
expression	textmate/typescript.tmLanguage.json	/^		"expression": {$/;"	o	language:JSON	object:repository
extensionKind	package.json	/^  "extensionKind": [$/;"	a	language:JSON
extram	examples/go/proc.go	/^var extram uintptr$/;"	v	language:Go
f	examples/go/type_switch.go	/^func f(a interface{}) {$/;"	f	language:Go
f	examples/rust/scratch.rs	/^fn f() {$/;"	f	language:Rust
fakeTable	examples/go/letter_test.go	/^func fakeTable(n int) []Range16 {$/;"	f	language:Go
fields	examples/rust/ast.rs	/^    pub fn fields(&self) -> &[StructField] {$/;"	F	language:Rust	implementation:VariantData
fileTypes	textmate/typescript.tmLanguage.json	/^	"fileTypes": [$/;"	a	language:JSON
findrunnable	examples/go/proc.go	/^func findrunnable() (gp *g, inheritTime bool) {$/;"	f	language:Go
flag	examples/go/value.go	/^type flag uintptr$/;"	t	language:Go
flagAddr	examples/go/value.go	/^	flagAddr        flag = 1 << 8$/;"	c	language:Go
flagEmbedRO	examples/go/value.go	/^	flagEmbedRO     flag = 1 << 6$/;"	c	language:Go
flagIndir	examples/go/value.go	/^	flagIndir       flag = 1 << 7$/;"	c	language:Go
flagKindMask	examples/go/value.go	/^	flagKindMask    flag = 1<<flagKindWidth - 1$/;"	c	language:Go
flagKindWidth	examples/go/value.go	/^	flagKindWidth        = 5 \/\/ there are 27 kinds$/;"	c	language:Go
flagMethod	examples/go/value.go	/^	flagMethod      flag = 1 << 9$/;"	c	language:Go
flagMethodShift	examples/go/value.go	/^	flagMethodShift      = 10$/;"	c	language:Go
flagRO	examples/go/value.go	/^	flagRO          flag = flagStickyRO | flagEmbedRO$/;"	c	language:Go
flagStickyRO	examples/go/value.go	/^	flagStickyRO    flag = 1 << 5$/;"	c	language:Go
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:Expr
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:FloatTy
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:ImplPolarity
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:IntTy
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:Lifetime
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:NodeId
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:Pat
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:Path
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:Stmt
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:Ty
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:UintTy
fmt	examples/rust/ast.rs	/^    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {$/;"	F	language:Rust	implementation:Unsafety
fn	examples/go/proc.go	/^	fn  unsafe.Pointer$/;"	m	language:Go	struct:cgothreadstart
foo	examples/javascript/expressions.js	/^	@foo.bar(baz) static foo() {$/;"	m	language:JavaScript	class:Foo
foo	examples/javascript/expressions.js	/^  foo: true,$/;"	p	language:JavaScript	class:x
foo	examples/ruby/declarations.rb	/^class foo()::Bar$/;"	c	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo bar$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo bar, quux$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(&block)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(**options)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(*options)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(bar = nil)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(bar) end$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(bar)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(bar); end$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(bar, quux)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(bar: nil, baz:)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(bar=nil)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(name:, **)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(x, *options)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def foo(x, *options, y)$/;"	f	language:Ruby
foo	examples/ruby/declarations.rb	/^def self.foo bar$/;"	F	language:Ruby
foo	examples/ruby/declarations.rb	/^def self.foo bar, baz$/;"	F	language:Ruby
foo	examples/ruby/declarations.rb	/^def self.foo$/;"	F	language:Ruby
foo	examples/ruby/declarations.rb	/^def self.foo(bar)$/;"	F	language:Ruby
foo	examples/ruby/declarations.rb	/^def self.foo(bar, baz)$/;"	F	language:Ruby
foo	examples/ruby/expressions.rb	/^def foo d, *f, (x, y)$/;"	f	language:Ruby
foo	examples/ruby/expressions.rb	/^def foo(d, *f, (x, y))$/;"	f	language:Ruby
foo	examples/ruby/literals.rb	/^def foo$/;"	f	language:Ruby
foo!	examples/ruby/declarations.rb	/^def foo!$/;"	f	language:Ruby
foo=	examples/ruby/declarations.rb	/^def foo=$/;"	f	language:Ruby
foo?	examples/ruby/declarations.rb	/^def foo?$/;"	f	language:Ruby
forEachP	examples/go/proc.go	/^func forEachP(fn func(*p)) {$/;"	f	language:Go
forcePreemptNS	examples/go/proc.go	/^const forcePreemptNS = 10 * 1000 * 1000 \/\/ 10ms$/;"	c	language:Go
forcegchelper	examples/go/proc.go	/^func forcegchelper() {$/;"	f	language:Go
forcegcperiod	examples/go/proc.go	/^var forcegcperiod int64 = 2 * 60 * 1e9$/;"	v	language:Go
freezeStopWait	examples/go/proc.go	/^const freezeStopWait = 0x7fffffff$/;"	c	language:Go
freezetheworld	examples/go/proc.go	/^func freezetheworld() {$/;"	f	language:Go
from_ident	examples/rust/ast.rs	/^    pub fn from_ident(ident: Ident, span: Span) -> Self {$/;"	F	language:Rust	implementation:PathSegment
from_ident	examples/rust/ast.rs	/^    pub fn from_ident(s: Span, identifier: Ident) -> Path {$/;"	F	language:Rust	implementation:Path
from_self	examples/rust/ast.rs	/^    pub fn from_self(eself: ExplicitSelf, eself_ident: SpannedIdent) -> Arg {$/;"	F	language:Rust	implementation:Arg
from_u32	examples/rust/ast.rs	/^    pub fn from_u32(x: u32) -> NodeId {$/;"	F	language:Rust	implementation:NodeId
funcName	examples/go/value.go	/^func funcName(f func([]Value) []Value) string {$/;"	f	language:Go
funcPC	examples/go/proc.go	/^func funcPC(f interface{}) uintptr {$/;"	f	language:Go
g	examples/go/proc.go	/^	g   guintptr$/;"	m	language:Go	struct:cgothreadstart
g	examples/javascript/expressions.js	/^  g: h$/;"	p	language:JavaScript	class:x
g0	examples/go/proc.go	/^	g0 g$/;"	v	language:Go
gcount	examples/go/proc.go	/^func gcount() int32 {$/;"	f	language:Go
gcprocs	examples/go/proc.go	/^func gcprocs() int32 {$/;"	f	language:Go
gcstopm	examples/go/proc.go	/^func gcstopm() {$/;"	f	language:Go
generic_params	examples/rust/ast.rs	/^    pub generic_params: Vec<GenericParam>,$/;"	m	language:Rust	struct:BareFnTy
generics	examples/rust/ast.rs	/^    pub generics: Generics,$/;"	m	language:Rust	struct:ImplItem
generics	examples/rust/ast.rs	/^    pub generics: Generics,$/;"	m	language:Rust	struct:TraitItem
get	examples/ruby/classes.rb	/^  def get$/;"	f	language:Ruby	class:Fred
get_self	examples/rust/ast.rs	/^    pub fn get_self(&self) -> Option<ExplicitSelf> {$/;"	F	language:Rust	implementation:FnDecl
get_unchecked	examples/cpp/rule.cc	/^const Symbol & Rule::get_unchecked<Symbol>() const { return symbol_; }$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:const Symbol &
getm	examples/go/proc.go	/^func getm() uintptr {$/;"	f	language:Go
gfget	examples/go/proc.go	/^func gfget(_p_ *p) *g {$/;"	f	language:Go
gfpurge	examples/go/proc.go	/^func gfpurge(_p_ *p) {$/;"	f	language:Go
gfput	examples/go/proc.go	/^func gfput(_p_ *p, gp *g) {$/;"	f	language:Go
globrunqget	examples/go/proc.go	/^func globrunqget(_p_ *p, max int32) *g {$/;"	f	language:Go
globrunqput	examples/go/proc.go	/^func globrunqput(gp *g) {$/;"	f	language:Go
globrunqputbatch	examples/go/proc.go	/^func globrunqputbatch(ghead *g, gtail *g, n int32) {$/;"	f	language:Go
globrunqputhead	examples/go/proc.go	/^func globrunqputhead(gp *g) {$/;"	f	language:Go
goexit0	examples/go/proc.go	/^func goexit0(gp *g) {$/;"	f	language:Go
goexit1	examples/go/proc.go	/^func goexit1() {$/;"	f	language:Go
gopark	examples/go/proc.go	/^func gopark(unlockf func(*g, unsafe.Pointer) bool, lock unsafe.Pointer, reason string, traceEv b/;"	f	language:Go
goparkunlock	examples/go/proc.go	/^func goparkunlock(lock *mutex, reason string, traceEv byte, traceskip int) {$/;"	f	language:Go
gopreempt_m	examples/go/proc.go	/^func gopreempt_m(gp *g) {$/;"	f	language:Go
goready	examples/go/proc.go	/^func goready(gp *g, traceskip int) {$/;"	f	language:Go
goschedImpl	examples/go/proc.go	/^func goschedImpl(gp *g) {$/;"	f	language:Go
gosched_m	examples/go/proc.go	/^func gosched_m(gp *g) {$/;"	f	language:Go
grow	examples/go/value.go	/^func grow(s Value, extra int) (Value, int, int) {$/;"	f	language:Go
guard	examples/rust/ast.rs	/^    pub guard: Option<P<Expr>>,$/;"	m	language:Rust	struct:Arm
handoffp	examples/go/proc.go	/^func handoffp(_p_ *p) {$/;"	f	language:Go
has_self	examples/rust/ast.rs	/^    pub fn has_self(&self) -> bool {$/;"	F	language:Rust	implementation:FnDecl
haveexperiment	examples/go/proc.go	/^func haveexperiment(name string) bool {$/;"	f	language:Go
helpgc	examples/go/proc.go	/^func helpgc(nproc int32) {$/;"	f	language:Go
heredoc	textmate/ruby.tmLanguage.json	/^        "heredoc": {$/;"	o	language:JSON	object:repository
id	examples/rust/ast.rs	/^    pub fn id(&self) -> NodeId {$/;"	F	language:Rust	implementation:VariantData
id	examples/rust/ast.rs	/^    pub id: AttrId,$/;"	m	language:Rust	struct:Attribute
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:Arg
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:Block
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:Expr
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:ForeignItem
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:ImplItem
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:Item
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:Lifetime
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:Local
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:Pat
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:Stmt
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:StructField
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:TraitItem
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:Ty
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:TyParam
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:TypeBinding
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:WhereClause
id	examples/rust/ast.rs	/^    pub id: NodeId,$/;"	m	language:Rust	struct:WhereEqPredicate
ident	examples/rust/ast.rs	/^    pub ident: Ident,$/;"	m	language:Rust	struct:FieldPat
ident	examples/rust/ast.rs	/^    pub ident: Ident,$/;"	m	language:Rust	struct:ForeignItem
ident	examples/rust/ast.rs	/^    pub ident: Ident,$/;"	m	language:Rust	struct:ImplItem
ident	examples/rust/ast.rs	/^    pub ident: Ident,$/;"	m	language:Rust	struct:Item
ident	examples/rust/ast.rs	/^    pub ident: Ident,$/;"	m	language:Rust	struct:Lifetime
ident	examples/rust/ast.rs	/^    pub ident: Ident,$/;"	m	language:Rust	struct:TraitItem
ident	examples/rust/ast.rs	/^    pub ident: Ident,$/;"	m	language:Rust	struct:TyParam
ident	examples/rust/ast.rs	/^    pub ident: Ident,$/;"	m	language:Rust	struct:TypeBinding
ident	examples/rust/ast.rs	/^    pub ident: Option<Ident>,$/;"	m	language:Rust	struct:StructField
ident	examples/rust/ast.rs	/^    pub ident: SpannedIdent,$/;"	m	language:Rust	struct:Field
identifier	examples/rust/ast.rs	/^    pub identifier: Ident,$/;"	m	language:Rust	struct:PathSegment
ifaceE2I	examples/go/value.go	/^func ifaceE2I(t *rtype, src interface{}, dst unsafe.Pointer)$/;"	f	language:Go
in	examples/go/letter_test.go	/^	in, out rune$/;"	m	language:Go	struct:caseT
inc	examples/ruby/classes.rb	/^  def inc$/;"	f	language:Ruby	class:Fred
incidlelocked	examples/go/proc.go	/^func incidlelocked(v int32) {$/;"	f	language:Go
include	textmate/cpp.tmLanguage.json	/^											"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^											"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#block_innards"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#block_innards"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.4.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.6.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.6.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#line_continuation_character"$/;"	s	language:JSON	object:repository.comments.patterns.4.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.6.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.6.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^									"include": "$base"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.patterns.1
include	textmate/cpp.tmLanguage.json	/^									"include": "$base"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.4.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#block_innards"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.5
include	textmate/cpp.tmLanguage.json	/^							"include": "#block_innards"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.2
include	textmate/cpp.tmLanguage.json	/^							"include": "#comments"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#comments"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#comments"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#comments"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#disabled"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.2.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#line_continuation_character"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4.patterns.2
include	textmate/cpp.tmLanguage.json	/^							"include": "#line_continuation_character"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#line_continuation_character"$/;"	s	language:JSON	object:repository.strings.patterns.1.patterns.2
include	textmate/cpp.tmLanguage.json	/^							"include": "#line_continuation_character"$/;"	s	language:JSON	object:repository.strings.patterns.2.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#pragma-mark"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.2.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-conditional-line"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-define-line-blocks"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-define-line-blocks"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-define-line-contents"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-define-line-functions"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-define-line-functions"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-disabled-elif"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.3
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-disabled-elif"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.3
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-disabled-elif"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.4
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-disabled-elif"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.4
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-enabled-elif"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-enabled-elif"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.2
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-enabled-elif-block"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-enabled-elif-block"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.2
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-enabled-else"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.2
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-enabled-else"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.3
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-enabled-else-block"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.2
include	textmate/cpp.tmLanguage.json	/^							"include": "#preprocessor-rule-enabled-else-block"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.3
include	textmate/cpp.tmLanguage.json	/^							"include": "#string_escaped_char"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#string_escaped_char"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#string_escaped_char"$/;"	s	language:JSON	object:repository.strings.patterns.1.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#string_escaped_char"$/;"	s	language:JSON	object:repository.strings.patterns.2.patterns.0
include	textmate/cpp.tmLanguage.json	/^							"include": "#string_placeholder"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "#string_placeholder"$/;"	s	language:JSON	object:repository.strings.patterns.1.patterns.1
include	textmate/cpp.tmLanguage.json	/^							"include": "$base"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.5
include	textmate/cpp.tmLanguage.json	/^							"include": "$base"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.2
include	textmate/cpp.tmLanguage.json	/^					"include": "#access"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.6
include	textmate/cpp.tmLanguage.json	/^					"include": "#access"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.2
include	textmate/cpp.tmLanguage.json	/^					"include": "#block_innards"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else-block.patterns.0
include	textmate/cpp.tmLanguage.json	/^					"include": "#comments"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.2
include	textmate/cpp.tmLanguage.json	/^					"include": "#comments"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.0
include	textmate/cpp.tmLanguage.json	/^					"include": "#comments"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.1
include	textmate/cpp.tmLanguage.json	/^					"include": "#comments"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.1
include	textmate/cpp.tmLanguage.json	/^					"include": "#comments"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.1
include	textmate/cpp.tmLanguage.json	/^					"include": "#libc"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.7
include	textmate/cpp.tmLanguage.json	/^					"include": "#line_continuation_character"$/;"	s	language:JSON	object:patterns.9.patterns.0
include	textmate/cpp.tmLanguage.json	/^					"include": "#line_continuation_character"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.8
include	textmate/cpp.tmLanguage.json	/^					"include": "#numbers"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.4
include	textmate/cpp.tmLanguage.json	/^					"include": "#operators"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.6
include	textmate/cpp.tmLanguage.json	/^					"include": "#operators"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.3
include	textmate/cpp.tmLanguage.json	/^					"include": "#preprocessor-rule-define-line-contents"$/;"	s	language:JSON	object:patterns.8.patterns.0
include	textmate/cpp.tmLanguage.json	/^					"include": "#preprocessor-rule-define-line-contents"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.1
include	textmate/cpp.tmLanguage.json	/^					"include": "#preprocessor-rule-define-line-contents"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.6
include	textmate/cpp.tmLanguage.json	/^					"include": "#strings"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.3
include	textmate/cpp.tmLanguage.json	/^					"include": "#vararg_ellipses"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.0
include	textmate/cpp.tmLanguage.json	/^					"include": "#vararg_ellipses"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.1
include	textmate/cpp.tmLanguage.json	/^					"include": "$base"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.8
include	textmate/cpp.tmLanguage.json	/^					"include": "$base"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else.patterns.0
include	textmate/cpp.tmLanguage.json	/^			"include": "#comments"$/;"	s	language:JSON	object:patterns.3
include	textmate/cpp.tmLanguage.json	/^			"include": "#constants"$/;"	s	language:JSON	object:patterns.1
include	textmate/cpp.tmLanguage.json	/^			"include": "#keywords"$/;"	s	language:JSON	object:patterns.0
include	textmate/cpp.tmLanguage.json	/^			"include": "#numbers"$/;"	s	language:JSON	object:patterns.4
include	textmate/cpp.tmLanguage.json	/^			"include": "#preprocessor-rule-conditional"$/;"	s	language:JSON	object:patterns.7
include	textmate/cpp.tmLanguage.json	/^			"include": "#preprocessor-rule-disabled"$/;"	s	language:JSON	object:patterns.6
include	textmate/cpp.tmLanguage.json	/^			"include": "#preprocessor-rule-enabled"$/;"	s	language:JSON	object:patterns.5
include	textmate/cpp.tmLanguage.json	/^			"include": "#strings"$/;"	s	language:JSON	object:patterns.2
include	textmate/go.tmLanguage.json	/^					"include": "#string_escaped_char"$/;"	s	language:JSON	object:patterns.1.patterns.0
include	textmate/go.tmLanguage.json	/^					"include": "#string_placeholder"$/;"	s	language:JSON	object:patterns.1.patterns.1
include	textmate/go.tmLanguage.json	/^					"include": "#string_placeholder"$/;"	s	language:JSON	object:patterns.2.patterns.0
include	textmate/go.tmLanguage.json	/^			"include": "#comments"$/;"	s	language:JSON	object:patterns.0
include	textmate/go.tmLanguage.json	/^			"include": "#keywords"$/;"	s	language:JSON	object:patterns.10
include	textmate/go.tmLanguage.json	/^			"include": "#operators"$/;"	s	language:JSON	object:patterns.11
include	textmate/go.tmLanguage.json	/^			"include": "#runes"$/;"	s	language:JSON	object:patterns.12
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.angles.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.angles.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.angles.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.angles.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.angles.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.angles.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.angles.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.braces.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.braces.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.braces.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.braces.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.braces.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.braces.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.braces.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.brackets.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.brackets.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.brackets.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.brackets.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.brackets.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.brackets.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.brackets.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.symbol.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.string.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.symbol.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.string.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#nest_curly_and_self"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.parens.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.parens.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.parens.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.parens.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.parens.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.parens.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.parens.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.angles.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.braces.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.brackets.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.parens.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.angles.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.braces.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.brackets.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.parens.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#angles"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#braces"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.2.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#brackets"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.1.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.angles.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.braces.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.brackets.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.parens.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.angles.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.braces.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.brackets.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.parens.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.angles.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.braces.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.brackets.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.repository.parens.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.angles.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.braces.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.brackets.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.repository.parens.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#parens"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#regex_sub"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.angles.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#regex_sub"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.braces.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#regex_sub"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.brackets.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#regex_sub"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.repository.parens.patterns.0
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.2.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.3.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.2.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.3.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.2.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.3.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.1.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.2.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.3.patterns.1
include	textmate/ruby.tmLanguage.json	/^                                    "include": "$self"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.21.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.22.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.23.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.24.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.25.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.26.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.27.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.28.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.29.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.30.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.31.patterns.0.patterns.3
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.4
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.4
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:repository.regex_sub.patterns.3.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#escaped_char"$/;"	s	language:JSON	object:repository.regex_sub.patterns.4.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.21.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.22.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.23.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.24.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.25.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.26.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.27.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.28.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.29.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.30.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#heredoc"$/;"	s	language:JSON	object:patterns.31.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.21.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.22.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.23.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.24.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.25.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.26.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.27.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.28.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.29.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.30.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.31.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.patterns.5
include	textmate/ruby.tmLanguage.json	/^                            "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.patterns.5
include	textmate/ruby.tmLanguage.json	/^                            "include": "#nest_curly_and_self"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#regex_sub"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.patterns.4
include	textmate/ruby.tmLanguage.json	/^                            "include": "#regex_sub"$/;"	s	language:JSON	object:repository.regex_sub.patterns.5.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.patterns.4
include	textmate/ruby.tmLanguage.json	/^                            "include": "#string"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.patterns.4
include	textmate/ruby.tmLanguage.json	/^                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.patterns.4
include	textmate/ruby.tmLanguage.json	/^                            "include": "#symbol"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.patterns.4
include	textmate/ruby.tmLanguage.json	/^                            "include": "$self"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.patterns.1
include	textmate/ruby.tmLanguage.json	/^                            "include": "source.c"$/;"	s	language:JSON	object:patterns.26.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "source.c++"$/;"	s	language:JSON	object:patterns.25.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "source.css"$/;"	s	language:JSON	object:patterns.24.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "source.js"$/;"	s	language:JSON	object:patterns.27.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "source.js.jquery"$/;"	s	language:JSON	object:patterns.28.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "source.lua"$/;"	s	language:JSON	object:patterns.30.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "source.ruby"$/;"	s	language:JSON	object:patterns.31.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "source.shell"$/;"	s	language:JSON	object:patterns.29.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "source.sql"$/;"	s	language:JSON	object:patterns.23.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "text.html.basic"$/;"	s	language:JSON	object:patterns.20.patterns.0.patterns.0
include	textmate/ruby.tmLanguage.json	/^                            "include": "text.html.basic"$/;"	s	language:JSON	object:patterns.21.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                            "include": "text.xml"$/;"	s	language:JSON	object:patterns.22.patterns.0.patterns.2
include	textmate/ruby.tmLanguage.json	/^                    "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.13.patterns.1
include	textmate/ruby.tmLanguage.json	/^                    "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.14.patterns.1
include	textmate/ruby.tmLanguage.json	/^                    "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.32.patterns.2
include	textmate/ruby.tmLanguage.json	/^                    "include": "#escaped_char"$/;"	s	language:JSON	object:patterns.33.patterns.2
include	textmate/ruby.tmLanguage.json	/^                    "include": "#escaped_char"$/;"	s	language:JSON	object:repository.regex_sub.patterns.1
include	textmate/ruby.tmLanguage.json	/^                    "include": "#heredoc"$/;"	s	language:JSON	object:patterns.32.patterns.0
include	textmate/ruby.tmLanguage.json	/^                    "include": "#heredoc"$/;"	s	language:JSON	object:patterns.33.patterns.0
include	textmate/ruby.tmLanguage.json	/^                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.13.patterns.0
include	textmate/ruby.tmLanguage.json	/^                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.14.patterns.0
include	textmate/ruby.tmLanguage.json	/^                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.32.patterns.1
include	textmate/ruby.tmLanguage.json	/^                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:patterns.33.patterns.1
include	textmate/ruby.tmLanguage.json	/^                    "include": "#interpolated_ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.0
include	textmate/ruby.tmLanguage.json	/^                    "include": "#regex_sub"$/;"	s	language:JSON	object:patterns.16.patterns.0
include	textmate/ruby.tmLanguage.json	/^                    "include": "$self"$/;"	s	language:JSON	object:patterns.34.patterns.0
include	textmate/ruby.tmLanguage.json	/^                    "include": "$self"$/;"	s	language:JSON	object:repository.heredoc.patterns.0
include	textmate/ruby.tmLanguage.json	/^            "include": "#percent_literals"$/;"	s	language:JSON	object:patterns.15
include	textmate/rust.tmLanguage.json	/^							"include": "#block_comment"$/;"	s	language:JSON	object:repository.block_comment.patterns.0.patterns.1
include	textmate/rust.tmLanguage.json	/^							"include": "#block_comment"$/;"	s	language:JSON	object:repository.block_doc_comment.patterns.0.patterns.1
include	textmate/rust.tmLanguage.json	/^							"include": "#block_doc_comment"$/;"	s	language:JSON	object:repository.block_comment.patterns.0.patterns.0
include	textmate/rust.tmLanguage.json	/^							"include": "#block_doc_comment"$/;"	s	language:JSON	object:repository.block_doc_comment.patterns.0.patterns.0
include	textmate/rust.tmLanguage.json	/^							"include": "#code"$/;"	s	language:JSON	object:repository.code.patterns.0.patterns.0
include	textmate/rust.tmLanguage.json	/^							"include": "#escaped_character"$/;"	s	language:JSON	object:repository.literals.patterns.9.patterns.0
include	textmate/rust.tmLanguage.json	/^							"include": "#metaItem"$/;"	s	language:JSON	object:repository.attribute.patterns.0.patterns.0
include	textmate/rust.tmLanguage.json	/^							"include": "#metaItem"$/;"	s	language:JSON	object:repository.metaItem.patterns.0.patterns.0
include	textmate/rust.tmLanguage.json	/^					"include": "#attribute"$/;"	s	language:JSON	object:repository.code.patterns.2
include	textmate/rust.tmLanguage.json	/^					"include": "#block_comment"$/;"	s	language:JSON	object:repository.comments.patterns.1
include	textmate/rust.tmLanguage.json	/^					"include": "#block_doc_comment"$/;"	s	language:JSON	object:repository.comments.patterns.0
include	textmate/rust.tmLanguage.json	/^					"include": "#comments"$/;"	s	language:JSON	object:repository.code.patterns.1
include	textmate/rust.tmLanguage.json	/^					"include": "#comments"$/;"	s	language:JSON	object:repository.metaItem.patterns.3
include	textmate/rust.tmLanguage.json	/^					"include": "#keywords"$/;"	s	language:JSON	object:repository.code.patterns.3
include	textmate/rust.tmLanguage.json	/^					"include": "#literals"$/;"	s	language:JSON	object:repository.code.patterns.4
include	textmate/rust.tmLanguage.json	/^					"include": "#literals"$/;"	s	language:JSON	object:repository.metaItem.patterns.2
include	textmate/rust.tmLanguage.json	/^			"include": "#code"$/;"	s	language:JSON	object:patterns.1
include	textmate/typescript.tmLanguage.json	/^							"include": "#docblock"$/;"	s	language:JSON	object:repository.comment.patterns.0.patterns.0
include	textmate/typescript.tmLanguage.json	/^							"include": "#regex-character-class"$/;"	s	language:JSON	object:repository.regexp.patterns.6.patterns.1
include	textmate/typescript.tmLanguage.json	/^							"include": "#regexp"$/;"	s	language:JSON	object:repository.regex.patterns.0.patterns.0
include	textmate/typescript.tmLanguage.json	/^							"include": "#regexp"$/;"	s	language:JSON	object:repository.regex.patterns.1.patterns.0
include	textmate/typescript.tmLanguage.json	/^							"include": "#regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.4.patterns.0
include	textmate/typescript.tmLanguage.json	/^							"include": "#regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.5.patterns.0
include	textmate/typescript.tmLanguage.json	/^					"include": "#comment"$/;"	s	language:JSON	object:repository.expression.patterns.6
include	textmate/typescript.tmLanguage.json	/^					"include": "#decorator"$/;"	s	language:JSON	object:repository.expression.patterns.1
include	textmate/typescript.tmLanguage.json	/^					"include": "#expression"$/;"	s	language:JSON	object:repository.decorator.patterns.0
include	textmate/typescript.tmLanguage.json	/^					"include": "#expression"$/;"	s	language:JSON	object:repository.template-substitution-element.patterns.0
include	textmate/typescript.tmLanguage.json	/^					"include": "#keyword"$/;"	s	language:JSON	object:repository.expression.patterns.0
include	textmate/typescript.tmLanguage.json	/^					"include": "#literal"$/;"	s	language:JSON	object:repository.expression.patterns.5
include	textmate/typescript.tmLanguage.json	/^					"include": "#numeric-literal"$/;"	s	language:JSON	object:repository.literal.patterns.2
include	textmate/typescript.tmLanguage.json	/^					"include": "#numericConstant-literal"$/;"	s	language:JSON	object:repository.literal.patterns.4
include	textmate/typescript.tmLanguage.json	/^					"include": "#qstring-double"$/;"	s	language:JSON	object:repository.string.patterns.1
include	textmate/typescript.tmLanguage.json	/^					"include": "#qstring-single"$/;"	s	language:JSON	object:repository.string.patterns.0
include	textmate/typescript.tmLanguage.json	/^					"include": "#regex"$/;"	s	language:JSON	object:repository.expression.patterns.2
include	textmate/typescript.tmLanguage.json	/^					"include": "#regex-character-class"$/;"	s	language:JSON	object:repository.regexp.patterns.7
include	textmate/typescript.tmLanguage.json	/^					"include": "#string"$/;"	s	language:JSON	object:repository.expression.patterns.3
include	textmate/typescript.tmLanguage.json	/^					"include": "#string-character-escape"$/;"	s	language:JSON	object:repository.qstring-double.patterns.0
include	textmate/typescript.tmLanguage.json	/^					"include": "#string-character-escape"$/;"	s	language:JSON	object:repository.qstring-single.patterns.0
include	textmate/typescript.tmLanguage.json	/^					"include": "#string-character-escape"$/;"	s	language:JSON	object:repository.template.patterns.1
include	textmate/typescript.tmLanguage.json	/^					"include": "#template"$/;"	s	language:JSON	object:repository.expression.patterns.4
include	textmate/typescript.tmLanguage.json	/^					"include": "#template-substitution-element"$/;"	s	language:JSON	object:repository.template.patterns.0
include	textmate/typescript.tmLanguage.json	/^					"include": "#undefined-literal"$/;"	s	language:JSON	object:repository.literal.patterns.3
include	textmate/typescript.tmLanguage.json	/^			"include": "#expression"$/;"	s	language:JSON	object:patterns.0
index	examples/rust/ast.rs	/^    fn index(self) -> usize {$/;"	F	language:Rust	implementation:NodeId
init	examples/go/proc.go	/^func init() {$/;"	f	language:Go
init	examples/rust/ast.rs	/^    pub init: Option<P<Expr>>,$/;"	m	language:Rust	struct:Local
initSigmask	examples/go/proc.go	/^var initSigmask sigset$/;"	v	language:Go
initialize	examples/ruby/classes.rb	/^  def initialize(v)$/;"	f	language:Ruby	class:Fred
injectglist	examples/go/proc.go	/^func injectglist(glist *g) {$/;"	f	language:Go
inner	examples/rust/ast.rs	/^    pub inner: Span,$/;"	m	language:Rust	struct:Mod
inputs	examples/rust/ast.rs	/^    pub inputs: Vec<(Symbol, P<Expr>)>,$/;"	m	language:Rust	struct:InlineAsm
inputs	examples/rust/ast.rs	/^    pub inputs: Vec<Arg>,$/;"	m	language:Rust	struct:FnDecl
inputs	examples/rust/ast.rs	/^    pub inputs: Vec<P<Ty>>,$/;"	m	language:Rust	struct:ParenthesizedParameterData
inside	examples/cpp/marker-index.h	/^    flat_set<MarkerId> inside;$/;"	m	language:C++	struct:MarkerIndex::SpliceResult	typeref:typename:flat_set<MarkerId>
interpolated_ruby	textmate/ruby.tmLanguage.json	/^        "interpolated_ruby": {$/;"	o	language:JSON	object:repository
into	examples/rust/ast.rs	/^    fn into(self) -> Option<P<PathParameters>> {$/;"	F	language:Rust	implementation:AngleBracketedParameterData
into	examples/rust/ast.rs	/^    fn into(self) -> Option<P<PathParameters>> {$/;"	F	language:Rust	implementation:ParenthesizedParameterData
is	examples/cpp/rule.cc	/^bool Rule::is<Blank>() const { return type == BlankType; }$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:bool
is	examples/cpp/rule.cc	/^bool Rule::is<Repeat>() const { return type == RepeatType; }$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:bool
is	examples/cpp/rule.cc	/^bool Rule::is<Symbol>() const { return type == SymbolType; }$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:bool
is_by_value	examples/rust/ast.rs	/^    pub fn is_by_value(&self) -> bool {$/;"	F	language:Rust	implementation:BinOpKind
is_by_value	examples/rust/ast.rs	/^    pub fn is_by_value(u: UnOp) -> bool {$/;"	F	language:Rust	implementation:UnOp
is_comparison	examples/rust/ast.rs	/^    pub fn is_comparison(&self) -> bool {$/;"	F	language:Rust	implementation:BinOpKind
is_global	examples/rust/ast.rs	/^    pub fn is_global(&self) -> bool {$/;"	F	language:Rust	implementation:Path
is_indirect	examples/rust/ast.rs	/^    pub is_indirect: bool,$/;"	m	language:Rust	struct:InlineAsmOutput
is_item	examples/rust/ast.rs	/^    pub fn is_item(&self) -> bool {$/;"	F	language:Rust	implementation:Stmt
is_lifetime_param	examples/rust/ast.rs	/^    pub fn is_lifetime_param(&self) -> bool {$/;"	F	language:Rust	implementation:GenericParam
is_lt_parameterized	examples/rust/ast.rs	/^    pub fn is_lt_parameterized(&self) -> bool {$/;"	F	language:Rust	implementation:Generics
is_parameterized	examples/rust/ast.rs	/^    pub fn is_parameterized(&self) -> bool {$/;"	F	language:Rust	implementation:Generics
is_rw	examples/rust/ast.rs	/^    pub is_rw: bool,$/;"	m	language:Rust	struct:InlineAsmOutput
is_self	examples/rust/ast.rs	/^    pub fn is_self(&self) -> bool {$/;"	F	language:Rust	implementation:Arg
is_shift	examples/rust/ast.rs	/^    pub fn is_shift(&self) -> bool {$/;"	F	language:Rust	implementation:BinOpKind
is_shorthand	examples/rust/ast.rs	/^    pub is_shorthand: bool,$/;"	m	language:Rust	struct:Field
is_shorthand	examples/rust/ast.rs	/^    pub is_shorthand: bool,$/;"	m	language:Rust	struct:FieldPat
is_str	examples/rust/ast.rs	/^    pub fn is_str(&self) -> bool {$/;"	F	language:Rust	implementation:LitKind
is_struct	examples/rust/ast.rs	/^    pub fn is_struct(&self) -> bool {$/;"	F	language:Rust	implementation:VariantData
is_suffixed	examples/rust/ast.rs	/^    pub fn is_suffixed(&self) -> bool {$/;"	F	language:Rust	implementation:LitKind
is_sugared_doc	examples/rust/ast.rs	/^    pub is_sugared_doc: bool,$/;"	m	language:Rust	struct:Attribute
is_tuple	examples/rust/ast.rs	/^    pub fn is_tuple(&self) -> bool {$/;"	F	language:Rust	implementation:VariantData
is_type_param	examples/rust/ast.rs	/^    pub fn is_type_param(&self) -> bool {$/;"	F	language:Rust	implementation:GenericParam
is_type_parameterized	examples/rust/ast.rs	/^    pub fn is_type_parameterized(&self) -> bool {$/;"	F	language:Rust	implementation:Generics
is_unit	examples/rust/ast.rs	/^    pub fn is_unit(&self) -> bool {$/;"	F	language:Rust	implementation:VariantData
is_unsuffixed	examples/rust/ast.rs	/^    pub fn is_unsuffixed(&self) -> bool {$/;"	F	language:Rust	implementation:LitKind
isscanstatus	examples/go/proc.go	/^func isscanstatus(status uint32) bool {$/;"	f	language:Go
itab	examples/go/value.go	/^	itab *struct {$/;"	m	language:Go	struct:nonEmptyInterface
items	examples/rust/ast.rs	/^    pub items: Vec<ForeignItem>,$/;"	m	language:Rust	struct:ForeignMod
items	examples/rust/ast.rs	/^    pub items: Vec<P<Item>>,$/;"	m	language:Rust	struct:Mod
iterator	examples/cpp/marker-index.h	/^  Iterator iterator;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:Iterator
j	examples/ruby/declarations.rb	/^    def j$/;"	f	language:Ruby	class:A.B
jsonc-parser	package.json	/^    "jsonc-parser": "^2.1.0",$/;"	s	language:JSON	object:dependencies
key	examples/javascript/statements.js	/^  key: function(x \/* this is a parameter *\/) {$/;"	m	language:JavaScript	class:thing
keyword	textmate/typescript.tmLanguage.json	/^		"keyword": {$/;"	o	language:JSON	object:repository
keywords	textmate/cpp.tmLanguage.json	/^		"keywords": {$/;"	o	language:JSON	object:repository
keywords	textmate/go.tmLanguage.json	/^		"keywords": {$/;"	o	language:JSON	object:repository
keywords	textmate/rust.tmLanguage.json	/^		"keywords": {$/;"	o	language:JSON	object:repository
kind	examples/go/value.go	/^func (f flag) kind() Kind {$/;"	f	language:Go
kind	examples/rust/ast.rs	/^    pub kind: UseTreeKind,$/;"	m	language:Rust	struct:UseTree
l	examples/ruby/declarations.rb	/^    def self.l$/;"	F	language:Ruby	class:A.B
lazy	examples/rust/ast.rs	/^    pub fn lazy(&self) -> bool {$/;"	F	language:Rust	implementation:BinOpKind
left	examples/cpp/marker-index.h	/^    Node *left;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:Node *
left_ancestor_position	examples/cpp/marker-index.h	/^    Point left_ancestor_position;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:Point
left_ancestor_position_stack	examples/cpp/marker-index.h	/^    std::vector<Point> left_ancestor_position_stack;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:std::vector<Point>
left_extent	examples/cpp/marker-index.h	/^    Point left_extent;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:Point
left_marker_ids	examples/cpp/marker-index.h	/^    flat_set<MarkerId> left_marker_ids;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:flat_set<MarkerId>
legacy	examples/rust/ast.rs	/^    pub legacy: bool,$/;"	m	language:Rust	struct:MacroDef
letterTest	examples/go/letter_test.go	/^var letterTest = []rune{$/;"	v	language:Go
lhs_ty	examples/rust/ast.rs	/^    pub lhs_ty: P<Ty>,$/;"	m	language:Rust	struct:WhereEqPredicate
lib	tsconfig.json	/^		"lib": [$/;"	a	language:JSON	object:compilerOptions
license	package.json	/^  "license": "MIT",$/;"	s	language:JSON
lifetime	examples/rust/ast.rs	/^    pub lifetime: Lifetime,$/;"	m	language:Rust	struct:LifetimeDef
lifetime	examples/rust/ast.rs	/^    pub lifetime: Lifetime,$/;"	m	language:Rust	struct:WhereRegionPredicate
lifetimes	examples/rust/ast.rs	/^    pub lifetimes: Vec<Lifetime>,$/;"	m	language:Rust	struct:AngleBracketedParameterData
line_continuation_character	textmate/cpp.tmLanguage.json	/^		"line_continuation_character": {$/;"	o	language:JSON	object:repository
linear	examples/go/letter_test.go	/^func linear(ranges []Range16, r uint16) bool {$/;"	f	language:Go
lint	package.json	/^    "lint": "eslint src --ext ts",$/;"	s	language:JSON	object:scripts
literal	textmate/typescript.tmLanguage.json	/^		"literal": {$/;"	o	language:JSON	object:repository
literals	textmate/rust.tmLanguage.json	/^		"literals": {$/;"	o	language:JSON	object:repository
lockOSThread	examples/go/proc.go	/^func lockOSThread() {$/;"	f	language:Go
lockedOSThread	examples/go/proc.go	/^func lockedOSThread() bool {$/;"	f	language:Go
lockextra	examples/go/proc.go	/^func lockextra(nilokay bool) *m {$/;"	f	language:Go
m0	examples/go/proc.go	/^	m0 m$/;"	v	language:Go
main	examples/go/no_newline_at_eof.go	/^func main() {$/;"	f	language:Go
main	examples/go/no_newline_at_eof.go	/^package main$/;"	p	language:Go
main	examples/go/proc.go	/^func main() {$/;"	f	language:Go
main	examples/go/small.go	/^func main() {$/;"	f	language:Go
main	package.json	/^  "main": ".\/out\/extension.js",$/;"	s	language:JSON
main.main	examples/go/no_newline_at_eof.go	/^func main() {$/;"	f	language:Go
main_init	examples/go/proc.go	/^func main_init()$/;"	f	language:Go
main_init_done	examples/go/proc.go	/^var main_init_done chan bool$/;"	v	language:Go
main_main	examples/go/proc.go	/^func main_main()$/;"	f	language:Go
makeBytes	examples/go/value.go	/^func makeBytes(f flag, v []byte, t Type) Value {$/;"	f	language:Go
makeComplex	examples/go/value.go	/^func makeComplex(f flag, v complex128, t Type) Value {$/;"	f	language:Go
makeFloat	examples/go/value.go	/^func makeFloat(f flag, v float64, t Type) Value {$/;"	f	language:Go
makeInt	examples/go/value.go	/^func makeInt(f flag, bits uint64, t Type) Value {$/;"	f	language:Go
makeRunes	examples/go/value.go	/^func makeRunes(f flag, v []rune, t Type) Value {$/;"	f	language:Go
makeString	examples/go/value.go	/^func makeString(f flag, v string, t Type) Value {$/;"	f	language:Go
makechan	examples/go/value.go	/^func makechan(typ *rtype, size uint64) (ch unsafe.Pointer)$/;"	f	language:Go
makemap	examples/go/value.go	/^func makemap(t *rtype) (m unsafe.Pointer)$/;"	f	language:Go
malg	examples/go/proc.go	/^func malg(stacksize int32) *g {$/;"	f	language:Go
mapaccess	examples/go/value.go	/^func mapaccess(t *rtype, m unsafe.Pointer, key unsafe.Pointer) (val unsafe.Pointer)$/;"	f	language:Go
mapassign	examples/go/value.go	/^func mapassign(t *rtype, m unsafe.Pointer, key, val unsafe.Pointer)$/;"	f	language:Go
mapdelete	examples/go/value.go	/^func mapdelete(t *rtype, m unsafe.Pointer, key unsafe.Pointer)$/;"	f	language:Go
mapiterinit	examples/go/value.go	/^func mapiterinit(t *rtype, m unsafe.Pointer) unsafe.Pointer$/;"	f	language:Go
mapiterkey	examples/go/value.go	/^func mapiterkey(it unsafe.Pointer) (key unsafe.Pointer)$/;"	f	language:Go
mapiternext	examples/go/value.go	/^func mapiternext(it unsafe.Pointer)$/;"	f	language:Go
maplen	examples/go/value.go	/^func maplen(m unsafe.Pointer) int$/;"	f	language:Go
marker_index	examples/cpp/marker-index.h	/^    MarkerIndex *marker_index;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:MarkerIndex *
match	textmate/cpp.tmLanguage.json	/^					"match": "(%)(?!\\"\\\\s*(PRI|SCN))",$/;"	s	language:JSON	object:repository.string_placeholder.patterns.1
match	textmate/cpp.tmLanguage.json	/^					"match": "(?:\\\\bdefined\\\\b\\\\s*$)|(?:\\\\bdefined\\\\b(?=\\\\s*\\\\(*\\\\s*(?:(?!defin/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.0
match	textmate/cpp.tmLanguage.json	/^					"match": "(?x) %\\n(\\\\d+\\\\$)?                           # field (argument #)\\n[#0\\\\-/;"	s	language:JSON	object:repository.string_placeholder.patterns.0
match	textmate/cpp.tmLanguage.json	/^					"match": "(?x)\\\\\\\\ (\\n\\\\\\\\             |\\n[abefnprtv'\\"?]   |\\n[0-3]\\\\d{,2}  /;"	s	language:JSON	object:repository.string_escaped_char.patterns.0
match	textmate/cpp.tmLanguage.json	/^					"match": "(\\\\\\\\)\\\\n",$/;"	s	language:JSON	object:repository.line_continuation_character.patterns.0
match	textmate/cpp.tmLanguage.json	/^					"match": ";",$/;"	s	language:JSON	object:repository.keywords.patterns.4
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\(",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.2
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\)",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.3
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\*\/.*\\\\n",$/;"	s	language:JSON	object:repository.comments.patterns.2
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\\\\\.",$/;"	s	language:JSON	object:repository.string_escaped_char.patterns.1
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\b((0(x|X)[0-9a-fA-F]([0-9a-fA-F']*[0-9a-fA-F])?)|(0(b|B)[01]([01']*[01])?)|((/;"	s	language:JSON	object:repository.numbers.patterns.0
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\b(NULL|true|false|TRUE|FALSE)\\\\b",$/;"	s	language:JSON	object:repository.constants.patterns.0
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\b(NULL|true|false|TRUE|FALSE)\\\\b",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.7
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\b(_Pragma)\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.2
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\b(alignas|alignof|and|and_eq|asm|atomic_cancel|atomic_commit|atomic_noexcept|/;"	s	language:JSON	object:repository.keywords.patterns.0
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\b(break|case|catch|continue|co_await|co_return|co_yield|default|delete|do|els/;"	s	language:JSON	object:repository.keywords.patterns.3
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\b(override|final|audit|axiom|import|module|transaction_safe|transaction_safe_/;"	s	language:JSON	object:repository.keywords.patterns.1
match	textmate/cpp.tmLanguage.json	/^					"match": "\\\\bdefined\\\\b",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.1
match	textmate/cpp.tmLanguage.json	/^					"match": "^\/\/ =(\\\\s*.*?)\\\\s*=\\\\s*$\\\\n?",$/;"	s	language:JSON	object:repository.comments.patterns.3
match	textmate/cpp.tmLanguage.json	/^					"match": "^\/\\\\* =(\\\\s*.*?)\\\\s*= \\\\*\/$\\\\n?",$/;"	s	language:JSON	object:repository.comments.patterns.0
match	textmate/cpp.tmLanguage.json	/^					"match": "^\\\\s*#\\\\s*(else|elif|endif)\\\\b",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.1
match	textmate/cpp.tmLanguage.json	/^					"match": "^\\\\s*#\\\\s*(else|elif|endif)\\\\b",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.1
match	textmate/go.tmLanguage.json	/^							"match": "[^']+",$/;"	s	language:JSON	object:repository.runes.patterns.0.patterns.1
match	textmate/go.tmLanguage.json	/^							"match": "\\\\G(\\\\\\\\([0-7]{3}|[abfnrtv\\\\\\\\'\\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U/;"	s	language:JSON	object:repository.runes.patterns.0.patterns.0
match	textmate/go.tmLanguage.json	/^					"match": "%(\\\\[\\\\d+\\\\])?([\\\\+#\\\\-0\\\\x20]{,2}((\\\\d+|\\\\*)?(\\\\.?(\\\\d+|\\\\/;"	s	language:JSON	object:repository.string_placeholder.patterns.0
match	textmate/go.tmLanguage.json	/^					"match": "(&&|\\\\|\\\\||!)",$/;"	s	language:JSON	object:repository.operators.patterns.5
match	textmate/go.tmLanguage.json	/^					"match": "(&(?!\\\\^)|\\\\||\\\\^|&\\\\^|<<|>>)",$/;"	s	language:JSON	object:repository.operators.patterns.8
match	textmate/go.tmLanguage.json	/^					"match": "(==|!=|<=|>=|<(?!<)|>(?!>))",$/;"	s	language:JSON	object:repository.operators.patterns.4
match	textmate/go.tmLanguage.json	/^					"match": "(=|\\\\+=|\\\\-=|\\\\|=|\\\\^=|\\\\*=|\/=|:=|%=|<<=|>>=|&\\\\^=|&=)",$/;"	s	language:JSON	object:repository.operators.patterns.6
match	textmate/go.tmLanguage.json	/^					"match": "(\\\\*|&)(?=\\\\w)",$/;"	s	language:JSON	object:repository.operators.patterns.0
match	textmate/go.tmLanguage.json	/^					"match": "(\\\\+|\\\\-|\\\\*|\/|%)",$/;"	s	language:JSON	object:repository.operators.patterns.7
match	textmate/go.tmLanguage.json	/^					"match": "<\\\\-",$/;"	s	language:JSON	object:repository.operators.patterns.1
match	textmate/go.tmLanguage.json	/^					"match": "\\\\+\\\\+",$/;"	s	language:JSON	object:repository.operators.patterns.3
match	textmate/go.tmLanguage.json	/^					"match": "\\\\-\\\\-",$/;"	s	language:JSON	object:repository.operators.patterns.2
match	textmate/go.tmLanguage.json	/^					"match": "\\\\.\\\\.\\\\.",$/;"	s	language:JSON	object:repository.operators.patterns.9
match	textmate/go.tmLanguage.json	/^					"match": "\\\\\\\\([0-7]{3}|[abfnrtv\\\\\\\\'\\"]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4}|U[0-9a-fA/;"	s	language:JSON	object:repository.string_escaped_char.patterns.0
match	textmate/go.tmLanguage.json	/^					"match": "\\\\\\\\[^0-7xuUabfnrtv\\\\'\\"]",$/;"	s	language:JSON	object:repository.string_escaped_char.patterns.1
match	textmate/go.tmLanguage.json	/^					"match": "\\\\b(break|case|continue|default|defer|panic|recover|else|fallthrough|for|go|got/;"	s	language:JSON	object:repository.keywords.patterns.0
match	textmate/go.tmLanguage.json	/^					"match": "\\\\b0[0-7]*[89]\\\\d*\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.7
match	textmate/go.tmLanguage.json	/^					"match": "\\\\bchan\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.1
match	textmate/go.tmLanguage.json	/^					"match": "\\\\bconst\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.2
match	textmate/go.tmLanguage.json	/^					"match": "\\\\bfunc\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.3
match	textmate/go.tmLanguage.json	/^					"match": "\\\\bfunc\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.8
match	textmate/go.tmLanguage.json	/^					"match": "\\\\bimport\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.11
match	textmate/go.tmLanguage.json	/^					"match": "\\\\binterface\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.4
match	textmate/go.tmLanguage.json	/^					"match": "\\\\bmap\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.5
match	textmate/go.tmLanguage.json	/^					"match": "\\\\bpackage\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.9
match	textmate/go.tmLanguage.json	/^					"match": "\\\\bstruct\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.6
match	textmate/go.tmLanguage.json	/^					"match": "\\\\btype\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.10
match	textmate/go.tmLanguage.json	/^					"match": "\\\\bvar\\\\b",$/;"	s	language:JSON	object:repository.keywords.patterns.12
match	textmate/go.tmLanguage.json	/^			"match": "(\\\\.\\\\d+([Ee][-+]\\\\d+)?i?)\\\\b|\\\\b\\\\d+\\\\.\\\\d*(([Ee][-+]\\\\d+)?i?\\\\/;"	s	language:JSON	object:patterns.6
match	textmate/go.tmLanguage.json	/^			"match": ";",$/;"	s	language:JSON	object:patterns.9
match	textmate/go.tmLanguage.json	/^			"match": "<\\\\-([\\\\t ]+)chan\\\\b",$/;"	s	language:JSON	object:patterns.3
match	textmate/go.tmLanguage.json	/^			"match": "\\\\[\\\\](\\\\s+)",$/;"	s	language:JSON	object:patterns.5
match	textmate/go.tmLanguage.json	/^			"match": "\\\\b((0b[0-9]+)|(0x[0-9a-fA-F]+)|(0[0-7]+i?)|(\\\\d+([Ee]\\\\d+)?i?)|(\\\\d+[Ee][-/;"	s	language:JSON	object:patterns.7
match	textmate/go.tmLanguage.json	/^			"match": "\\\\b(true|false|nil|iota)\\\\b",$/;"	s	language:JSON	object:patterns.8
match	textmate/go.tmLanguage.json	/^			"match": "\\\\bchan([\\\\t ]+)<-",$/;"	s	language:JSON	object:patterns.4
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\S\\\\w*",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.symbol.patterns.1
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\S\\\\w*",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.symbol.patterns.1
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\S\\\\w*",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.string.patterns.1
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\S\\\\w*",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.string.patterns.1
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\<|\\\\\\\\>",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\<|\\\\\\\\>",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.angles.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\<|\\\\\\\\>|\\\\\\\\\\\\\\\\",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.angles.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\(|\\\\\\\\\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\(|\\\\\\\\\\\\)",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.parens.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\(|\\\\\\\\\\\\)|\\\\\\\\\\\\\\\\",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.parens.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\[|\\\\\\\\\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\[|\\\\\\\\\\\\]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.brackets.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\[|\\\\\\\\\\\\]|\\\\\\\\\\\\\\\\",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.brackets.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\\\\\|\\\\\\\\[ ]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.symbol.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\\\\\|\\\\\\\\[ ]",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.string.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\{|\\\\\\\\\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\{|\\\\\\\\\\\\}",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.braces.patterns.0
match	textmate/ruby.tmLanguage.json	/^                                    "match": "\\\\\\\\\\\\{|\\\\\\\\\\\\}|\\\\\\\\\\\\\\\\",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.braces.patterns.0
match	textmate/ruby.tmLanguage.json	/^                    "match": "(#@)[a-zA-Z_]\\\\w*",$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.1
match	textmate/ruby.tmLanguage.json	/^                    "match": "(#@@)[a-zA-Z_]\\\\w*",$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.2
match	textmate/ruby.tmLanguage.json	/^                    "match": "(#\\\\$)[a-zA-Z_]\\\\w*",$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.3
match	textmate/ruby.tmLanguage.json	/^                    "match": "(\\\\{)\\\\d+(,\\\\d+)?(\\\\})",$/;"	s	language:JSON	object:repository.regex_sub.patterns.2
match	textmate/ruby.tmLanguage.json	/^                    "match": ",",$/;"	s	language:JSON	object:patterns.34.patterns.2
match	textmate/ruby.tmLanguage.json	/^                    "match": "[_a-zA-Z][_a-zA-Z0-9]*",$/;"	s	language:JSON	object:patterns.34.patterns.1
match	textmate/ruby.tmLanguage.json	/^                    "match": "\\\\\\\\'|\\\\\\\\\\\\\\\\",$/;"	s	language:JSON	object:patterns.12.patterns.0
match	textmate/ruby.tmLanguage.json	/^            "match": "(%|&|\\\\*\\\\*|\\\\*|\\\\+|-|\/)",$/;"	s	language:JSON	object:patterns.42
match	textmate/ruby.tmLanguage.json	/^            "match": "(&\\\\.)\\\\s*(?![A-Z])"$/;"	s	language:JSON	object:patterns.41
match	textmate/ruby.tmLanguage.json	/^            "match": "(::)\\\\s*(?=[A-Z])"$/;"	s	language:JSON	object:patterns.47
match	textmate/ruby.tmLanguage.json	/^            "match": "(?<!\\\\()\/=",$/;"	s	language:JSON	object:patterns.11
match	textmate/ruby.tmLanguage.json	/^            "match": "(?<!\\\\.)\\\\b(and|not|or)\\\\b(?![?!])",$/;"	s	language:JSON	object:patterns.39
match	textmate/ruby.tmLanguage.json	/^            "match": "(?<=^|[ \\\\t])!|&&|\\\\|\\\\||\\\\^",$/;"	s	language:JSON	object:patterns.40
match	textmate/ruby.tmLanguage.json	/^            "match": "(\\\\.|::)\\\\s*(?![A-Z])"$/;"	s	language:JSON	object:patterns.48
match	textmate/ruby.tmLanguage.json	/^            "match": ",",$/;"	s	language:JSON	object:patterns.46
match	textmate/ruby.tmLanguage.json	/^            "match": "->",$/;"	s	language:JSON	object:patterns.36
match	textmate/ruby.tmLanguage.json	/^            "match": ":",$/;"	s	language:JSON	object:patterns.49
match	textmate/ruby.tmLanguage.json	/^            "match": ";",$/;"	s	language:JSON	object:patterns.45
match	textmate/ruby.tmLanguage.json	/^            "match": "<<=|%=|&{1,2}=|\\\\*=|\\\\*\\\\*=|\\\\+=|-=|\\\\^=|\\\\|{1,2}=|<<",$/;"	s	language:JSON	object:patterns.37
match	textmate/ruby.tmLanguage.json	/^            "match": "<=>|<(?!<|=)|>(?!<|=|>)|<=|>=|===|==|=~|!=|!~|(?<=[ \\\\t])\\\\?",$/;"	s	language:JSON	object:patterns.38
match	textmate/ruby.tmLanguage.json	/^            "match": "=",$/;"	s	language:JSON	object:patterns.43
match	textmate/ruby.tmLanguage.json	/^            "match": "=>",$/;"	s	language:JSON	object:patterns.35
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\(|\\\\)",$/;"	s	language:JSON	object:patterns.54
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\[",$/;"	s	language:JSON	object:patterns.52
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\\\\\(?:[0-7]{1,3}|x[\\\\da-fA-F]{1,2}|.)",$/;"	s	language:JSON	object:repository.escaped_char
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\]",$/;"	s	language:JSON	object:patterns.53
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\b(0|(0[dD]\\\\d|[1-9])(?>_?\\\\d)*)r?i?\\\\b",$/;"	s	language:JSON	object:patterns.7
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\b(BEGIN|END|begin|break|case|do|else|elsif|ensure|for|if|in|next|redo|/;"	s	language:JSON	object:patterns.1
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\b(__ENCODING__|__LINE__|__FILE__|alias|and|class|def|module|not|or|sel/;"	s	language:JSON	object:patterns.0
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\b(false|nil|true)\\\\b",$/;"	s	language:JSON	object:patterns.5
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\b(new|loop|raise|fail|catch|throw)\\\\b",$/;"	s	language:JSON	object:patterns.3
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\b(refine|using)\\\\b(?![?!])",$/;"	s	language:JSON	object:patterns.4
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\b0([oO]?[0-7](?>_?[0-7])*)?r?i?\\\\b",$/;"	s	language:JSON	object:patterns.10
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\b0[bB][01](?>_?[01])*r?i?\\\\b",$/;"	s	language:JSON	object:patterns.9
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\b0[xX]\\\\h(?>_?\\\\h)*r?i?\\\\b",$/;"	s	language:JSON	object:patterns.8
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\bdefined[?]",$/;"	s	language:JSON	object:patterns.2
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\{",$/;"	s	language:JSON	object:patterns.50
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\||~|>>",$/;"	s	language:JSON	object:patterns.44
match	textmate/ruby.tmLanguage.json	/^            "match": "\\\\}",$/;"	s	language:JSON	object:patterns.51
match	textmate/ruby.tmLanguage.json	/^            "match":$/;"	s	language:JSON	object:patterns.19
match	textmate/ruby.tmLanguage.json	/^            "match":$/;"	s	language:JSON	object:patterns.6
match	textmate/rust.tmLanguage.json	/^					"match": "(!|\\\\+|-|\/|\\\\*|%|\\\\^|&|\\\\||<<|>>)"$/;"	s	language:JSON	object:repository.keywords.patterns.5
match	textmate/rust.tmLanguage.json	/^					"match": "(&&|\\\\|\\\\||==|!=)"$/;"	s	language:JSON	object:repository.keywords.patterns.3
match	textmate/rust.tmLanguage.json	/^					"match": "(<=|>=|<|>)"$/;"	s	language:JSON	object:repository.keywords.patterns.7
match	textmate/rust.tmLanguage.json	/^					"match": "(=>|::)"$/;"	s	language:JSON	object:repository.keywords.patterns.2
match	textmate/rust.tmLanguage.json	/^					"match": "(\\\\+=|-=|\/=|\\\\*=|%=|\\\\^=|&=|\\\\|=|<<=|>>=|=)"$/;"	s	language:JSON	object:repository.keywords.patterns.4
match	textmate/rust.tmLanguage.json	/^					"match": ";",$/;"	s	language:JSON	object:repository.keywords.patterns.8
match	textmate/rust.tmLanguage.json	/^					"match": "[&*](?=[a-zA-Z0-9_\\\\(\\\\[\\\\|\\\\\\"]+)"$/;"	s	language:JSON	object:repository.keywords.patterns.6
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)"$/;"	s	language:JSON	object:repository.escaped_character.patterns.0
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b(async|as|'static|Self|abstract|box|const|crate|dyn|enum|extern|final|fn|imp/;"	s	language:JSON	object:repository.keywords.patterns.0
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b(await|become|break|continue|do|else|for|if|in|loop|match|move|return|try|ty/;"	s	language:JSON	object:repository.keywords.patterns.1
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b(true|false)\\\\b",$/;"	s	language:JSON	object:repository.literals.patterns.0
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b0b[01_]+([ui](8|16|32|64|128|s|size))?\\\\b"$/;"	s	language:JSON	object:repository.literals.patterns.7
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b0o[0-7_]+([ui](8|16|32|64|128|s|size))?\\\\b"$/;"	s	language:JSON	object:repository.literals.patterns.6
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b0x[a-fA-F0-9_]+([ui](8|16|32|64|128|s|size))?\\\\b"$/;"	s	language:JSON	object:repository.literals.patterns.5
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b[0-9][0-9_]*([ui](8|16|32|64|128|s|size))?\\\\b"$/;"	s	language:JSON	object:repository.literals.patterns.4
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b[0-9][0-9_]*(\\\\.[0-9][0-9_]*)?([eE][+-]?[0-9_]+)?(f32|f64)\\\\b"$/;"	s	language:JSON	object:repository.literals.patterns.3
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b[0-9][0-9_]*(\\\\.[0-9][0-9_]*)?[eE][+-]?[0-9_]+(f32|f64)?\\\\b"$/;"	s	language:JSON	object:repository.literals.patterns.2
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b[0-9][0-9_]*\\\\.[0-9][0-9_]*([eE][+-]?[0-9_]+)?(f32|f64)?\\\\b"$/;"	s	language:JSON	object:repository.literals.patterns.1
match	textmate/rust.tmLanguage.json	/^					"match": "\\\\b\\\\w+\\\\s*=",$/;"	s	language:JSON	object:repository.metaItem.patterns.1
match	textmate/rust.tmLanguage.json	/^					"match": "b?'([^'\\\\\\\\]|\\\\\\\\(x[0-9A-Fa-f]{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[/;"	s	language:JSON	object:repository.literals.patterns.8
match	textmate/rust.tmLanguage.json	/^			"match": "\\\\b(for)\\\\b",$/;"	s	language:JSON	object:patterns.0
match	textmate/typescript.tmLanguage.json	/^							"match": "(?:.|(\\\\\\\\(?:[0-7]{3}|x\\\\h\\\\h|u\\\\h\\\\h\\\\h\\\\h))|(\\\\\\\\c[A-Z])|/;"	s	language:JSON	object:repository.regexp.patterns.6.patterns.0
match	textmate/typescript.tmLanguage.json	/^					"match": "(?<!\\\\.|\\\\$)\\\\bInfinity\\\\b(?!\\\\$)"$/;"	s	language:JSON	object:repository.numericConstant-literal.patterns.1
match	textmate/typescript.tmLanguage.json	/^					"match": "(?<!\\\\.|\\\\$)\\\\bNaN\\\\b(?!\\\\$)"$/;"	s	language:JSON	object:repository.numericConstant-literal.patterns.0
match	textmate/typescript.tmLanguage.json	/^					"match": "(?<!\\\\w)@(abstract|access|alias|arg|argument|async|attribute|augments|author|be/;"	s	language:JSON	object:repository.docblock.patterns.0
match	textmate/typescript.tmLanguage.json	/^					"match": "(?x)\\n(?:(?<=@param)|(?<=@arg)|(?<=@argument)|(?<=@type))\\n\\\\s+\\n({(?:\\n  \\/;"	s	language:JSON	object:repository.docblock.patterns.1
match	textmate/typescript.tmLanguage.json	/^					"match": "(?x)\\n(?<!\\\\$)(?:\\n  (?:\\\\b[0-9]+(\\\\.)[0-9]+[eE][+-]?[0-9]+\\\\b)| # 1.1E/;"	s	language:JSON	object:repository.numeric-literal.patterns.3
match	textmate/typescript.tmLanguage.json	/^					"match": "(?x)\\n({(?:\\n  \\\\* |                                       # {*} any type\\n /;"	s	language:JSON	object:repository.docblock.patterns.2
match	textmate/typescript.tmLanguage.json	/^					"match": ";",$/;"	s	language:JSON	object:repository.keyword.patterns.4
match	textmate/typescript.tmLanguage.json	/^					"match": "[?+*]|\\\\{(\\\\d+,\\\\d+|\\\\d+,|,\\\\d+|\\\\d+)\\\\}\\\\??"$/;"	s	language:JSON	object:repository.regexp.patterns.2
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\\\\\([0-7]{3}|x\\\\h\\\\h|u\\\\h\\\\h\\\\h\\\\h)"$/;"	s	language:JSON	object:repository.regex-character-class.patterns.1
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\\\\\."$/;"	s	language:JSON	object:repository.regex-character-class.patterns.3
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\\\\\[1-9]\\\\d*"$/;"	s	language:JSON	object:repository.regexp.patterns.1
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\\\\\[bB]|\\\\^|\\\\$"$/;"	s	language:JSON	object:repository.regexp.patterns.0
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\\\\\[wWsSdDtrnvf]|\\\\."$/;"	s	language:JSON	object:repository.regex-character-class.patterns.0
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\\\\\c[A-Z]"$/;"	s	language:JSON	object:repository.regex-character-class.patterns.2
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\b(?<!\\\\$)0(b|B)[01]+\\\\b(?!\\\\$)"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.1
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\b(?<!\\\\$)0(o|O)?[0-7]+\\\\b(?!\\\\$)"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.2
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\b(?<!\\\\$)0(x|X)[0-9a-fA-F]+\\\\b(?!\\\\$)"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.0
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\b(abstract|arguments|as|async|class|const|enum|export|extends|from|function|i/;"	s	language:JSON	object:repository.keyword.patterns.2
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\b(await|break|case|catch|continue|debugger|default|delete|do|in|of|else|eval|/;"	s	language:JSON	object:repository.keyword.patterns.3
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\b(declare|namespace|interface|type)\\\\s+(?=\\\\w)",$/;"	s	language:JSON	object:repository.keyword.patterns.1
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\b(module)\\\\s+(?=[\\\\w'\\"])",$/;"	s	language:JSON	object:repository.keyword.patterns.0
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\b(null|undefined)\\\\b",$/;"	s	language:JSON	object:repository.literal.patterns.1
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\b(true|false)\\\\b",$/;"	s	language:JSON	object:repository.literal.patterns.0
match	textmate/typescript.tmLanguage.json	/^					"match": "\\\\|"$/;"	s	language:JSON	object:repository.regexp.patterns.3
match	textmate/typescript.tmLanguage.json	/^			"match": "\\\\\\\\(x\\\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.|$)"$/;"	s	language:JSON	object:repository.string-character-escape
mcommoninit	examples/go/proc.go	/^func mcommoninit(mp *m) {$/;"	f	language:Go
mcount	examples/go/proc.go	/^func mcount() int32 {$/;"	f	language:Go
memclr	examples/go/value.go	/^func memclr(ptr unsafe.Pointer, n uintptr)$/;"	f	language:Go
metaItem	textmate/rust.tmLanguage.json	/^		"metaItem": {$/;"	o	language:JSON	object:repository
methodName	examples/go/value.go	/^func methodName() string {$/;"	f	language:Go
methodReceiver	examples/go/value.go	/^func methodReceiver(op string, v Value, methodIndex int) (rcvrtype, t *rtype, fn unsafe.Pointer)/;"	f	language:Go
mget	examples/go/proc.go	/^func mget() *m {$/;"	f	language:Go
mhelpgc	examples/go/proc.go	/^func mhelpgc() {$/;"	f	language:Go
module	examples/rust/ast.rs	/^    pub module: Mod,$/;"	m	language:Rust	struct:Crate
module	tsconfig.json	/^		"module": "commonjs",$/;"	s	language:JSON	object:compilerOptions
mom	examples/go/small.go	/^	mom  *Person$/;"	m	language:Go	struct:Person
mput	examples/go/proc.go	/^func mput(mp *m) {$/;"	f	language:Go
mspinning	examples/go/proc.go	/^func mspinning() {$/;"	f	language:Go
mstart	examples/go/proc.go	/^func mstart() {$/;"	f	language:Go
mstart1	examples/go/proc.go	/^func mstart1() {$/;"	f	language:Go
mustBe	examples/go/value.go	/^func (f flag) mustBe(expected Kind) {$/;"	f	language:Go
mustBeAssignable	examples/go/value.go	/^func (f flag) mustBeAssignable() {$/;"	f	language:Go
mustBeExported	examples/go/value.go	/^func (f flag) mustBeExported() {$/;"	f	language:Go
mutbl	examples/rust/ast.rs	/^    pub mutbl: Mutability,$/;"	m	language:Rust	struct:MutTy
name	examples/go/small.go	/^	name string$/;"	m	language:Go	struct:Person
name	examples/rust/ast.rs	/^    pub name: Ident,$/;"	m	language:Rust	struct:Variant_
name	examples/rust/ast.rs	/^    pub name: Name,$/;"	m	language:Rust	struct:MetaItem
name	package.json	/^  "name": "parse-tree",$/;"	s	language:JSON
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.patterns.0
name	textmate/cpp.tmLanguage.json	/^									"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.patterns.0
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.comment.cpp"$/;"	s	language:JSON	object:repository.comments.patterns.4.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^									"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "comment.line.double-slash.cpp",$/;"	s	language:JSON	object:repository.comments.patterns.4.patterns.0
name	textmate/cpp.tmLanguage.json	/^							"name": "constant.character.escape.line-continuation.c"$/;"	s	language:JSON	object:repository.line_continuation_character.patterns.0.captures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "constant.numeric.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.beginCaptures.3
name	textmate/cpp.tmLanguage.json	/^							"name": "invalid.illegal.delimiter-too-long.cpp"$/;"	s	language:JSON	object:repository.strings.patterns.0.beginCaptures.3
name	textmate/cpp.tmLanguage.json	/^							"name": "invalid.illegal.delimiter-too-long.cpp"$/;"	s	language:JSON	object:repository.strings.patterns.0.endCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "invalid.illegal.placeholder.c"$/;"	s	language:JSON	object:repository.string_placeholder.patterns.1.captures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "invalid.illegal.stray-$1.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.1.captures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "invalid.illegal.stray-$1.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.1.captures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.control.cpp"$/;"	s	language:JSON	object:repository.keywords.patterns.3.captures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.operator.ternary.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.operator.ternary.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.cpp"$/;"	s	language:JSON	object:repository.keywords.patterns.0.captures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.cpp"$/;"	s	language:JSON	object:repository.keywords.patterns.1.captures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.cpp"$/;"	s	language:JSON	object:repository.keywords.patterns.2.captures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.endCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.endCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.endCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.endCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.endCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.endCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.encoding.cpp"$/;"	s	language:JSON	object:repository.strings.patterns.0.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.encoding.cpp"$/;"	s	language:JSON	object:repository.strings.patterns.1.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.0
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.toc-list.banner.block.c"$/;"	s	language:JSON	object:repository.comments.patterns.0.captures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "meta.toc-list.banner.line.c"$/;"	s	language:JSON	object:repository.comments.patterns.3.captures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.comment.begin.c"$/;"	s	language:JSON	object:repository.comments.patterns.1.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.comment.end.c"$/;"	s	language:JSON	object:repository.comments.patterns.1.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.endCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.endCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.endCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.endCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.endCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.endCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.begin.c"$/;"	s	language:JSON	object:patterns.9.patterns.1.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.begin.c"$/;"	s	language:JSON	object:patterns.9.patterns.2.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.begin.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.begin.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.begin.c"$/;"	s	language:JSON	object:repository.strings.patterns.1.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.begin.c"$/;"	s	language:JSON	object:repository.strings.patterns.2.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.begin.cpp"$/;"	s	language:JSON	object:repository.strings.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.end.c"$/;"	s	language:JSON	object:patterns.9.patterns.1.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.end.c"$/;"	s	language:JSON	object:patterns.9.patterns.2.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.end.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.end.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.end.c"$/;"	s	language:JSON	object:repository.strings.patterns.1.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.end.c"$/;"	s	language:JSON	object:repository.strings.patterns.2.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.definition.string.end.cpp"$/;"	s	language:JSON	object:repository.strings.patterns.0.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.arguments.begin.bracket.round.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.arguments.end.bracket.round.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4.endCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.block.begin.bracket.curly.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.block.begin.bracket.curly.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.block.end.bracket.curly.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.block.end.bracket.curly.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.parens.begin.bracket.round.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.parens.begin.bracket.round.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.parens.end.bracket.round.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9.endCaptures.0
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.section.parens.end.bracket.round.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5.endCaptures.1
name	textmate/cpp.tmLanguage.json	/^							"name": "punctuation.whitespace.comment.leading.cpp"$/;"	s	language:JSON	object:repository.comments.patterns.4.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^					"name": "comment.block.c"$/;"	s	language:JSON	object:repository.comments.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "comment.block.c"$/;"	s	language:JSON	object:repository.comments.patterns.1
name	textmate/cpp.tmLanguage.json	/^					"name": "comment.line.banner.cpp"$/;"	s	language:JSON	object:repository.comments.patterns.3
name	textmate/cpp.tmLanguage.json	/^					"name": "constant.character.escape.c"$/;"	s	language:JSON	object:repository.string_escaped_char.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "constant.language.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.7
name	textmate/cpp.tmLanguage.json	/^					"name": "constant.numeric.c"$/;"	s	language:JSON	object:repository.numbers.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "constant.numeric.cpp"$/;"	s	language:JSON	object:repository.constants.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "constant.other.placeholder.c"$/;"	s	language:JSON	object:repository.string_placeholder.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "invalid.illegal.macro-name.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.1
name	textmate/cpp.tmLanguage.json	/^					"name": "invalid.illegal.stray-comment-end.c"$/;"	s	language:JSON	object:repository.comments.patterns.2
name	textmate/cpp.tmLanguage.json	/^					"name": "invalid.illegal.unknown-escape.c"$/;"	s	language:JSON	object:repository.string_escaped_char.patterns.1
name	textmate/cpp.tmLanguage.json	/^					"name": "keyword.other.directive.$3.c"$/;"	s	language:JSON	object:patterns.9.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^					"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^					"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^					"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^					"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else-block.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^					"name": "keyword.other.directive.conditional.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^					"name": "keyword.other.directive.define.c"$/;"	s	language:JSON	object:patterns.8.beginCaptures.1
name	textmate/cpp.tmLanguage.json	/^					"name": "keyword.other.semi.go"$/;"	s	language:JSON	object:repository.keywords.patterns.4
name	textmate/cpp.tmLanguage.json	/^					"name": "meta.block.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1
name	textmate/cpp.tmLanguage.json	/^					"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^					"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^					"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^					"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else-block.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^					"name": "meta.preprocessor.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else.beginCaptures.0
name	textmate/cpp.tmLanguage.json	/^					"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "meta.preprocessor.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:patterns.8.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:patterns.9.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-disabled-elif.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-elif.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else-block.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.definition.directive.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-enabled-else.beginCaptures.2
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.definition.parameters.begin.c"$/;"	s	language:JSON	object:patterns.8.beginCaptures.5
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.definition.parameters.end.c"$/;"	s	language:JSON	object:patterns.8.beginCaptures.9
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.section.parens.begin.bracket.round.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.2
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.section.parens.end.bracket.round.c"$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.3
name	textmate/cpp.tmLanguage.json	/^					"name": "punctuation.separator.parameters.c"$/;"	s	language:JSON	object:patterns.8.beginCaptures.8
name	textmate/cpp.tmLanguage.json	/^					"name": "string.quoted.double.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4
name	textmate/cpp.tmLanguage.json	/^					"name": "string.quoted.double.c",$/;"	s	language:JSON	object:repository.strings.patterns.1
name	textmate/cpp.tmLanguage.json	/^					"name": "string.quoted.double.include.c"$/;"	s	language:JSON	object:patterns.9.patterns.1
name	textmate/cpp.tmLanguage.json	/^					"name": "string.quoted.double.raw.cpp"$/;"	s	language:JSON	object:repository.strings.patterns.0
name	textmate/cpp.tmLanguage.json	/^					"name": "string.quoted.other.lt-gt.include.c"$/;"	s	language:JSON	object:patterns.9.patterns.2
name	textmate/cpp.tmLanguage.json	/^					"name": "string.quoted.single.c",$/;"	s	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5
name	textmate/cpp.tmLanguage.json	/^					"name": "string.quoted.single.c",$/;"	s	language:JSON	object:repository.strings.patterns.2
name	textmate/cpp.tmLanguage.json	/^			"name": "meta.preprocessor.include.c",$/;"	s	language:JSON	object:patterns.9
name	textmate/cpp.tmLanguage.json	/^			"name": "meta.preprocessor.macro.c",$/;"	s	language:JSON	object:patterns.8
name	textmate/cpp.tmLanguage.json	/^	"name": "C++",$/;"	s	language:JSON
name	textmate/go.tmLanguage.json	/^							"name": "constant.other.rune.go"$/;"	s	language:JSON	object:repository.runes.patterns.0.patterns.0
name	textmate/go.tmLanguage.json	/^							"name": "invalid.illegal.unknown-rune.go"$/;"	s	language:JSON	object:repository.runes.patterns.0.patterns.1
name	textmate/go.tmLanguage.json	/^					"name": "comment.block.go"$/;"	s	language:JSON	object:repository.comments.patterns.0
name	textmate/go.tmLanguage.json	/^					"name": "comment.line.double-slash.go"$/;"	s	language:JSON	object:repository.comments.patterns.1
name	textmate/go.tmLanguage.json	/^					"name": "constant.character.escape.go"$/;"	s	language:JSON	object:repository.string_escaped_char.patterns.0
name	textmate/go.tmLanguage.json	/^					"name": "constant.other.placeholder.go"$/;"	s	language:JSON	object:repository.string_placeholder.patterns.0
name	textmate/go.tmLanguage.json	/^					"name": "invalid.illegal.numeric.go"$/;"	s	language:JSON	object:repository.keywords.patterns.7
name	textmate/go.tmLanguage.json	/^					"name": "invalid.illegal.receive-channel.go"$/;"	s	language:JSON	object:patterns.3.captures.1
name	textmate/go.tmLanguage.json	/^					"name": "invalid.illegal.send-channel.go"$/;"	s	language:JSON	object:patterns.4.captures.1
name	textmate/go.tmLanguage.json	/^					"name": "invalid.illegal.slice.go"$/;"	s	language:JSON	object:patterns.5.captures.1
name	textmate/go.tmLanguage.json	/^					"name": "invalid.illegal.unknown-escape.go"$/;"	s	language:JSON	object:repository.string_escaped_char.patterns.1
name	textmate/go.tmLanguage.json	/^					"name": "keyword.channel.go"$/;"	s	language:JSON	object:repository.keywords.patterns.1
name	textmate/go.tmLanguage.json	/^					"name": "keyword.const.go"$/;"	s	language:JSON	object:repository.keywords.patterns.2
name	textmate/go.tmLanguage.json	/^					"name": "keyword.control.go"$/;"	s	language:JSON	object:repository.keywords.patterns.0
name	textmate/go.tmLanguage.json	/^					"name": "keyword.function.go"$/;"	s	language:JSON	object:repository.keywords.patterns.3
name	textmate/go.tmLanguage.json	/^					"name": "keyword.function.go"$/;"	s	language:JSON	object:repository.keywords.patterns.8
name	textmate/go.tmLanguage.json	/^					"name": "keyword.import.go"$/;"	s	language:JSON	object:repository.keywords.patterns.11
name	textmate/go.tmLanguage.json	/^					"name": "keyword.interface.go"$/;"	s	language:JSON	object:repository.keywords.patterns.4
name	textmate/go.tmLanguage.json	/^					"name": "keyword.map.go"$/;"	s	language:JSON	object:repository.keywords.patterns.5
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.address.go"$/;"	s	language:JSON	object:repository.operators.patterns.0
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.arithmetic.bitwise.go"$/;"	s	language:JSON	object:repository.operators.patterns.8
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.arithmetic.go"$/;"	s	language:JSON	object:repository.operators.patterns.7
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.assignment.go"$/;"	s	language:JSON	object:repository.operators.patterns.6
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.channel.go"$/;"	s	language:JSON	object:repository.operators.patterns.1
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.comparison.go"$/;"	s	language:JSON	object:repository.operators.patterns.4
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.decrement.go"$/;"	s	language:JSON	object:repository.operators.patterns.2
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.ellipsis.go"$/;"	s	language:JSON	object:repository.operators.patterns.9
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.increment.go"$/;"	s	language:JSON	object:repository.operators.patterns.3
name	textmate/go.tmLanguage.json	/^					"name": "keyword.operator.logical.go"$/;"	s	language:JSON	object:repository.operators.patterns.5
name	textmate/go.tmLanguage.json	/^					"name": "keyword.package.go"$/;"	s	language:JSON	object:repository.keywords.patterns.9
name	textmate/go.tmLanguage.json	/^					"name": "keyword.struct.go"$/;"	s	language:JSON	object:repository.keywords.patterns.6
name	textmate/go.tmLanguage.json	/^					"name": "keyword.type.go"$/;"	s	language:JSON	object:repository.keywords.patterns.10
name	textmate/go.tmLanguage.json	/^					"name": "keyword.var.go"$/;"	s	language:JSON	object:repository.keywords.patterns.12
name	textmate/go.tmLanguage.json	/^					"name": "string.quoted.rune.go",$/;"	s	language:JSON	object:repository.runes.patterns.0
name	textmate/go.tmLanguage.json	/^			"name": "constant.numeric.floating-point.go"$/;"	s	language:JSON	object:patterns.6
name	textmate/go.tmLanguage.json	/^			"name": "constant.numeric.integer.go"$/;"	s	language:JSON	object:patterns.7
name	textmate/go.tmLanguage.json	/^			"name": "constant.numeric.language.go"$/;"	s	language:JSON	object:patterns.8
name	textmate/go.tmLanguage.json	/^			"name": "keyword.other.semi.go"$/;"	s	language:JSON	object:patterns.9
name	textmate/go.tmLanguage.json	/^			"name": "string.quoted.double.go",$/;"	s	language:JSON	object:patterns.1
name	textmate/go.tmLanguage.json	/^			"name": "string.quoted.raw.go",$/;"	s	language:JSON	object:patterns.2
name	textmate/go.tmLanguage.json	/^	"name": "Go",$/;"	s	language:JSON
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.symbol.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.string.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.1.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.1.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.1.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.1.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.angles.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.braces.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.brackets.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.parens.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "punctuation.section.scope.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.1.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.1.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.1.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.1.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.angles.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.braces.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.brackets.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                            "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.parens.patterns.0.captures.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.angles.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.braces.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.brackets.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.repository.parens.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.angles.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.braces.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.brackets.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.repository.parens.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.symbol.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.repository.symbol.patterns.1
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.other.symbol.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.symbol.patterns.1
name	textmate/ruby.tmLanguage.json	/^                                    "name": "constant.other.symbol.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.repository.symbol.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.string.patterns.0
name	textmate/ruby.tmLanguage.json	/^                                    "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.repository.string.patterns.1
name	textmate/ruby.tmLanguage.json	/^                                    "name": "string.other.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.string.patterns.1
name	textmate/ruby.tmLanguage.json	/^                                    "name": "string.other.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.repository.string.patterns.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.character-class.begin.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.3.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.character-class.end.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.3.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.comment.begin.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.4.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.comment.end.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.4.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.comment.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.6.beginCaptures.1
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.constant.begin.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.constant.end.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.5.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.group.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.5.captures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.quantifier.begin.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.2.captures.1
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.quantifier.end.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.2.captures.3
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.21.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.22.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.23.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.24.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.25.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.26.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.27.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.28.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.29.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.30.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.31.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.21.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.22.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.23.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.24.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.25.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.26.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.27.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.28.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.29.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.30.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.31.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.2.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.3.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.4.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.8.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.variable.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.1.captures.1
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.variable.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.2.captures.1
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.definition.variable.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.3.captures.1
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.array.begin.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.array.begin.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.array.begin.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.array.begin.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.array.end.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.array.end.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.1.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.array.end.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.6.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.array.end.ruby"$/;"	s	language:JSON	object:repository.percent_literals.patterns.7.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.embedded.begin.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "punctuation.section.embedded.end.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                            "name": "source.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0.endCaptures.1
name	textmate/ruby.tmLanguage.json	/^                    "name": "comment.line.number-sign.ruby"$/;"	s	language:JSON	object:patterns.18.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "comment.line.number-sign.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.6
name	textmate/ruby.tmLanguage.json	/^                    "name": "comment.line.number-sign.ruby",$/;"	s	language:JSON	object:repository.regex_sub.patterns.4
name	textmate/ruby.tmLanguage.json	/^                    "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:patterns.12.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "constant.other.character-class.set.ruby",$/;"	s	language:JSON	object:repository.regex_sub.patterns.3
name	textmate/ruby.tmLanguage.json	/^                    "name": "constant.other.symbol.percent.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.5
name	textmate/ruby.tmLanguage.json	/^                    "name": "keyword.operator.quantifier.ruby"$/;"	s	language:JSON	object:repository.regex_sub.patterns.2
name	textmate/ruby.tmLanguage.json	/^                    "name": "meta.array.string.interpolated.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.7
name	textmate/ruby.tmLanguage.json	/^                    "name": "meta.array.string.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.6
name	textmate/ruby.tmLanguage.json	/^                    "name": "meta.array.symbol.interpolated.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.1
name	textmate/ruby.tmLanguage.json	/^                    "name": "meta.array.symbol.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "meta.embedded.line.ruby",$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "meta.group.regexp.ruby",$/;"	s	language:JSON	object:repository.regex_sub.patterns.5
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.32.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.definition.string.begin.ruby"$/;"	s	language:JSON	object:patterns.33.beginCaptures.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.32.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.definition.string.end.ruby"$/;"	s	language:JSON	object:patterns.33.endCaptures.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.separator.arguments.ruby"$/;"	s	language:JSON	object:patterns.34.captures.1
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.separator.method.ruby"$/;"	s	language:JSON	object:patterns.41.captures.1
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.separator.method.ruby"$/;"	s	language:JSON	object:patterns.48.captures.1
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.separator.namespace.ruby"$/;"	s	language:JSON	object:patterns.47.captures.1
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.separator.variable.ruby"$/;"	s	language:JSON	object:patterns.34.patterns.2
name	textmate/ruby.tmLanguage.json	/^                    "name": "punctuation.whitespace.comment.leading.ruby"$/;"	s	language:JSON	object:patterns.18.beginCaptures.1
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.interpolated.percent.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.8
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.quoted.other.interpolated.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.3
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.quoted.other.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.2
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.regexp.classic.ruby"$/;"	s	language:JSON	object:patterns.16.captures.1
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.regexp.percent.ruby",$/;"	s	language:JSON	object:repository.percent_literals.patterns.4
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.21.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.22.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.23.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.24.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.25.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.26.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.27.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.28.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.29.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.30.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.31.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "string.unquoted.program-block.ruby"$/;"	s	language:JSON	object:patterns.20.captures.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "text.html.embedded.ruby",$/;"	s	language:JSON	object:patterns.20.patterns.0
name	textmate/ruby.tmLanguage.json	/^                    "name": "variable.other.block.ruby"$/;"	s	language:JSON	object:patterns.34.patterns.1
name	textmate/ruby.tmLanguage.json	/^                    "name": "variable.other.readwrite.class.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.2
name	textmate/ruby.tmLanguage.json	/^                    "name": "variable.other.readwrite.global.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.3
name	textmate/ruby.tmLanguage.json	/^                    "name": "variable.other.readwrite.instance.ruby"$/;"	s	language:JSON	object:repository.interpolated_ruby.patterns.1
name	textmate/ruby.tmLanguage.json	/^            "name": "comment.block.documentation.ruby"$/;"	s	language:JSON	object:patterns.17
name	textmate/ruby.tmLanguage.json	/^            "name": "constant.character.escape.ruby"$/;"	s	language:JSON	object:repository.escaped_char
name	textmate/ruby.tmLanguage.json	/^            "name": "constant.numeric.binary.ruby"$/;"	s	language:JSON	object:patterns.9
name	textmate/ruby.tmLanguage.json	/^            "name": "constant.numeric.float.ruby"$/;"	s	language:JSON	object:patterns.6
name	textmate/ruby.tmLanguage.json	/^            "name": "constant.numeric.hex.ruby"$/;"	s	language:JSON	object:patterns.8
name	textmate/ruby.tmLanguage.json	/^            "name": "constant.numeric.integer.ruby"$/;"	s	language:JSON	object:patterns.7
name	textmate/ruby.tmLanguage.json	/^            "name": "constant.numeric.language.ruby"$/;"	s	language:JSON	object:patterns.5
name	textmate/ruby.tmLanguage.json	/^            "name": "constant.numeric.octal.ruby"$/;"	s	language:JSON	object:patterns.10
name	textmate/ruby.tmLanguage.json	/^            "name": "constant.numeric.ruby"$/;"	s	language:JSON	object:patterns.19
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.control.ruby"$/;"	s	language:JSON	object:patterns.1
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.control.ruby"$/;"	s	language:JSON	object:patterns.2
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.control.special-method.ruby"$/;"	s	language:JSON	object:patterns.3
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.operator.arithmetic.ruby"$/;"	s	language:JSON	object:patterns.42
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.operator.assignment.augmented.ruby"$/;"	s	language:JSON	object:patterns.11
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.operator.assignment.augmented.ruby"$/;"	s	language:JSON	object:patterns.37
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.operator.assignment.ruby"$/;"	s	language:JSON	object:patterns.43
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.operator.comparison.ruby"$/;"	s	language:JSON	object:patterns.38
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.operator.logical.ruby"$/;"	s	language:JSON	object:patterns.39
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.operator.logical.ruby"$/;"	s	language:JSON	object:patterns.40
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.operator.other.ruby"$/;"	s	language:JSON	object:patterns.44
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.other.ruby"$/;"	s	language:JSON	object:patterns.0
name	textmate/ruby.tmLanguage.json	/^            "name": "keyword.other.special-method.ruby"$/;"	s	language:JSON	object:patterns.4
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.c",$/;"	s	language:JSON	object:patterns.26
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.c++",$/;"	s	language:JSON	object:patterns.25
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.css",$/;"	s	language:JSON	object:patterns.24
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.html",$/;"	s	language:JSON	object:patterns.21
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.js",$/;"	s	language:JSON	object:patterns.27
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.js.jquery",$/;"	s	language:JSON	object:patterns.28
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.lua",$/;"	s	language:JSON	object:patterns.30
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.ruby",$/;"	s	language:JSON	object:patterns.31
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.shell",$/;"	s	language:JSON	object:patterns.29
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.sql",$/;"	s	language:JSON	object:patterns.23
name	textmate/ruby.tmLanguage.json	/^            "name": "meta.embedded.block.xml",$/;"	s	language:JSON	object:patterns.22
name	textmate/ruby.tmLanguage.json	/^            "name": "punctuation.section.array.begin.ruby"$/;"	s	language:JSON	object:patterns.52
name	textmate/ruby.tmLanguage.json	/^            "name": "punctuation.section.array.end.ruby"$/;"	s	language:JSON	object:patterns.53
name	textmate/ruby.tmLanguage.json	/^            "name": "punctuation.section.function.ruby"$/;"	s	language:JSON	object:patterns.54
name	textmate/ruby.tmLanguage.json	/^            "name": "punctuation.section.scope.begin.ruby"$/;"	s	language:JSON	object:patterns.50
name	textmate/ruby.tmLanguage.json	/^            "name": "punctuation.section.scope.end.ruby"$/;"	s	language:JSON	object:patterns.51
name	textmate/ruby.tmLanguage.json	/^            "name": "punctuation.separator.key-value"$/;"	s	language:JSON	object:patterns.35
name	textmate/ruby.tmLanguage.json	/^            "name": "punctuation.separator.object.ruby"$/;"	s	language:JSON	object:patterns.46
name	textmate/ruby.tmLanguage.json	/^            "name": "punctuation.separator.other.ruby"$/;"	s	language:JSON	object:patterns.49
name	textmate/ruby.tmLanguage.json	/^            "name": "punctuation.separator.statement.ruby"$/;"	s	language:JSON	object:patterns.45
name	textmate/ruby.tmLanguage.json	/^            "name": "string.interpolated.ruby",$/;"	s	language:JSON	object:patterns.14
name	textmate/ruby.tmLanguage.json	/^            "name": "string.quoted.double.ruby",$/;"	s	language:JSON	object:patterns.13
name	textmate/ruby.tmLanguage.json	/^            "name": "string.quoted.single.ruby",$/;"	s	language:JSON	object:patterns.12
name	textmate/ruby.tmLanguage.json	/^            "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.32
name	textmate/ruby.tmLanguage.json	/^            "name": "string.unquoted.heredoc.ruby",$/;"	s	language:JSON	object:patterns.33
name	textmate/ruby.tmLanguage.json	/^            "name": "support.function.kernel.lambda.ruby"$/;"	s	language:JSON	object:patterns.36
name	textmate/ruby.tmLanguage.json	/^    "name": "Ruby",$/;"	s	language:JSON
name	textmate/rust.tmLanguage.json	/^							"name": "punctuation.definition.tag.attribute.begin.rust"$/;"	s	language:JSON	object:repository.attribute.patterns.0.beginCaptures.0
name	textmate/rust.tmLanguage.json	/^							"name": "punctuation.definition.tag.attribute.end.rust"$/;"	s	language:JSON	object:repository.attribute.patterns.0.endCaptures.0
name	textmate/rust.tmLanguage.json	/^							"name": "punctuation.definition.tag.attribute.metaItem.begin.rust"$/;"	s	language:JSON	object:repository.metaItem.patterns.0.beginCaptures.0
name	textmate/rust.tmLanguage.json	/^							"name": "punctuation.definition.tag.attribute.metaItem.end.rust"$/;"	s	language:JSON	object:repository.metaItem.patterns.0.endCaptures.0
name	textmate/rust.tmLanguage.json	/^					"name": "comment.block.documentation.rust",$/;"	s	language:JSON	object:repository.block_doc_comment.patterns.0
name	textmate/rust.tmLanguage.json	/^					"name": "comment.block.rust",$/;"	s	language:JSON	object:repository.block_comment.patterns.0
name	textmate/rust.tmLanguage.json	/^					"name": "comment.line.documentation.rust",$/;"	s	language:JSON	object:repository.comments.patterns.2
name	textmate/rust.tmLanguage.json	/^					"name": "comment.line.double-slash.rust",$/;"	s	language:JSON	object:repository.comments.patterns.3
name	textmate/rust.tmLanguage.json	/^					"name": "constant.character.escape.rust",$/;"	s	language:JSON	object:repository.escaped_character.patterns.0
name	textmate/rust.tmLanguage.json	/^					"name": "constant.numeric.boolean.rust"$/;"	s	language:JSON	object:repository.literals.patterns.0
name	textmate/rust.tmLanguage.json	/^					"name": "constant.numeric.float.rust",$/;"	s	language:JSON	object:repository.literals.patterns.1
name	textmate/rust.tmLanguage.json	/^					"name": "constant.numeric.float.rust",$/;"	s	language:JSON	object:repository.literals.patterns.2
name	textmate/rust.tmLanguage.json	/^					"name": "constant.numeric.float.rust",$/;"	s	language:JSON	object:repository.literals.patterns.3
name	textmate/rust.tmLanguage.json	/^					"name": "constant.numeric.integer.binary.rust",$/;"	s	language:JSON	object:repository.literals.patterns.7
name	textmate/rust.tmLanguage.json	/^					"name": "constant.numeric.integer.decimal.rust",$/;"	s	language:JSON	object:repository.literals.patterns.4
name	textmate/rust.tmLanguage.json	/^					"name": "constant.numeric.integer.hexadecimal.rust",$/;"	s	language:JSON	object:repository.literals.patterns.5
name	textmate/rust.tmLanguage.json	/^					"name": "constant.numeric.integer.octal.rust",$/;"	s	language:JSON	object:repository.literals.patterns.6
name	textmate/rust.tmLanguage.json	/^					"name": "keyword.control.rust"$/;"	s	language:JSON	object:repository.keywords.patterns.1
name	textmate/rust.tmLanguage.json	/^					"name": "keyword.operator.arithmetic.rust",$/;"	s	language:JSON	object:repository.keywords.patterns.5
name	textmate/rust.tmLanguage.json	/^					"name": "keyword.operator.assignment.rust",$/;"	s	language:JSON	object:repository.keywords.patterns.4
name	textmate/rust.tmLanguage.json	/^					"name": "keyword.operator.comparison.rust",$/;"	s	language:JSON	object:repository.keywords.patterns.3
name	textmate/rust.tmLanguage.json	/^					"name": "keyword.operator.comparison.rust",$/;"	s	language:JSON	object:repository.keywords.patterns.7
name	textmate/rust.tmLanguage.json	/^					"name": "keyword.operator.misc.rust",$/;"	s	language:JSON	object:repository.keywords.patterns.2
name	textmate/rust.tmLanguage.json	/^					"name": "keyword.operator.sigil.rust",$/;"	s	language:JSON	object:repository.keywords.patterns.6
name	textmate/rust.tmLanguage.json	/^					"name": "keyword.other.rust"$/;"	s	language:JSON	object:repository.keywords.patterns.0
name	textmate/rust.tmLanguage.json	/^					"name": "keyword.other.semi.go"$/;"	s	language:JSON	object:repository.keywords.patterns.8
name	textmate/rust.tmLanguage.json	/^					"name": "meta.attribute.rust",$/;"	s	language:JSON	object:repository.attribute.patterns.0
name	textmate/rust.tmLanguage.json	/^					"name": "meta.block.rust",$/;"	s	language:JSON	object:repository.code.patterns.0
name	textmate/rust.tmLanguage.json	/^					"name": "punctuation.definition.tag.attribute.metaItem.set.rust"$/;"	s	language:JSON	object:repository.metaItem.patterns.1
name	textmate/rust.tmLanguage.json	/^					"name": "string.quoted.double.raw.rust",$/;"	s	language:JSON	object:repository.literals.patterns.10
name	textmate/rust.tmLanguage.json	/^					"name": "string.quoted.double.rust",$/;"	s	language:JSON	object:repository.literals.patterns.9
name	textmate/rust.tmLanguage.json	/^					"name": "string.quoted.single.rust",$/;"	s	language:JSON	object:repository.literals.patterns.8
name	textmate/rust.tmLanguage.json	/^			"name": "keyword.other.top.rust"$/;"	s	language:JSON	object:patterns.0
name	textmate/rust.tmLanguage.json	/^	"name": "Rust",$/;"	s	language:JSON
name	textmate/typescript.tmLanguage.json	/^									"name": "constant.character.control.regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures.2
name	textmate/typescript.tmLanguage.json	/^									"name": "constant.character.control.regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures.5
name	textmate/typescript.tmLanguage.json	/^									"name": "constant.character.escape.backslash.regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures.3
name	textmate/typescript.tmLanguage.json	/^									"name": "constant.character.escape.backslash.regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures.6
name	textmate/typescript.tmLanguage.json	/^									"name": "constant.character.numeric.regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures.1
name	textmate/typescript.tmLanguage.json	/^									"name": "constant.character.numeric.regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.6.patterns.0.captures.4
name	textmate/typescript.tmLanguage.json	/^							"name": "comment.line.double-slash.ts",$/;"	s	language:JSON	object:repository.comment.patterns.2.patterns.0
name	textmate/typescript.tmLanguage.json	/^							"name": "constant.numeric.decimal.ts"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.3.captures.0
name	textmate/typescript.tmLanguage.json	/^							"name": "constant.other.character-class.range.regexp",$/;"	s	language:JSON	object:repository.regexp.patterns.6.patterns.0
name	textmate/typescript.tmLanguage.json	/^							"name": "entity.name.type.instance.jsdoc"$/;"	s	language:JSON	object:repository.docblock.patterns.2.captures.1
name	textmate/typescript.tmLanguage.json	/^							"name": "keyword.operator.negation.regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.6.beginCaptures.2
name	textmate/typescript.tmLanguage.json	/^							"name": "keyword.other.ts"$/;"	s	language:JSON	object:repository.keyword.patterns.0.captures.1
name	textmate/typescript.tmLanguage.json	/^							"name": "keyword.other.ts"$/;"	s	language:JSON	object:repository.keyword.patterns.1.captures.1
name	textmate/typescript.tmLanguage.json	/^							"name": "keyword.other.ts"$/;"	s	language:JSON	object:repository.regex.patterns.0.endCaptures.2
name	textmate/typescript.tmLanguage.json	/^							"name": "keyword.other.ts"$/;"	s	language:JSON	object:repository.regex.patterns.1.endCaptures.2
name	textmate/typescript.tmLanguage.json	/^							"name": "meta.assertion.look-ahead.regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.4.beginCaptures.3
name	textmate/typescript.tmLanguage.json	/^							"name": "meta.assertion.negative-look-ahead.regexp"$/;"	s	language:JSON	object:repository.regexp.patterns.4.beginCaptures.4
name	textmate/typescript.tmLanguage.json	/^							"name": "meta.delimiter.decimal.period.ts"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.3.captures.1
name	textmate/typescript.tmLanguage.json	/^							"name": "meta.delimiter.decimal.period.ts"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.3.captures.2
name	textmate/typescript.tmLanguage.json	/^							"name": "meta.delimiter.decimal.period.ts"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.3.captures.3
name	textmate/typescript.tmLanguage.json	/^							"name": "meta.delimiter.decimal.period.ts"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.3.captures.4
name	textmate/typescript.tmLanguage.json	/^							"name": "meta.delimiter.decimal.period.ts"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.3.captures.5
name	textmate/typescript.tmLanguage.json	/^							"name": "meta.delimiter.decimal.period.ts"$/;"	s	language:JSON	object:repository.numeric-literal.patterns.3.captures.6
name	textmate/typescript.tmLanguage.json	/^							"name": "other.description.jsdoc"$/;"	s	language:JSON	object:repository.docblock.patterns.1.captures.3
name	textmate/typescript.tmLanguage.json	/^							"name": "other.description.jsdoc"$/;"	s	language:JSON	object:repository.docblock.patterns.2.captures.2
name	textmate/typescript.tmLanguage.json	/^							"name": "other.meta.jsdoc"$/;"	s	language:JSON	object:repository.docblock.patterns.1.captures.0
name	textmate/typescript.tmLanguage.json	/^							"name": "other.meta.jsdoc"$/;"	s	language:JSON	object:repository.docblock.patterns.2.captures.0
name	textmate/typescript.tmLanguage.json	/^							"name": "variable.other.jsdoc"$/;"	s	language:JSON	object:repository.docblock.patterns.1.captures.2
name	textmate/typescript.tmLanguage.json	/^					"name": "comment.block.documentation.ts",$/;"	s	language:JSON	object:repository.comment.patterns.0
name	textmate/typescript.tmLanguage.json	/^					"name": "comment.block.ts",$/;"	s	language:JSON	object:repository.comment.patterns.1
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.character.control.regexp",$/;"	s	language:JSON	object:repository.regex-character-class.patterns.2
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.character.escape.backslash.regexp",$/;"	s	language:JSON	object:repository.regex-character-class.patterns.3
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.character.numeric.regexp",$/;"	s	language:JSON	object:repository.regex-character-class.patterns.1
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.language.infinity.ts",$/;"	s	language:JSON	object:repository.numericConstant-literal.patterns.1
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.language.nan.ts",$/;"	s	language:JSON	object:repository.numericConstant-literal.patterns.0
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.numeric.binary.ts",$/;"	s	language:JSON	object:repository.numeric-literal.patterns.1
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.numeric.boolean.ts"$/;"	s	language:JSON	object:repository.literal.patterns.0
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.numeric.hex.ts",$/;"	s	language:JSON	object:repository.numeric-literal.patterns.0
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.numeric.null.ts"$/;"	s	language:JSON	object:repository.literal.patterns.1
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.numeric.octal.ts",$/;"	s	language:JSON	object:repository.numeric-literal.patterns.2
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.other.character-class.regexp",$/;"	s	language:JSON	object:repository.regex-character-class.patterns.0
name	textmate/typescript.tmLanguage.json	/^					"name": "constant.other.character-class.set.regexp",$/;"	s	language:JSON	object:repository.regexp.patterns.6
name	textmate/typescript.tmLanguage.json	/^					"name": "entity.name.function.tagged-template.ts"$/;"	s	language:JSON	object:repository.template.beginCaptures.1
name	textmate/typescript.tmLanguage.json	/^					"name": "invalid.illegal.newline.ts"$/;"	s	language:JSON	object:repository.qstring-double.endCaptures.2
name	textmate/typescript.tmLanguage.json	/^					"name": "invalid.illegal.newline.ts"$/;"	s	language:JSON	object:repository.qstring-single.endCaptures.2
name	textmate/typescript.tmLanguage.json	/^					"name": "keyword.control.anchor.regexp",$/;"	s	language:JSON	object:repository.regexp.patterns.0
name	textmate/typescript.tmLanguage.json	/^					"name": "keyword.control.ts"$/;"	s	language:JSON	object:repository.keyword.patterns.3
name	textmate/typescript.tmLanguage.json	/^					"name": "keyword.operator.or.regexp",$/;"	s	language:JSON	object:repository.regexp.patterns.3
name	textmate/typescript.tmLanguage.json	/^					"name": "keyword.operator.quantifier.regexp",$/;"	s	language:JSON	object:repository.regexp.patterns.2
name	textmate/typescript.tmLanguage.json	/^					"name": "keyword.other.back-reference.regexp",$/;"	s	language:JSON	object:repository.regexp.patterns.1
name	textmate/typescript.tmLanguage.json	/^					"name": "keyword.other.semi.ts"$/;"	s	language:JSON	object:repository.keyword.patterns.4
name	textmate/typescript.tmLanguage.json	/^					"name": "keyword.other.ts"$/;"	s	language:JSON	object:repository.keyword.patterns.2
name	textmate/typescript.tmLanguage.json	/^					"name": "meta.group.assertion.regexp",$/;"	s	language:JSON	object:repository.regexp.patterns.4
name	textmate/typescript.tmLanguage.json	/^					"name": "meta.group.regexp",$/;"	s	language:JSON	object:repository.regexp.patterns.5
name	textmate/typescript.tmLanguage.json	/^					"name": "storage.type.class.jsdoc",$/;"	s	language:JSON	object:repository.docblock.patterns.0
name	textmate/typescript.tmLanguage.json	/^					"name": "string.regex.ts",$/;"	s	language:JSON	object:repository.regex.patterns.0
name	textmate/typescript.tmLanguage.json	/^					"name": "string.regex.ts",$/;"	s	language:JSON	object:repository.regex.patterns.1
name	textmate/typescript.tmLanguage.json	/^			"name": "constant.character.escape.ts",$/;"	s	language:JSON	object:repository.string-character-escape
name	textmate/typescript.tmLanguage.json	/^			"name": "literal.ts",$/;"	s	language:JSON	object:repository.literal
name	textmate/typescript.tmLanguage.json	/^			"name": "meta.decorator.ts",$/;"	s	language:JSON	object:repository.decorator
name	textmate/typescript.tmLanguage.json	/^			"name": "meta.template.expression.ts",$/;"	s	language:JSON	object:repository.template-substitution-element
name	textmate/typescript.tmLanguage.json	/^			"name": "string.quoted.double.ts",$/;"	s	language:JSON	object:repository.qstring-double
name	textmate/typescript.tmLanguage.json	/^			"name": "string.quoted.single.ts",$/;"	s	language:JSON	object:repository.qstring-single
name	textmate/typescript.tmLanguage.json	/^			"name": "string.template.ts",$/;"	s	language:JSON	object:repository.template
name	textmate/typescript.tmLanguage.json	/^			"name": "string.ts",$/;"	s	language:JSON	object:repository.string
name	textmate/typescript.tmLanguage.json	/^	"name": "TypeScript",$/;"	s	language:JSON
needaddgcproc	examples/go/proc.go	/^func needaddgcproc() bool {$/;"	f	language:Go
needm	examples/go/proc.go	/^func needm(x byte) {$/;"	f	language:Go
nest_curly_and_self	textmate/ruby.tmLanguage.json	/^                        "nest_curly_and_self": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.0.repository
new	examples/rust/ast.rs	/^    fn new(idx: usize) -> Self {$/;"	F	language:Rust	implementation:NodeId
new	examples/rust/ast.rs	/^    pub fn new(generic_params: Vec<GenericParam>, path: Path, span: Span) -> Self {$/;"	F	language:Rust	implementation:PolyTraitRef
new	examples/rust/ast.rs	/^    pub fn new(x: usize) -> NodeId {$/;"	F	language:Rust	implementation:NodeId
newextram	examples/go/proc.go	/^func newextram() {$/;"	f	language:Go
newm	examples/go/proc.go	/^func newm(fn func(), _p_ *p) {$/;"	f	language:Go
newproc	examples/go/proc.go	/^func newproc(siz int32, fn *funcval) {$/;"	f	language:Go
newproc1	examples/go/proc.go	/^func newproc1(fn *funcval, argp *uint8, narg int32, nret int32, callerpc uintptr) *g {$/;"	f	language:Go
node	examples/rust/ast.rs	/^    pub node: ExprKind,$/;"	m	language:Rust	struct:Expr
node	examples/rust/ast.rs	/^    pub node: ForeignItemKind,$/;"	m	language:Rust	struct:ForeignItem
node	examples/rust/ast.rs	/^    pub node: ImplItemKind,$/;"	m	language:Rust	struct:ImplItem
node	examples/rust/ast.rs	/^    pub node: ItemKind,$/;"	m	language:Rust	struct:Item
node	examples/rust/ast.rs	/^    pub node: MetaItemKind,$/;"	m	language:Rust	struct:MetaItem
node	examples/rust/ast.rs	/^    pub node: PatKind,$/;"	m	language:Rust	struct:Pat
node	examples/rust/ast.rs	/^    pub node: StmtKind,$/;"	m	language:Rust	struct:Stmt
node	examples/rust/ast.rs	/^    pub node: TraitItemKind,$/;"	m	language:Rust	struct:TraitItem
node	examples/rust/ast.rs	/^    pub node: TyKind,$/;"	m	language:Rust	struct:Ty
node_position_cache	examples/cpp/marker-index.h	/^  mutable std::unordered_map<const Node*, Point> node_position_cache;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::unordered_map<const Node *,Point>
nonEmptyInterface	examples/go/value.go	/^type nonEmptyInterface struct {$/;"	s	language:Go
notletterTest	examples/go/letter_test.go	/^var notletterTest = []rune{$/;"	v	language:Go
notupperTest	examples/go/letter_test.go	/^var notupperTest = []rune{$/;"	v	language:Go
numbers	textmate/cpp.tmLanguage.json	/^		"numbers": {$/;"	o	language:JSON	object:repository
numeric-literal	textmate/typescript.tmLanguage.json	/^		"numeric-literal": {$/;"	o	language:JSON	object:repository
numericConstant-literal	textmate/typescript.tmLanguage.json	/^		"numericConstant-literal": {$/;"	o	language:JSON	object:repository
one	examples/javascript/expressions.js	/^  static one(a) { return a; };$/;"	m	language:JavaScript	class:Foo
operator ()	examples/cpp/rule.cc	/^size_t hash<Blank>::operator()(const Blank &blank) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<CharacterSet>::operator()(const CharacterSet &character_set) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<Choice>::operator()(const Choice &choice) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<Metadata>::operator()(const Metadata &metadata) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<NamedSymbol>::operator()(const NamedSymbol &symbol) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<Pattern>::operator()(const Pattern &symbol) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<Repeat>::operator()(const Repeat &repeat) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<Rule>::operator()(const Rule &rule) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<Seq>::operator()(const Seq &seq) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<String>::operator()(const String &symbol) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator ()	examples/cpp/rule.cc	/^size_t hash<Symbol>::operator()(const Symbol &symbol) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
operator =	examples/cpp/rule.cc	/^Rule &Rule::operator=(Rule &&other) noexcept {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule &
operator =	examples/cpp/rule.cc	/^Rule &Rule::operator=(const Rule &other) {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule &
operator ==	examples/cpp/rule.cc	/^bool Rule::operator==(const Rule &other) const {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:bool
operators	textmate/go.tmLanguage.json	/^		"operators": {$/;"	o	language:JSON	object:repository
os_beforeExit	examples/go/proc.go	/^func os_beforeExit() {$/;"	f	language:Go
out	examples/go/letter_test.go	/^	in, out rune$/;"	m	language:Go	struct:caseT
outDir	tsconfig.json	/^		"outDir": "out",$/;"	s	language:JSON	object:compilerOptions
output	examples/rust/ast.rs	/^    pub output: FunctionRetTy,$/;"	m	language:Rust	struct:FnDecl
output	examples/rust/ast.rs	/^    pub output: Option<P<Ty>>,$/;"	m	language:Rust	struct:ParenthesizedParameterData
outputs	examples/rust/ast.rs	/^    pub outputs: Vec<InlineAsmOutput>,$/;"	m	language:Rust	struct:InlineAsm
overflowFloat32	examples/go/value.go	/^func overflowFloat32(x float64) bool {$/;"	f	language:Go
overlap	examples/cpp/marker-index.h	/^    flat_set<MarkerId> overlap;$/;"	m	language:C++	struct:MarkerIndex::SpliceResult	typeref:typename:flat_set<MarkerId>
p	examples/go/type_switch.go	/^package p$/;"	p	language:Go
p.f	examples/go/type_switch.go	/^func f(a interface{}) {$/;"	f	language:Go
packEface	examples/go/value.go	/^func packEface(v Value) interface{} {$/;"	f	language:Go
parameters	examples/rust/ast.rs	/^    pub parameters: Option<P<PathParameters>>,$/;"	m	language:Rust	struct:PathSegment
params	examples/rust/ast.rs	/^    pub params: Vec<GenericParam>,$/;"	m	language:Rust	struct:Generics
parens	textmate/ruby.tmLanguage.json	/^                        "parens": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository
parens	textmate/ruby.tmLanguage.json	/^                        "parens": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository
parens	textmate/ruby.tmLanguage.json	/^                        "parens": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.2.repository
parens	textmate/ruby.tmLanguage.json	/^                        "parens": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.3.repository
parens	textmate/ruby.tmLanguage.json	/^                        "parens": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.4.repository
parens	textmate/ruby.tmLanguage.json	/^                        "parens": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.5.repository
parens	textmate/ruby.tmLanguage.json	/^                        "parens": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository
parens	textmate/ruby.tmLanguage.json	/^                        "parens": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository
parens	textmate/ruby.tmLanguage.json	/^                        "parens": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.8.repository
parent	examples/cpp/marker-index.h	/^    Node *parent;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:Node *
park_m	examples/go/proc.go	/^func park_m(gp *g) {$/;"	f	language:Go
parkunlock_c	examples/go/proc.go	/^func parkunlock_c(gp *g, lock unsafe.Pointer) bool {$/;"	f	language:Go
parsers	Makefile	/^parsers: $(addprefix parsers\/tree-sitter-,$(addsuffix .wasm,$(LANGUAGES)))$/;"	t	language:Make
parsers/%.wasm	Makefile	/^parsers\/%.wasm: node_modules\/%\/package.json$/;"	t	language:Make
parsers/tree-sitter-c-sharp.wasm	Makefile	/^parsers\/tree-sitter-c-sharp.wasm: node_modules\/tree-sitter-c-sharp\/package.json$/;"	t	language:Make
parsers/tree-sitter-elm.wasm	Makefile	/^parsers\/tree-sitter-elm.wasm: node_modules\/@elm-tooling\/tree-sitter-elm\/package.json$/;"	t	language:Make
parsers/tree-sitter-markdown.wasm	Makefile	/^parsers\/tree-sitter-markdown.wasm: node_modules\/tree-sitter-markdown\/tree-sitter-markdown\/gr/;"	t	language:Make
parsers/tree-sitter-tsx.wasm	Makefile	/^parsers\/tree-sitter-tsx.wasm: node_modules\/tree-sitter-typescript\/tsx\/package.json$/;"	t	language:Make
parsers/tree-sitter-typescript.wasm	Makefile	/^parsers\/tree-sitter-typescript.wasm: node_modules\/tree-sitter-typescript\/typescript\/package./;"	t	language:Make
pat	examples/rust/ast.rs	/^    pub pat: P<Pat>,$/;"	m	language:Rust	struct:Arg
pat	examples/rust/ast.rs	/^    pub pat: P<Pat>,$/;"	m	language:Rust	struct:FieldPat
pat	examples/rust/ast.rs	/^    pub pat: P<Pat>,$/;"	m	language:Rust	struct:Local
path	examples/rust/ast.rs	/^    pub path: Path,$/;"	m	language:Rust	struct:Attribute
path	examples/rust/ast.rs	/^    pub path: Path,$/;"	m	language:Rust	struct:Mac_
path	examples/rust/ast.rs	/^    pub path: Path,$/;"	m	language:Rust	struct:TraitRef
pats	examples/rust/ast.rs	/^    pub pats: Vec<P<Pat>>,$/;"	m	language:Rust	struct:Arm
patterns	textmate/cpp.tmLanguage.json	/^									"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^									"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.comments.patterns.4.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0.patterns.4
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0.patterns.4
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.5
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0.patterns.6
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.5
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0.patterns.6
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.2
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.3
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0.patterns.4
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2.patterns.1
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2.patterns.1
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.2
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.3
patterns	textmate/cpp.tmLanguage.json	/^							"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0.patterns.4
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.comments.patterns.4
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional-block.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.5
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional-line.patterns.9
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-define-line-blocks.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.1
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.4
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-define-line-contents.patterns.5
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.4
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-define-line-functions.patterns.5
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled-block.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled-elif.patterns.2
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-block.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif-block.patterns.2
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif.patterns.2
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled.patterns.0
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.strings.patterns.1
patterns	textmate/cpp.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.strings.patterns.2
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:patterns.8
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:patterns.9
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.comments
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.constants
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.keywords
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.line_continuation_character
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.numbers
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional-block
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-conditional-line
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-define-line-blocks
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-define-line-contents
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-define-line-functions
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled-block
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-disabled-elif
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-block
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-elif-block
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-else
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.preprocessor-rule-enabled-else-block
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.string_escaped_char
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.string_placeholder
patterns	textmate/cpp.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.strings
patterns	textmate/cpp.tmLanguage.json	/^	"patterns": [$/;"	a	language:JSON
patterns	textmate/go.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.runes.patterns.0
patterns	textmate/go.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:patterns.1
patterns	textmate/go.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:patterns.2
patterns	textmate/go.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.comments
patterns	textmate/go.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.keywords
patterns	textmate/go.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.operators
patterns	textmate/go.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.runes
patterns	textmate/go.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.string_escaped_char
patterns	textmate/go.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.string_placeholder
patterns	textmate/go.tmLanguage.json	/^	"patterns": [$/;"	a	language:JSON
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.repository.angles.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.repository.braces.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.repository.parens.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.angles.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.braces.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.brackets.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.parens.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.symbol.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.repository.angles.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.repository.braces.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.repository.brackets.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.repository.parens.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.repository.angles.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.repository.braces.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.repository.brackets.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.repository.parens.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.repository.angles.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.repository.braces.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.repository.brackets.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.repository.parens.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.repository.angles.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.repository.braces.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.repository.brackets.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.repository.parens.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.repository.angles.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.repository.braces.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.repository.parens.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.angles.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.braces.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.brackets.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.parens.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.string.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.repository.angles.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.repository.braces.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.repository.brackets.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.repository.parens.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.interpolated_ruby.patterns.0.repository.nest_curly_and_self
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.repository.angles
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.repository.braces
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.repository.brackets
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.repository.parens
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0.repository.symbol
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.angles
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.braces
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.brackets
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.parens
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1.repository.symbol
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.repository.angles
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.repository.braces
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.repository.brackets
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2.repository.parens
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.repository.angles
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.repository.braces
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.repository.brackets
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3.repository.parens
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.repository.angles
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.repository.braces
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.repository.brackets
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4.repository.parens
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.repository.angles
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.repository.braces
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.repository.brackets
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5.repository.parens
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.repository.angles
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.repository.braces
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.repository.brackets
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.repository.parens
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6.repository.string
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.angles
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.braces
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.brackets
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.parens
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7.repository.string
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.repository.angles
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.repository.braces
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.repository.brackets
patterns	textmate/ruby.tmLanguage.json	/^                            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8.repository.parens
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.20.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.21.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.22.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.23.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.24.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.25.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.26.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.27.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.28.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.29.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.30.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:patterns.31.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.interpolated_ruby.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.0
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.1
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.2
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.4
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.5
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.6
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.7
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.percent_literals.patterns.8
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.regex_sub.patterns.3
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.regex_sub.patterns.4
patterns	textmate/ruby.tmLanguage.json	/^                    "patterns": [$/;"	a	language:JSON	object:repository.regex_sub.patterns.5
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.12
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.13
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.14
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.16
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.18
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.20
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.21
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.22
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.23
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.24
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.25
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.26
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.27
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.28
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.29
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.30
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.31
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.32
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.33
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:patterns.34
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:repository.heredoc
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:repository.interpolated_ruby
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:repository.percent_literals
patterns	textmate/ruby.tmLanguage.json	/^            "patterns": [$/;"	a	language:JSON	object:repository.regex_sub
patterns	textmate/ruby.tmLanguage.json	/^    "patterns": [$/;"	a	language:JSON
patterns	textmate/rust.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.attribute.patterns.0
patterns	textmate/rust.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.block_comment.patterns.0
patterns	textmate/rust.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.block_doc_comment.patterns.0
patterns	textmate/rust.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.code.patterns.0
patterns	textmate/rust.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.literals.patterns.9
patterns	textmate/rust.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.metaItem.patterns.0
patterns	textmate/rust.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.attribute
patterns	textmate/rust.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.block_comment
patterns	textmate/rust.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.block_doc_comment
patterns	textmate/rust.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.code
patterns	textmate/rust.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.comments
patterns	textmate/rust.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.escaped_character
patterns	textmate/rust.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.keywords
patterns	textmate/rust.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.literals
patterns	textmate/rust.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.metaItem
patterns	textmate/rust.tmLanguage.json	/^	"patterns": [$/;"	a	language:JSON
patterns	textmate/typescript.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.comment.patterns.0
patterns	textmate/typescript.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.comment.patterns.2
patterns	textmate/typescript.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.regex.patterns.0
patterns	textmate/typescript.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.regex.patterns.1
patterns	textmate/typescript.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.regexp.patterns.4
patterns	textmate/typescript.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.regexp.patterns.5
patterns	textmate/typescript.tmLanguage.json	/^					"patterns": [$/;"	a	language:JSON	object:repository.regexp.patterns.6
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.comment
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.decorator
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.docblock
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.expression
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.keyword
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.literal
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.numeric-literal
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.numericConstant-literal
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.qstring-double
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.qstring-single
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.regex
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.regex-character-class
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.regexp
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.string
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.template
patterns	textmate/typescript.tmLanguage.json	/^			"patterns": [$/;"	a	language:JSON	object:repository.template-substitution-element
patterns	textmate/typescript.tmLanguage.json	/^	"patterns": [$/;"	a	language:JSON
pdesc	examples/go/proc.go	/^var pdesc [_MaxGomaxprocs]struct {$/;"	v	language:Go
people	examples/go/small.go	/^var people = []Person{$/;"	v	language:Go
percent_literals	textmate/ruby.tmLanguage.json	/^        "percent_literals": {$/;"	o	language:JSON	object:repository
pidleget	examples/go/proc.go	/^func pidleget() *p {$/;"	f	language:Go
pidleput	examples/go/proc.go	/^func pidleput(_p_ *p) {$/;"	f	language:Go
placeholder_from_mark	examples/rust/ast.rs	/^    pub fn placeholder_from_mark(mark: Mark) -> Self {$/;"	F	language:Rust	implementation:NodeId
placeholder_to_mark	examples/rust/ast.rs	/^    pub fn placeholder_to_mark(self) -> Mark {$/;"	F	language:Rust	implementation:NodeId
pointer	examples/go/value.go	/^func (v Value) pointer() unsafe.Pointer {$/;"	f	language:Go
position	examples/cpp/marker-index.h	/^    Point position;$/;"	m	language:C++	struct:MarkerIndex::Boundary	typeref:typename:Point
position	examples/rust/ast.rs	/^    pub position: usize$/;"	m	language:Rust	struct:QSelf
precedence	examples/rust/ast.rs	/^    pub fn precedence(&self) -> ExprPrecedence {$/;"	F	language:Rust	implementation:Expr
predicates	examples/rust/ast.rs	/^    pub predicates: Vec<WherePredicate>,$/;"	m	language:Rust	struct:WhereClause
preemptall	examples/go/proc.go	/^func preemptall() bool {$/;"	f	language:Go
preemptone	examples/go/proc.go	/^func preemptone(_p_ *p) bool {$/;"	f	language:Go
prefix	examples/rust/ast.rs	/^    pub prefix: Path,$/;"	m	language:Rust	struct:UseTree
preinstall	package.json	/^    "preinstall": "make web-tree-sitter",$/;"	s	language:JSON	object:scripts
preprocessor-rule-conditional	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-conditional": {$/;"	o	language:JSON	object:repository
preprocessor-rule-conditional-block	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-conditional-block": {$/;"	o	language:JSON	object:repository
preprocessor-rule-conditional-line	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-conditional-line": {$/;"	o	language:JSON	object:repository
preprocessor-rule-define-line-blocks	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-define-line-blocks": {$/;"	o	language:JSON	object:repository
preprocessor-rule-define-line-contents	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-define-line-contents": {$/;"	o	language:JSON	object:repository
preprocessor-rule-define-line-functions	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-define-line-functions": {$/;"	o	language:JSON	object:repository
preprocessor-rule-disabled	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-disabled": {$/;"	o	language:JSON	object:repository
preprocessor-rule-disabled-block	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-disabled-block": {$/;"	o	language:JSON	object:repository
preprocessor-rule-disabled-elif	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-disabled-elif": {$/;"	o	language:JSON	object:repository
preprocessor-rule-enabled	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-enabled": {$/;"	o	language:JSON	object:repository
preprocessor-rule-enabled-block	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-enabled-block": {$/;"	o	language:JSON	object:repository
preprocessor-rule-enabled-elif	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-enabled-elif": {$/;"	o	language:JSON	object:repository
preprocessor-rule-enabled-elif-block	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-enabled-elif-block": {$/;"	o	language:JSON	object:repository
preprocessor-rule-enabled-else	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-enabled-else": {$/;"	o	language:JSON	object:repository
preprocessor-rule-enabled-else-block	textmate/cpp.tmLanguage.json	/^		"preprocessor-rule-enabled-else-block": {$/;"	o	language:JSON	object:repository
priority	examples/cpp/marker-index.h	/^    int priority;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:int
procPin	examples/go/proc.go	/^func procPin() int {$/;"	f	language:Go
procUnpin	examples/go/proc.go	/^func procUnpin() {$/;"	f	language:Go
procresize	examples/go/proc.go	/^func procresize(nprocs int32) *p {$/;"	f	language:Go
prof	examples/go/proc.go	/^var prof struct {$/;"	v	language:Go
ptr	examples/go/value.go	/^	ptr unsafe.Pointer$/;"	m	language:Go	struct:Value
ptrSize	examples/go/value.go	/^const ptrSize = 4 << (^uintptr(0) >> 63) \/\/ unsafe.Sizeof(uintptr(0)) but an ideal const$/;"	c	language:Go
publish	package.json	/^    "publish": "vsce publish patch"$/;"	s	language:JSON	object:scripts
publisher	package.json	/^  "publisher": "pokey",$/;"	s	language:JSON
qstring-double	textmate/typescript.tmLanguage.json	/^		"qstring-double": {$/;"	o	language:JSON	object:repository
qstring-single	textmate/typescript.tmLanguage.json	/^		"qstring-single": {$/;"	o	language:JSON	object:repository
random_distribution	examples/cpp/marker-index.h	/^  std::uniform_int_distribution<int> random_distribution;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::uniform_int_distribution<int>
random_engine	examples/cpp/marker-index.h	/^  std::default_random_engine random_engine;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::default_random_engine
randomizeScheduler	examples/go/proc.go	/^const randomizeScheduler = raceenabled$/;"	c	language:Go
readgstatus	examples/go/proc.go	/^func readgstatus(gp *g) uint32 {$/;"	f	language:Go
ready	examples/go/proc.go	/^func ready(gp *g, traceskip int) {$/;"	f	language:Go
recovered	examples/rust/ast.rs	/^    pub recovered: bool,$/;"	m	language:Rust	struct:Block
recv	examples/go/value.go	/^func (v Value) recv(nb bool) (val Value, ok bool) {$/;"	f	language:Go
reentersyscall	examples/go/proc.go	/^func reentersyscall(pc, sp uintptr) {$/;"	f	language:Go
ref_id	examples/rust/ast.rs	/^    pub ref_id: NodeId,$/;"	m	language:Rust	struct:TraitRef
reflect	examples/go/value.go	/^package reflect$/;"	p	language:Go
reflect.Addr	examples/go/value.go	/^func (v Value) Addr() Value {$/;"	f	language:Go
reflect.Append	examples/go/value.go	/^func Append(s Value, x ...Value) Value {$/;"	f	language:Go
reflect.AppendSlice	examples/go/value.go	/^func AppendSlice(s, t Value) Value {$/;"	f	language:Go
reflect.Bool	examples/go/value.go	/^func (v Value) Bool() bool {$/;"	f	language:Go
reflect.Bytes	examples/go/value.go	/^func (v Value) Bytes() []byte {$/;"	f	language:Go
reflect.Call	examples/go/value.go	/^func (v Value) Call(in []Value) []Value {$/;"	f	language:Go
reflect.CallSlice	examples/go/value.go	/^func (v Value) CallSlice(in []Value) []Value {$/;"	f	language:Go
reflect.CanAddr	examples/go/value.go	/^func (v Value) CanAddr() bool {$/;"	f	language:Go
reflect.CanInterface	examples/go/value.go	/^func (v Value) CanInterface() bool {$/;"	f	language:Go
reflect.CanSet	examples/go/value.go	/^func (v Value) CanSet() bool {$/;"	f	language:Go
reflect.Cap	examples/go/value.go	/^	Cap  int$/;"	m	language:Go	struct:SliceHeader
reflect.Cap	examples/go/value.go	/^	Cap  int$/;"	m	language:Go	struct:sliceHeader
reflect.Cap	examples/go/value.go	/^func (v Value) Cap() int {$/;"	f	language:Go
reflect.Chan	examples/go/value.go	/^	Chan Value     \/\/ channel to use (for send or receive)$/;"	m	language:Go	struct:SelectCase
reflect.Close	examples/go/value.go	/^func (v Value) Close() {$/;"	f	language:Go
reflect.Complex	examples/go/value.go	/^func (v Value) Complex() complex128 {$/;"	f	language:Go
reflect.Convert	examples/go/value.go	/^func (v Value) Convert(t Type) Value {$/;"	f	language:Go
reflect.Copy	examples/go/value.go	/^func Copy(dst, src Value) int {$/;"	f	language:Go
reflect.Data	examples/go/value.go	/^	Data uintptr$/;"	m	language:Go	struct:SliceHeader
reflect.Data	examples/go/value.go	/^	Data uintptr$/;"	m	language:Go	struct:StringHeader
reflect.Data	examples/go/value.go	/^	Data unsafe.Pointer$/;"	m	language:Go	struct:sliceHeader
reflect.Data	examples/go/value.go	/^	Data unsafe.Pointer$/;"	m	language:Go	struct:stringHeader
reflect.Dir	examples/go/value.go	/^	Dir  SelectDir \/\/ direction of case$/;"	m	language:Go	struct:SelectCase
reflect.Elem	examples/go/value.go	/^func (v Value) Elem() Value {$/;"	f	language:Go
reflect.Error	examples/go/value.go	/^func (e *ValueError) Error() string {$/;"	f	language:Go
reflect.Field	examples/go/value.go	/^func (v Value) Field(i int) Value {$/;"	f	language:Go
reflect.FieldByIndex	examples/go/value.go	/^func (v Value) FieldByIndex(index []int) Value {$/;"	f	language:Go
reflect.FieldByName	examples/go/value.go	/^func (v Value) FieldByName(name string) Value {$/;"	f	language:Go
reflect.FieldByNameFunc	examples/go/value.go	/^func (v Value) FieldByNameFunc(match func(string) bool) Value {$/;"	f	language:Go
reflect.Float	examples/go/value.go	/^func (v Value) Float() float64 {$/;"	f	language:Go
reflect.Index	examples/go/value.go	/^func (v Value) Index(i int) Value {$/;"	f	language:Go
reflect.Indirect	examples/go/value.go	/^func Indirect(v Value) Value {$/;"	f	language:Go
reflect.Int	examples/go/value.go	/^func (v Value) Int() int64 {$/;"	f	language:Go
reflect.Interface	examples/go/value.go	/^func (v Value) Interface() (i interface{}) {$/;"	f	language:Go
reflect.InterfaceData	examples/go/value.go	/^func (v Value) InterfaceData() [2]uintptr {$/;"	f	language:Go
reflect.IsNil	examples/go/value.go	/^func (v Value) IsNil() bool {$/;"	f	language:Go
reflect.IsValid	examples/go/value.go	/^func (v Value) IsValid() bool {$/;"	f	language:Go
reflect.Kind	examples/go/value.go	/^	Kind   Kind$/;"	m	language:Go	struct:ValueError
reflect.Kind	examples/go/value.go	/^func (v Value) Kind() Kind {$/;"	f	language:Go
reflect.Len	examples/go/value.go	/^	Len  int$/;"	m	language:Go	struct:SliceHeader
reflect.Len	examples/go/value.go	/^	Len  int$/;"	m	language:Go	struct:StringHeader
reflect.Len	examples/go/value.go	/^	Len  int$/;"	m	language:Go	struct:sliceHeader
reflect.Len	examples/go/value.go	/^	Len  int$/;"	m	language:Go	struct:stringHeader
reflect.Len	examples/go/value.go	/^func (v Value) Len() int {$/;"	f	language:Go
reflect.MakeChan	examples/go/value.go	/^func MakeChan(typ Type, buffer int) Value {$/;"	f	language:Go
reflect.MakeMap	examples/go/value.go	/^func MakeMap(typ Type) Value {$/;"	f	language:Go
reflect.MakeSlice	examples/go/value.go	/^func MakeSlice(typ Type, len, cap int) Value {$/;"	f	language:Go
reflect.MapIndex	examples/go/value.go	/^func (v Value) MapIndex(key Value) Value {$/;"	f	language:Go
reflect.MapKeys	examples/go/value.go	/^func (v Value) MapKeys() []Value {$/;"	f	language:Go
reflect.Method	examples/go/value.go	/^	Method string$/;"	m	language:Go	struct:ValueError
reflect.Method	examples/go/value.go	/^func (v Value) Method(i int) Value {$/;"	f	language:Go
reflect.MethodByName	examples/go/value.go	/^func (v Value) MethodByName(name string) Value {$/;"	f	language:Go
reflect.New	examples/go/value.go	/^func New(typ Type) Value {$/;"	f	language:Go
reflect.NewAt	examples/go/value.go	/^func NewAt(typ Type, p unsafe.Pointer) Value {$/;"	f	language:Go
reflect.NumField	examples/go/value.go	/^func (v Value) NumField() int {$/;"	f	language:Go
reflect.NumMethod	examples/go/value.go	/^func (v Value) NumMethod() int {$/;"	f	language:Go
reflect.OverflowComplex	examples/go/value.go	/^func (v Value) OverflowComplex(x complex128) bool {$/;"	f	language:Go
reflect.OverflowFloat	examples/go/value.go	/^func (v Value) OverflowFloat(x float64) bool {$/;"	f	language:Go
reflect.OverflowInt	examples/go/value.go	/^func (v Value) OverflowInt(x int64) bool {$/;"	f	language:Go
reflect.OverflowUint	examples/go/value.go	/^func (v Value) OverflowUint(x uint64) bool {$/;"	f	language:Go
reflect.Pointer	examples/go/value.go	/^func (v Value) Pointer() uintptr {$/;"	f	language:Go
reflect.Recv	examples/go/value.go	/^func (v Value) Recv() (x Value, ok bool) {$/;"	f	language:Go
reflect.Select	examples/go/value.go	/^func Select(cases []SelectCase) (chosen int, recv Value, recvOK bool) {$/;"	f	language:Go
reflect.SelectCase	examples/go/value.go	/^type SelectCase struct {$/;"	s	language:Go
reflect.SelectDefault	examples/go/value.go	/^	SelectDefault           \/\/ default$/;"	c	language:Go
reflect.SelectDir	examples/go/value.go	/^type SelectDir int$/;"	t	language:Go
reflect.SelectRecv	examples/go/value.go	/^	SelectRecv              \/\/ case <-Chan:$/;"	c	language:Go
reflect.SelectSend	examples/go/value.go	/^	SelectSend              \/\/ case Chan <- Send$/;"	c	language:Go
reflect.Send	examples/go/value.go	/^	Send Value     \/\/ value to send (for send)$/;"	m	language:Go	struct:SelectCase
reflect.Send	examples/go/value.go	/^func (v Value) Send(x Value) {$/;"	f	language:Go
reflect.Set	examples/go/value.go	/^func (v Value) Set(x Value) {$/;"	f	language:Go
reflect.SetBool	examples/go/value.go	/^func (v Value) SetBool(x bool) {$/;"	f	language:Go
reflect.SetBytes	examples/go/value.go	/^func (v Value) SetBytes(x []byte) {$/;"	f	language:Go
reflect.SetCap	examples/go/value.go	/^func (v Value) SetCap(n int) {$/;"	f	language:Go
reflect.SetComplex	examples/go/value.go	/^func (v Value) SetComplex(x complex128) {$/;"	f	language:Go
reflect.SetFloat	examples/go/value.go	/^func (v Value) SetFloat(x float64) {$/;"	f	language:Go
reflect.SetInt	examples/go/value.go	/^func (v Value) SetInt(x int64) {$/;"	f	language:Go
reflect.SetLen	examples/go/value.go	/^func (v Value) SetLen(n int) {$/;"	f	language:Go
reflect.SetMapIndex	examples/go/value.go	/^func (v Value) SetMapIndex(key, val Value) {$/;"	f	language:Go
reflect.SetPointer	examples/go/value.go	/^func (v Value) SetPointer(x unsafe.Pointer) {$/;"	f	language:Go
reflect.SetString	examples/go/value.go	/^func (v Value) SetString(x string) {$/;"	f	language:Go
reflect.SetUint	examples/go/value.go	/^func (v Value) SetUint(x uint64) {$/;"	f	language:Go
reflect.Slice	examples/go/value.go	/^func (v Value) Slice(i, j int) Value {$/;"	f	language:Go
reflect.Slice3	examples/go/value.go	/^func (v Value) Slice3(i, j, k int) Value {$/;"	f	language:Go
reflect.SliceHeader	examples/go/value.go	/^type SliceHeader struct {$/;"	s	language:Go
reflect.String	examples/go/value.go	/^func (v Value) String() string {$/;"	f	language:Go
reflect.StringHeader	examples/go/value.go	/^type StringHeader struct {$/;"	s	language:Go
reflect.TryRecv	examples/go/value.go	/^func (v Value) TryRecv() (x Value, ok bool) {$/;"	f	language:Go
reflect.TrySend	examples/go/value.go	/^func (v Value) TrySend(x Value) bool {$/;"	f	language:Go
reflect.Type	examples/go/value.go	/^func (v Value) Type() Type {$/;"	f	language:Go
reflect.Uint	examples/go/value.go	/^func (v Value) Uint() uint64 {$/;"	f	language:Go
reflect.UnsafeAddr	examples/go/value.go	/^func (v Value) UnsafeAddr() uintptr {$/;"	f	language:Go
reflect.Value	examples/go/value.go	/^type Value struct {$/;"	s	language:Go
reflect.ValueError	examples/go/value.go	/^type ValueError struct {$/;"	s	language:Go
reflect.ValueOf	examples/go/value.go	/^func ValueOf(i interface{}) Value {$/;"	f	language:Go
reflect.Zero	examples/go/value.go	/^func Zero(typ Type) Value {$/;"	f	language:Go
reflect._	examples/go/value.go	/^	_             SelectDir = iota$/;"	c	language:Go
reflect.align	examples/go/value.go	/^func align(x, n uintptr) uintptr {$/;"	f	language:Go
reflect.arrayAt	examples/go/value.go	/^func arrayAt(p unsafe.Pointer, i int, eltSize uintptr) unsafe.Pointer {$/;"	f	language:Go
reflect.assignTo	examples/go/value.go	/^func (v Value) assignTo(context string, dst *rtype, target unsafe.Pointer) Value {$/;"	f	language:Go
reflect.call	examples/go/value.go	/^func (v Value) call(op string, in []Value) []Value {$/;"	f	language:Go
reflect.call	examples/go/value.go	/^func call(argtype *rtype, fn, arg unsafe.Pointer, n uint32, retoffset uint32)$/;"	f	language:Go
reflect.callGC	examples/go/value.go	/^var callGC bool \/\/ for testing; see TestCallMethodJump$/;"	v	language:Go
reflect.callMethod	examples/go/value.go	/^func callMethod(ctxt *methodValue, frame unsafe.Pointer) {$/;"	f	language:Go
reflect.callReflect	examples/go/value.go	/^func callReflect(ctxt *makeFuncImpl, frame unsafe.Pointer) {$/;"	f	language:Go
reflect.cannotSet	examples/go/value.go	/^const cannotSet = "cannot set value obtained from unexported struct field"$/;"	c	language:Go
reflect.ch	examples/go/value.go	/^	ch  unsafe.Pointer \/\/ channel$/;"	m	language:Go	struct:runtimeSelect
reflect.chancap	examples/go/value.go	/^func chancap(ch unsafe.Pointer) int$/;"	f	language:Go
reflect.chanclose	examples/go/value.go	/^func chanclose(ch unsafe.Pointer)$/;"	f	language:Go
reflect.chanlen	examples/go/value.go	/^func chanlen(ch unsafe.Pointer) int$/;"	f	language:Go
reflect.chanrecv	examples/go/value.go	/^func chanrecv(t *rtype, ch unsafe.Pointer, nb bool, val unsafe.Pointer) (selected, received bool/;"	f	language:Go
reflect.chansend	examples/go/value.go	/^func chansend(t *rtype, ch unsafe.Pointer, val unsafe.Pointer, nb bool) bool$/;"	f	language:Go
reflect.convertOp	examples/go/value.go	/^func convertOp(dst, src *rtype) func(Value, Type) Value {$/;"	f	language:Go
reflect.cvtBytesString	examples/go/value.go	/^func cvtBytesString(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtComplex	examples/go/value.go	/^func cvtComplex(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtDirect	examples/go/value.go	/^func cvtDirect(v Value, typ Type) Value {$/;"	f	language:Go
reflect.cvtFloat	examples/go/value.go	/^func cvtFloat(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtFloatInt	examples/go/value.go	/^func cvtFloatInt(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtFloatUint	examples/go/value.go	/^func cvtFloatUint(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtI2I	examples/go/value.go	/^func cvtI2I(v Value, typ Type) Value {$/;"	f	language:Go
reflect.cvtInt	examples/go/value.go	/^func cvtInt(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtIntFloat	examples/go/value.go	/^func cvtIntFloat(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtIntString	examples/go/value.go	/^func cvtIntString(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtRunesString	examples/go/value.go	/^func cvtRunesString(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtStringBytes	examples/go/value.go	/^func cvtStringBytes(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtStringRunes	examples/go/value.go	/^func cvtStringRunes(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtT2I	examples/go/value.go	/^func cvtT2I(v Value, typ Type) Value {$/;"	f	language:Go
reflect.cvtUint	examples/go/value.go	/^func cvtUint(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtUintFloat	examples/go/value.go	/^func cvtUintFloat(v Value, t Type) Value {$/;"	f	language:Go
reflect.cvtUintString	examples/go/value.go	/^func cvtUintString(v Value, t Type) Value {$/;"	f	language:Go
reflect.dir	examples/go/value.go	/^	dir uintptr        \/\/ 0, SendDir, or RecvDir$/;"	m	language:Go	struct:runtimeSelect
reflect.dummy	examples/go/value.go	/^var dummy struct {$/;"	v	language:Go
reflect.emptyInterface	examples/go/value.go	/^type emptyInterface struct {$/;"	s	language:Go
reflect.escapes	examples/go/value.go	/^func escapes(x interface{}) {$/;"	f	language:Go
reflect.flag	examples/go/value.go	/^type flag uintptr$/;"	t	language:Go
reflect.flagAddr	examples/go/value.go	/^	flagAddr        flag = 1 << 8$/;"	c	language:Go
reflect.flagEmbedRO	examples/go/value.go	/^	flagEmbedRO     flag = 1 << 6$/;"	c	language:Go
reflect.flagIndir	examples/go/value.go	/^	flagIndir       flag = 1 << 7$/;"	c	language:Go
reflect.flagKindMask	examples/go/value.go	/^	flagKindMask    flag = 1<<flagKindWidth - 1$/;"	c	language:Go
reflect.flagKindWidth	examples/go/value.go	/^	flagKindWidth        = 5 \/\/ there are 27 kinds$/;"	c	language:Go
reflect.flagMethod	examples/go/value.go	/^	flagMethod      flag = 1 << 9$/;"	c	language:Go
reflect.flagMethodShift	examples/go/value.go	/^	flagMethodShift      = 10$/;"	c	language:Go
reflect.flagRO	examples/go/value.go	/^	flagRO          flag = flagStickyRO | flagEmbedRO$/;"	c	language:Go
reflect.flagStickyRO	examples/go/value.go	/^	flagStickyRO    flag = 1 << 5$/;"	c	language:Go
reflect.funcName	examples/go/value.go	/^func funcName(f func([]Value) []Value) string {$/;"	f	language:Go
reflect.grow	examples/go/value.go	/^func grow(s Value, extra int) (Value, int, int) {$/;"	f	language:Go
reflect.ifaceE2I	examples/go/value.go	/^func ifaceE2I(t *rtype, src interface{}, dst unsafe.Pointer)$/;"	f	language:Go
reflect.itab	examples/go/value.go	/^	itab *struct {$/;"	m	language:Go	struct:nonEmptyInterface
reflect.kind	examples/go/value.go	/^func (f flag) kind() Kind {$/;"	f	language:Go
reflect.makeBytes	examples/go/value.go	/^func makeBytes(f flag, v []byte, t Type) Value {$/;"	f	language:Go
reflect.makeComplex	examples/go/value.go	/^func makeComplex(f flag, v complex128, t Type) Value {$/;"	f	language:Go
reflect.makeFloat	examples/go/value.go	/^func makeFloat(f flag, v float64, t Type) Value {$/;"	f	language:Go
reflect.makeInt	examples/go/value.go	/^func makeInt(f flag, bits uint64, t Type) Value {$/;"	f	language:Go
reflect.makeRunes	examples/go/value.go	/^func makeRunes(f flag, v []rune, t Type) Value {$/;"	f	language:Go
reflect.makeString	examples/go/value.go	/^func makeString(f flag, v string, t Type) Value {$/;"	f	language:Go
reflect.makechan	examples/go/value.go	/^func makechan(typ *rtype, size uint64) (ch unsafe.Pointer)$/;"	f	language:Go
reflect.makemap	examples/go/value.go	/^func makemap(t *rtype) (m unsafe.Pointer)$/;"	f	language:Go
reflect.mapaccess	examples/go/value.go	/^func mapaccess(t *rtype, m unsafe.Pointer, key unsafe.Pointer) (val unsafe.Pointer)$/;"	f	language:Go
reflect.mapassign	examples/go/value.go	/^func mapassign(t *rtype, m unsafe.Pointer, key, val unsafe.Pointer)$/;"	f	language:Go
reflect.mapdelete	examples/go/value.go	/^func mapdelete(t *rtype, m unsafe.Pointer, key unsafe.Pointer)$/;"	f	language:Go
reflect.mapiterinit	examples/go/value.go	/^func mapiterinit(t *rtype, m unsafe.Pointer) unsafe.Pointer$/;"	f	language:Go
reflect.mapiterkey	examples/go/value.go	/^func mapiterkey(it unsafe.Pointer) (key unsafe.Pointer)$/;"	f	language:Go
reflect.mapiternext	examples/go/value.go	/^func mapiternext(it unsafe.Pointer)$/;"	f	language:Go
reflect.maplen	examples/go/value.go	/^func maplen(m unsafe.Pointer) int$/;"	f	language:Go
reflect.memclr	examples/go/value.go	/^func memclr(ptr unsafe.Pointer, n uintptr)$/;"	f	language:Go
reflect.methodName	examples/go/value.go	/^func methodName() string {$/;"	f	language:Go
reflect.methodReceiver	examples/go/value.go	/^func methodReceiver(op string, v Value, methodIndex int) (rcvrtype, t *rtype, fn unsafe.Pointer)/;"	f	language:Go
reflect.mustBe	examples/go/value.go	/^func (f flag) mustBe(expected Kind) {$/;"	f	language:Go
reflect.mustBeAssignable	examples/go/value.go	/^func (f flag) mustBeAssignable() {$/;"	f	language:Go
reflect.mustBeExported	examples/go/value.go	/^func (f flag) mustBeExported() {$/;"	f	language:Go
reflect.nonEmptyInterface	examples/go/value.go	/^type nonEmptyInterface struct {$/;"	s	language:Go
reflect.overflowFloat32	examples/go/value.go	/^func overflowFloat32(x float64) bool {$/;"	f	language:Go
reflect.packEface	examples/go/value.go	/^func packEface(v Value) interface{} {$/;"	f	language:Go
reflect.pointer	examples/go/value.go	/^func (v Value) pointer() unsafe.Pointer {$/;"	f	language:Go
reflect.ptr	examples/go/value.go	/^	ptr unsafe.Pointer$/;"	m	language:Go	struct:Value
reflect.ptrSize	examples/go/value.go	/^const ptrSize = 4 << (^uintptr(0) >> 63) \/\/ unsafe.Sizeof(uintptr(0)) but an ideal const$/;"	c	language:Go
reflect.recv	examples/go/value.go	/^func (v Value) recv(nb bool) (val Value, ok bool) {$/;"	f	language:Go
reflect.rselect	examples/go/value.go	/^func rselect([]runtimeSelect) (chosen int, recvOK bool)$/;"	f	language:Go
reflect.runes	examples/go/value.go	/^func (v Value) runes() []rune {$/;"	f	language:Go
reflect.runtimeSelect	examples/go/value.go	/^type runtimeSelect struct {$/;"	s	language:Go
reflect.send	examples/go/value.go	/^func (v Value) send(x Value, nb bool) (selected bool) {$/;"	f	language:Go
reflect.setRunes	examples/go/value.go	/^func (v Value) setRunes(x []rune) {$/;"	f	language:Go
reflect.sliceHeader	examples/go/value.go	/^type sliceHeader struct {$/;"	s	language:Go
reflect.storeRcvr	examples/go/value.go	/^func storeRcvr(v Value, p unsafe.Pointer) {$/;"	f	language:Go
reflect.stringHeader	examples/go/value.go	/^type stringHeader struct {$/;"	s	language:Go
reflect.typ	examples/go/value.go	/^	typ  *rtype$/;"	m	language:Go	struct:emptyInterface
reflect.typ	examples/go/value.go	/^	typ *rtype         \/\/ channel type$/;"	m	language:Go	struct:runtimeSelect
reflect.typ	examples/go/value.go	/^	typ *rtype$/;"	m	language:Go	struct:Value
reflect.typedmemmove	examples/go/value.go	/^func typedmemmove(t *rtype, dst, src unsafe.Pointer)$/;"	f	language:Go
reflect.typedmemmovepartial	examples/go/value.go	/^func typedmemmovepartial(t *rtype, dst, src unsafe.Pointer, off, size uintptr)$/;"	f	language:Go
reflect.typedslicecopy	examples/go/value.go	/^func typedslicecopy(elemType *rtype, dst, src sliceHeader) int$/;"	f	language:Go
reflect.typesMustMatch	examples/go/value.go	/^func typesMustMatch(what string, t1, t2 Type) {$/;"	f	language:Go
reflect.uint8Type	examples/go/value.go	/^var uint8Type = TypeOf(uint8(0)).(*rtype)$/;"	v	language:Go
reflect.unpackEface	examples/go/value.go	/^func unpackEface(i interface{}) Value {$/;"	f	language:Go
reflect.unsafe_New	examples/go/value.go	/^func unsafe_New(*rtype) unsafe.Pointer$/;"	f	language:Go
reflect.unsafe_NewArray	examples/go/value.go	/^func unsafe_NewArray(*rtype, int) unsafe.Pointer$/;"	f	language:Go
reflect.val	examples/go/value.go	/^	val unsafe.Pointer \/\/ ptr to data (SendDir) or ptr to receive buffer (RecvDir)$/;"	m	language:Go	struct:runtimeSelect
reflect.valueInterface	examples/go/value.go	/^func valueInterface(v Value, safe bool) interface{} {$/;"	f	language:Go
reflect.word	examples/go/value.go	/^	word unsafe.Pointer$/;"	m	language:Go	struct:emptyInterface
reflect.word	examples/go/value.go	/^	word unsafe.Pointer$/;"	m	language:Go	struct:nonEmptyInterface
regex	textmate/typescript.tmLanguage.json	/^		"regex": {$/;"	o	language:JSON	object:repository
regex-character-class	textmate/typescript.tmLanguage.json	/^		"regex-character-class": {$/;"	o	language:JSON	object:repository
regex_sub	textmate/ruby.tmLanguage.json	/^        "regex_sub": {$/;"	o	language:JSON	object:repository
regexp	textmate/typescript.tmLanguage.json	/^		"regexp": {$/;"	o	language:JSON	object:repository
releaseSudog	examples/go/proc.go	/^func releaseSudog(s *sudog) {$/;"	f	language:Go
releasep	examples/go/proc.go	/^func releasep() *p {$/;"	f	language:Go
repeat	examples/cpp/rule.cc	/^Rule Rule::repeat(const Rule &rule) {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule
repository	package.json	/^  "repository": {$/;"	o	language:JSON
repository	textmate/cpp.tmLanguage.json	/^	"repository": {$/;"	o	language:JSON
repository	textmate/go.tmLanguage.json	/^	"repository": {$/;"	o	language:JSON
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.interpolated_ruby.patterns.0
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.2
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.3
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.4
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.5
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7
repository	textmate/ruby.tmLanguage.json	/^                    "repository": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.8
repository	textmate/ruby.tmLanguage.json	/^    "repository": {$/;"	o	language:JSON
repository	textmate/rust.tmLanguage.json	/^	"repository": {$/;"	o	language:JSON
repository	textmate/typescript.tmLanguage.json	/^	"repository": {$/;"	o	language:JSON
resetspinning	examples/go/proc.go	/^func resetspinning() {$/;"	f	language:Go
restartg	examples/go/proc.go	/^func restartg(gp *g) {$/;"	f	language:Go
retake	examples/go/proc.go	/^func retake(now int64) uint32 {$/;"	f	language:Go
returns	examples/rust/ast.rs	/^    pub fn returns(&self) -> bool {$/;"	F	language:Rust	implementation:Expr
rhs_ty	examples/rust/ast.rs	/^    pub rhs_ty: P<Ty>,$/;"	m	language:Rust	struct:WhereEqPredicate
right	examples/cpp/marker-index.h	/^    Node *right;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:Node *
right_ancestor_position	examples/cpp/marker-index.h	/^    Point right_ancestor_position;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:Point
right_ancestor_position_stack	examples/cpp/marker-index.h	/^    std::vector<Point> right_ancestor_position_stack;$/;"	m	language:C++	class:MarkerIndex::Iterator	typeref:typename:std::vector<Point>
right_marker_ids	examples/cpp/marker-index.h	/^    flat_set<MarkerId> right_marker_ids;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:flat_set<MarkerId>
root	examples/cpp/marker-index.h	/^  Node *root;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:Node *
rootDir	tsconfig.json	/^		"rootDir": "src",$/;"	s	language:JSON	object:compilerOptions
rselect	examples/go/value.go	/^func rselect([]runtimeSelect) (chosen int, recvOK bool)$/;"	f	language:Go
rules	examples/cpp/rule.cc	/^namespace rules {$/;"	n	language:C++	namespace:tree_sitter	file:
rules	examples/rust/ast.rs	/^    pub rules: BlockCheckMode,$/;"	m	language:Rust	struct:Block
runSafePointFn	examples/go/proc.go	/^func runSafePointFn() {$/;"	f	language:Go
runes	examples/go/value.go	/^func (v Value) runes() []rune {$/;"	f	language:Go
runes	textmate/go.tmLanguage.json	/^		"runes": {$/;"	o	language:JSON	object:repository
runqempty	examples/go/proc.go	/^func runqempty(_p_ *p) bool {$/;"	f	language:Go
runqget	examples/go/proc.go	/^func runqget(_p_ *p) (gp *g, inheritTime bool) {$/;"	f	language:Go
runqgrab	examples/go/proc.go	/^func runqgrab(_p_ *p, batch *[256]guintptr, batchHead uint32, stealRunNextG bool) uint32 {$/;"	f	language:Go
runqput	examples/go/proc.go	/^func runqput(_p_ *p, gp *g, next bool) {$/;"	f	language:Go
runqputslow	examples/go/proc.go	/^func runqputslow(_p_ *p, gp *g, h, t uint32) bool {$/;"	f	language:Go
runqsteal	examples/go/proc.go	/^func runqsteal(_p_, p2 *p, stealRunNextG bool) *g {$/;"	f	language:Go
runtime	examples/go/proc.go	/^package runtime$/;"	p	language:Go
runtime.Breakpoint	examples/go/proc.go	/^func Breakpoint() {$/;"	f	language:Go
runtime.Gosched	examples/go/proc.go	/^func Gosched() {$/;"	f	language:Go
runtime.LockOSThread	examples/go/proc.go	/^func LockOSThread() {$/;"	f	language:Go
runtime.UnlockOSThread	examples/go/proc.go	/^func UnlockOSThread() {$/;"	f	language:Go
runtime._ExternalCode	examples/go/proc.go	/^func _ExternalCode() { _ExternalCode() }$/;"	f	language:Go
runtime._GC	examples/go/proc.go	/^func _GC()           { _GC() }$/;"	f	language:Go
runtime._GoidCacheBatch	examples/go/proc.go	/^	_GoidCacheBatch = 16$/;"	c	language:Go
runtime._System	examples/go/proc.go	/^func _System()       { _System() }$/;"	f	language:Go
runtime.acquireSudog	examples/go/proc.go	/^func acquireSudog() *sudog {$/;"	f	language:Go
runtime.acquirep	examples/go/proc.go	/^func acquirep(_p_ *p) {$/;"	f	language:Go
runtime.acquirep1	examples/go/proc.go	/^func acquirep1(_p_ *p) {$/;"	f	language:Go
runtime.afterfork	examples/go/proc.go	/^func afterfork() {$/;"	f	language:Go
runtime.allgadd	examples/go/proc.go	/^func allgadd(gp *g) {$/;"	f	language:Go
runtime.allglock	examples/go/proc.go	/^	allglock mutex$/;"	v	language:Go
runtime.allgs	examples/go/proc.go	/^	allgs    []*g$/;"	v	language:Go
runtime.allocm	examples/go/proc.go	/^func allocm(_p_ *p, fn func()) *m {$/;"	f	language:Go
runtime.badmcall	examples/go/proc.go	/^func badmcall(fn func(*g)) {$/;"	f	language:Go
runtime.badmcall2	examples/go/proc.go	/^func badmcall2(fn func(*g)) {$/;"	f	language:Go
runtime.badreflectcall	examples/go/proc.go	/^func badreflectcall() {$/;"	f	language:Go
runtime.badunlockosthread	examples/go/proc.go	/^func badunlockosthread() {$/;"	f	language:Go
runtime.beforefork	examples/go/proc.go	/^func beforefork() {$/;"	f	language:Go
runtime.buildVersion	examples/go/proc.go	/^var buildVersion = sys.TheVersion$/;"	v	language:Go
runtime.casfrom_Gscanstatus	examples/go/proc.go	/^func casfrom_Gscanstatus(gp *g, oldval, newval uint32) {$/;"	f	language:Go
runtime.casgcopystack	examples/go/proc.go	/^func casgcopystack(gp *g) uint32 {$/;"	f	language:Go
runtime.casgstatus	examples/go/proc.go	/^func casgstatus(gp *g, oldval, newval uint32) {$/;"	f	language:Go
runtime.castogscanstatus	examples/go/proc.go	/^func castogscanstatus(gp *g, oldval, newval uint32) bool {$/;"	f	language:Go
runtime.cgoThreadStart	examples/go/proc.go	/^var cgoThreadStart unsafe.Pointer$/;"	v	language:Go
runtime.cgothreadstart	examples/go/proc.go	/^type cgothreadstart struct {$/;"	s	language:Go
runtime.checkdead	examples/go/proc.go	/^func checkdead() {$/;"	f	language:Go
runtime.checkmcount	examples/go/proc.go	/^func checkmcount() {$/;"	f	language:Go
runtime.dolockOSThread	examples/go/proc.go	/^func dolockOSThread() {$/;"	f	language:Go
runtime.dounlockOSThread	examples/go/proc.go	/^func dounlockOSThread() {$/;"	f	language:Go
runtime.dropg	examples/go/proc.go	/^func dropg() {$/;"	f	language:Go
runtime.dropm	examples/go/proc.go	/^func dropm() {$/;"	f	language:Go
runtime.dumpgstatus	examples/go/proc.go	/^func dumpgstatus(gp *g) {$/;"	f	language:Go
runtime.earlycgocallback	examples/go/proc.go	/^var earlycgocallback = []byte("fatal error: cgo callback before cgo call\\n")$/;"	v	language:Go
runtime.entersyscall	examples/go/proc.go	/^func entersyscall(dummy int32) {$/;"	f	language:Go
runtime.entersyscall_gcwait	examples/go/proc.go	/^func entersyscall_gcwait() {$/;"	f	language:Go
runtime.entersyscall_sysmon	examples/go/proc.go	/^func entersyscall_sysmon() {$/;"	f	language:Go
runtime.entersyscallblock	examples/go/proc.go	/^func entersyscallblock(dummy int32) {$/;"	f	language:Go
runtime.entersyscallblock_handoff	examples/go/proc.go	/^func entersyscallblock_handoff() {$/;"	f	language:Go
runtime.execute	examples/go/proc.go	/^func execute(gp *g, inheritTime bool) {$/;"	f	language:Go
runtime.exitsyscall	examples/go/proc.go	/^func exitsyscall(dummy int32) {$/;"	f	language:Go
runtime.exitsyscall0	examples/go/proc.go	/^func exitsyscall0(gp *g) {$/;"	f	language:Go
runtime.exitsyscallfast	examples/go/proc.go	/^func exitsyscallfast() bool {$/;"	f	language:Go
runtime.exitsyscallfast_pidle	examples/go/proc.go	/^func exitsyscallfast_pidle() bool {$/;"	f	language:Go
runtime.extram	examples/go/proc.go	/^var extram uintptr$/;"	v	language:Go
runtime.findrunnable	examples/go/proc.go	/^func findrunnable() (gp *g, inheritTime bool) {$/;"	f	language:Go
runtime.fn	examples/go/proc.go	/^	fn  unsafe.Pointer$/;"	m	language:Go	struct:cgothreadstart
runtime.forEachP	examples/go/proc.go	/^func forEachP(fn func(*p)) {$/;"	f	language:Go
runtime.forcePreemptNS	examples/go/proc.go	/^const forcePreemptNS = 10 * 1000 * 1000 \/\/ 10ms$/;"	c	language:Go
runtime.forcegchelper	examples/go/proc.go	/^func forcegchelper() {$/;"	f	language:Go
runtime.forcegcperiod	examples/go/proc.go	/^var forcegcperiod int64 = 2 * 60 * 1e9$/;"	v	language:Go
runtime.freezeStopWait	examples/go/proc.go	/^const freezeStopWait = 0x7fffffff$/;"	c	language:Go
runtime.freezetheworld	examples/go/proc.go	/^func freezetheworld() {$/;"	f	language:Go
runtime.funcPC	examples/go/proc.go	/^func funcPC(f interface{}) uintptr {$/;"	f	language:Go
runtime.g	examples/go/proc.go	/^	g   guintptr$/;"	m	language:Go	struct:cgothreadstart
runtime.g0	examples/go/proc.go	/^	g0 g$/;"	v	language:Go
runtime.gcount	examples/go/proc.go	/^func gcount() int32 {$/;"	f	language:Go
runtime.gcprocs	examples/go/proc.go	/^func gcprocs() int32 {$/;"	f	language:Go
runtime.gcstopm	examples/go/proc.go	/^func gcstopm() {$/;"	f	language:Go
runtime.getm	examples/go/proc.go	/^func getm() uintptr {$/;"	f	language:Go
runtime.gfget	examples/go/proc.go	/^func gfget(_p_ *p) *g {$/;"	f	language:Go
runtime.gfpurge	examples/go/proc.go	/^func gfpurge(_p_ *p) {$/;"	f	language:Go
runtime.gfput	examples/go/proc.go	/^func gfput(_p_ *p, gp *g) {$/;"	f	language:Go
runtime.globrunqget	examples/go/proc.go	/^func globrunqget(_p_ *p, max int32) *g {$/;"	f	language:Go
runtime.globrunqput	examples/go/proc.go	/^func globrunqput(gp *g) {$/;"	f	language:Go
runtime.globrunqputbatch	examples/go/proc.go	/^func globrunqputbatch(ghead *g, gtail *g, n int32) {$/;"	f	language:Go
runtime.globrunqputhead	examples/go/proc.go	/^func globrunqputhead(gp *g) {$/;"	f	language:Go
runtime.goexit0	examples/go/proc.go	/^func goexit0(gp *g) {$/;"	f	language:Go
runtime.goexit1	examples/go/proc.go	/^func goexit1() {$/;"	f	language:Go
runtime.gopark	examples/go/proc.go	/^func gopark(unlockf func(*g, unsafe.Pointer) bool, lock unsafe.Pointer, reason string, traceEv b/;"	f	language:Go
runtime.goparkunlock	examples/go/proc.go	/^func goparkunlock(lock *mutex, reason string, traceEv byte, traceskip int) {$/;"	f	language:Go
runtime.gopreempt_m	examples/go/proc.go	/^func gopreempt_m(gp *g) {$/;"	f	language:Go
runtime.goready	examples/go/proc.go	/^func goready(gp *g, traceskip int) {$/;"	f	language:Go
runtime.goschedImpl	examples/go/proc.go	/^func goschedImpl(gp *g) {$/;"	f	language:Go
runtime.gosched_m	examples/go/proc.go	/^func gosched_m(gp *g) {$/;"	f	language:Go
runtime.handoffp	examples/go/proc.go	/^func handoffp(_p_ *p) {$/;"	f	language:Go
runtime.haveexperiment	examples/go/proc.go	/^func haveexperiment(name string) bool {$/;"	f	language:Go
runtime.helpgc	examples/go/proc.go	/^func helpgc(nproc int32) {$/;"	f	language:Go
runtime.incidlelocked	examples/go/proc.go	/^func incidlelocked(v int32) {$/;"	f	language:Go
runtime.init	examples/go/proc.go	/^func init() {$/;"	f	language:Go
runtime.initSigmask	examples/go/proc.go	/^var initSigmask sigset$/;"	v	language:Go
runtime.injectglist	examples/go/proc.go	/^func injectglist(glist *g) {$/;"	f	language:Go
runtime.isscanstatus	examples/go/proc.go	/^func isscanstatus(status uint32) bool {$/;"	f	language:Go
runtime.lockOSThread	examples/go/proc.go	/^func lockOSThread() {$/;"	f	language:Go
runtime.lockedOSThread	examples/go/proc.go	/^func lockedOSThread() bool {$/;"	f	language:Go
runtime.lockextra	examples/go/proc.go	/^func lockextra(nilokay bool) *m {$/;"	f	language:Go
runtime.m0	examples/go/proc.go	/^	m0 m$/;"	v	language:Go
runtime.main	examples/go/proc.go	/^func main() {$/;"	f	language:Go
runtime.main_init	examples/go/proc.go	/^func main_init()$/;"	f	language:Go
runtime.main_init_done	examples/go/proc.go	/^var main_init_done chan bool$/;"	v	language:Go
runtime.main_main	examples/go/proc.go	/^func main_main()$/;"	f	language:Go
runtime.malg	examples/go/proc.go	/^func malg(stacksize int32) *g {$/;"	f	language:Go
runtime.mcommoninit	examples/go/proc.go	/^func mcommoninit(mp *m) {$/;"	f	language:Go
runtime.mcount	examples/go/proc.go	/^func mcount() int32 {$/;"	f	language:Go
runtime.mget	examples/go/proc.go	/^func mget() *m {$/;"	f	language:Go
runtime.mhelpgc	examples/go/proc.go	/^func mhelpgc() {$/;"	f	language:Go
runtime.mput	examples/go/proc.go	/^func mput(mp *m) {$/;"	f	language:Go
runtime.mspinning	examples/go/proc.go	/^func mspinning() {$/;"	f	language:Go
runtime.mstart	examples/go/proc.go	/^func mstart() {$/;"	f	language:Go
runtime.mstart1	examples/go/proc.go	/^func mstart1() {$/;"	f	language:Go
runtime.needaddgcproc	examples/go/proc.go	/^func needaddgcproc() bool {$/;"	f	language:Go
runtime.needm	examples/go/proc.go	/^func needm(x byte) {$/;"	f	language:Go
runtime.newextram	examples/go/proc.go	/^func newextram() {$/;"	f	language:Go
runtime.newm	examples/go/proc.go	/^func newm(fn func(), _p_ *p) {$/;"	f	language:Go
runtime.newproc	examples/go/proc.go	/^func newproc(siz int32, fn *funcval) {$/;"	f	language:Go
runtime.newproc1	examples/go/proc.go	/^func newproc1(fn *funcval, argp *uint8, narg int32, nret int32, callerpc uintptr) *g {$/;"	f	language:Go
runtime.os_beforeExit	examples/go/proc.go	/^func os_beforeExit() {$/;"	f	language:Go
runtime.park_m	examples/go/proc.go	/^func park_m(gp *g) {$/;"	f	language:Go
runtime.parkunlock_c	examples/go/proc.go	/^func parkunlock_c(gp *g, lock unsafe.Pointer) bool {$/;"	f	language:Go
runtime.pdesc	examples/go/proc.go	/^var pdesc [_MaxGomaxprocs]struct {$/;"	v	language:Go
runtime.pidleget	examples/go/proc.go	/^func pidleget() *p {$/;"	f	language:Go
runtime.pidleput	examples/go/proc.go	/^func pidleput(_p_ *p) {$/;"	f	language:Go
runtime.preemptall	examples/go/proc.go	/^func preemptall() bool {$/;"	f	language:Go
runtime.preemptone	examples/go/proc.go	/^func preemptone(_p_ *p) bool {$/;"	f	language:Go
runtime.procPin	examples/go/proc.go	/^func procPin() int {$/;"	f	language:Go
runtime.procUnpin	examples/go/proc.go	/^func procUnpin() {$/;"	f	language:Go
runtime.procresize	examples/go/proc.go	/^func procresize(nprocs int32) *p {$/;"	f	language:Go
runtime.prof	examples/go/proc.go	/^var prof struct {$/;"	v	language:Go
runtime.randomizeScheduler	examples/go/proc.go	/^const randomizeScheduler = raceenabled$/;"	c	language:Go
runtime.readgstatus	examples/go/proc.go	/^func readgstatus(gp *g) uint32 {$/;"	f	language:Go
runtime.ready	examples/go/proc.go	/^func ready(gp *g, traceskip int) {$/;"	f	language:Go
runtime.reentersyscall	examples/go/proc.go	/^func reentersyscall(pc, sp uintptr) {$/;"	f	language:Go
runtime.releaseSudog	examples/go/proc.go	/^func releaseSudog(s *sudog) {$/;"	f	language:Go
runtime.releasep	examples/go/proc.go	/^func releasep() *p {$/;"	f	language:Go
runtime.resetspinning	examples/go/proc.go	/^func resetspinning() {$/;"	f	language:Go
runtime.restartg	examples/go/proc.go	/^func restartg(gp *g) {$/;"	f	language:Go
runtime.retake	examples/go/proc.go	/^func retake(now int64) uint32 {$/;"	f	language:Go
runtime.runSafePointFn	examples/go/proc.go	/^func runSafePointFn() {$/;"	f	language:Go
runtime.runqempty	examples/go/proc.go	/^func runqempty(_p_ *p) bool {$/;"	f	language:Go
runtime.runqget	examples/go/proc.go	/^func runqget(_p_ *p) (gp *g, inheritTime bool) {$/;"	f	language:Go
runtime.runqgrab	examples/go/proc.go	/^func runqgrab(_p_ *p, batch *[256]guintptr, batchHead uint32, stealRunNextG bool) uint32 {$/;"	f	language:Go
runtime.runqput	examples/go/proc.go	/^func runqput(_p_ *p, gp *g, next bool) {$/;"	f	language:Go
runtime.runqputslow	examples/go/proc.go	/^func runqputslow(_p_ *p, gp *g, h, t uint32) bool {$/;"	f	language:Go
runtime.runqsteal	examples/go/proc.go	/^func runqsteal(_p_, p2 *p, stealRunNextG bool) *g {$/;"	f	language:Go
runtime.runtimeInitTime	examples/go/proc.go	/^var runtimeInitTime int64$/;"	v	language:Go
runtime.runtime_init	examples/go/proc.go	/^func runtime_init()$/;"	f	language:Go
runtime.save	examples/go/proc.go	/^func save(pc, sp uintptr) {$/;"	f	language:Go
runtime.scang	examples/go/proc.go	/^func scang(gp *g) {$/;"	f	language:Go
runtime.schedinit	examples/go/proc.go	/^func schedinit() {$/;"	f	language:Go
runtime.schedtrace	examples/go/proc.go	/^func schedtrace(detailed bool) {$/;"	f	language:Go
runtime.schedule	examples/go/proc.go	/^func schedule() {$/;"	f	language:Go
runtime.setMaxThreads	examples/go/proc.go	/^func setMaxThreads(in int) (out int) {$/;"	f	language:Go
runtime.setcpuprofilerate_m	examples/go/proc.go	/^func setcpuprofilerate_m(hz int32) {$/;"	f	language:Go
runtime.setsSP	examples/go/proc.go	/^func setsSP(pc uintptr) bool {$/;"	f	language:Go
runtime.sigprof	examples/go/proc.go	/^func sigprof(pc, sp, lr uintptr, gp *g, mp *m) {$/;"	f	language:Go
runtime.startTheWorld	examples/go/proc.go	/^func startTheWorld() {$/;"	f	language:Go
runtime.startTheWorldWithSema	examples/go/proc.go	/^func startTheWorldWithSema() {$/;"	f	language:Go
runtime.startlockedm	examples/go/proc.go	/^func startlockedm(gp *g) {$/;"	f	language:Go
runtime.startm	examples/go/proc.go	/^func startm(_p_ *p, spinning bool) {$/;"	f	language:Go
runtime.starttime	examples/go/proc.go	/^var starttime int64$/;"	v	language:Go
runtime.stopTheWorld	examples/go/proc.go	/^func stopTheWorld(reason string) {$/;"	f	language:Go
runtime.stopTheWorldWithSema	examples/go/proc.go	/^func stopTheWorldWithSema() {$/;"	f	language:Go
runtime.stoplockedm	examples/go/proc.go	/^func stoplockedm() {$/;"	f	language:Go
runtime.stopm	examples/go/proc.go	/^func stopm() {$/;"	f	language:Go
runtime.sync_atomic_runtime_procPin	examples/go/proc.go	/^func sync_atomic_runtime_procPin() int {$/;"	f	language:Go
runtime.sync_atomic_runtime_procUnpin	examples/go/proc.go	/^func sync_atomic_runtime_procUnpin() {$/;"	f	language:Go
runtime.sync_runtime_canSpin	examples/go/proc.go	/^func sync_runtime_canSpin(i int) bool {$/;"	f	language:Go
runtime.sync_runtime_doSpin	examples/go/proc.go	/^func sync_runtime_doSpin() {$/;"	f	language:Go
runtime.sync_runtime_procPin	examples/go/proc.go	/^func sync_runtime_procPin() int {$/;"	f	language:Go
runtime.sync_runtime_procUnpin	examples/go/proc.go	/^func sync_runtime_procUnpin() {$/;"	f	language:Go
runtime.syscall_runtime_AfterFork	examples/go/proc.go	/^func syscall_runtime_AfterFork() {$/;"	f	language:Go
runtime.syscall_runtime_BeforeFork	examples/go/proc.go	/^func syscall_runtime_BeforeFork() {$/;"	f	language:Go
runtime.sysmon	examples/go/proc.go	/^func sysmon() {$/;"	f	language:Go
runtime.testSchedLocalQueue	examples/go/proc.go	/^func testSchedLocalQueue() {$/;"	f	language:Go
runtime.testSchedLocalQueueSteal	examples/go/proc.go	/^func testSchedLocalQueueSteal() {$/;"	f	language:Go
runtime.tls	examples/go/proc.go	/^	tls *uint64$/;"	m	language:Go	struct:cgothreadstart
runtime.unlockOSThread	examples/go/proc.go	/^func unlockOSThread() {$/;"	f	language:Go
runtime.unlockextra	examples/go/proc.go	/^func unlockextra(mp *m) {$/;"	f	language:Go
runtime.wakep	examples/go/proc.go	/^func wakep() {$/;"	f	language:Go
runtime.worldsema	examples/go/proc.go	/^var worldsema uint32 = 1$/;"	v	language:Go
runtimeInitTime	examples/go/proc.go	/^var runtimeInitTime int64$/;"	v	language:Go
runtimeSelect	examples/go/value.go	/^type runtimeSelect struct {$/;"	s	language:Go
runtime_init	examples/go/proc.go	/^func runtime_init()$/;"	f	language:Go
save	examples/go/proc.go	/^func save(pc, sp uintptr) {$/;"	f	language:Go
scang	examples/go/proc.go	/^func scang(gp *g) {$/;"	f	language:Go
schedinit	examples/go/proc.go	/^func schedinit() {$/;"	f	language:Go
schedtrace	examples/go/proc.go	/^func schedtrace(detailed bool) {$/;"	f	language:Go
schedule	examples/go/proc.go	/^func schedule() {$/;"	f	language:Go
scopeName	textmate/cpp.tmLanguage.json	/^	"scopeName": "source.cpp",$/;"	s	language:JSON
scopeName	textmate/go.tmLanguage.json	/^	"scopeName": "source.go",$/;"	s	language:JSON
scopeName	textmate/ruby.tmLanguage.json	/^    "scopeName": "source.ruby",$/;"	s	language:JSON
scopeName	textmate/rust.tmLanguage.json	/^	"scopeName": "source.rust",$/;"	s	language:JSON
scopeName	textmate/typescript.tmLanguage.json	/^	"scopeName": "source.ts",$/;"	s	language:JSON
scripts	package.json	/^  "scripts": {$/;"	o	language:JSON
segments	examples/rust/ast.rs	/^    pub segments: Vec<PathSegment>,$/;"	m	language:Rust	struct:Path
send	examples/go/value.go	/^func (v Value) send(x Value, nb bool) (selected bool) {$/;"	f	language:Go
seq	examples/cpp/rule.cc	/^Rule Rule::seq(const vector<Rule> &rules) {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule
set	examples/ruby/classes.rb	/^  def set(v)$/;"	f	language:Ruby	class:Fred
setMaxThreads	examples/go/proc.go	/^func setMaxThreads(in int) (out int) {$/;"	f	language:Go
setRunes	examples/go/value.go	/^func (v Value) setRunes(x []rune) {$/;"	f	language:Go
setcpuprofilerate_m	examples/go/proc.go	/^func setcpuprofilerate_m(hz int32) {$/;"	f	language:Go
setsSP	examples/go/proc.go	/^func setsSP(pc uintptr) bool {$/;"	f	language:Go
sigprof	examples/go/proc.go	/^func sigprof(pc, sp, lr uintptr, gp *g, mp *m) {$/;"	f	language:Go
simpleFoldTests	examples/go/letter_test.go	/^var simpleFoldTests = []string{$/;"	v	language:Go
sliceHeader	examples/go/value.go	/^type sliceHeader struct {$/;"	s	language:Go
sourceMap	tsconfig.json	/^		"sourceMap": true,$/;"	b	language:JSON	object:compilerOptions
spaceTest	examples/go/letter_test.go	/^var spaceTest = []rune{$/;"	v	language:Go
span	examples/rust/ast.rs	/^    pub fn span(&self) -> Span {$/;"	F	language:Rust	implementation:FunctionRetTy
span	examples/rust/ast.rs	/^    pub fn span(&self) -> Span {$/;"	F	language:Rust	implementation:PathParameters
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:AngleBracketedParameterData
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Attribute
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Block
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Crate
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Expr
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Field
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:ForeignItem
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Generics
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:ImplItem
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Item
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Lifetime
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Local
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:MetaItem
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:ParenthesizedParameterData
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Pat
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Path
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:PathSegment
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:PolyTraitRef
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Stmt
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:StructField
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:TraitItem
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:Ty
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:TyParam
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:TypeBinding
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:UseTree
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:WhereBoundPredicate
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:WhereClause
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:WhereEqPredicate
span	examples/rust/ast.rs	/^    pub span: Span,$/;"	m	language:Rust	struct:WhereRegionPredicate
span_for_name	examples/rust/ast.rs	/^    pub fn span_for_name(&self, name: &str) -> Option<Span> {$/;"	F	language:Rust	implementation:Generics
startTheWorld	examples/go/proc.go	/^func startTheWorld() {$/;"	f	language:Go
startTheWorldWithSema	examples/go/proc.go	/^func startTheWorldWithSema() {$/;"	f	language:Go
start_marker_ids	examples/cpp/marker-index.h	/^    flat_set<MarkerId> start_marker_ids;$/;"	m	language:C++	struct:MarkerIndex::Node	typeref:typename:flat_set<MarkerId>
start_nodes_by_id	examples/cpp/marker-index.h	/^  std::unordered_map<MarkerId, Node*> start_nodes_by_id;$/;"	m	language:C++	class:MarkerIndex	typeref:typename:std::unordered_map<MarkerId,Node * >
starting	examples/cpp/marker-index.h	/^    flat_set<MarkerId> starting;$/;"	m	language:C++	struct:MarkerIndex::Boundary	typeref:typename:flat_set<MarkerId>
startlockedm	examples/go/proc.go	/^func startlockedm(gp *g) {$/;"	f	language:Go
startm	examples/go/proc.go	/^func startm(_p_ *p, spinning bool) {$/;"	f	language:Go
starttime	examples/go/proc.go	/^var starttime int64$/;"	v	language:Go
std	examples/cpp/rule.cc	/^namespace std {$/;"	n	language:C++	file:
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<Blank>::operator()(const Blank &blank) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<CharacterSet>::operator()(const CharacterSet &character_set) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<Choice>::operator()(const Choice &choice) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<Metadata>::operator()(const Metadata &metadata) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<NamedSymbol>::operator()(const NamedSymbol &symbol) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<Pattern>::operator()(const Pattern &symbol) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<Repeat>::operator()(const Repeat &repeat) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<Rule>::operator()(const Rule &rule) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<Seq>::operator()(const Seq &seq) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<String>::operator()(const String &symbol) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
std::hash::operator ()	examples/cpp/rule.cc	/^size_t hash<Symbol>::operator()(const Symbol &symbol) const {$/;"	f	language:C++	class:std::hash	typeref:typename:size_t
stmts	examples/rust/ast.rs	/^    pub stmts: Vec<Stmt>,$/;"	m	language:Rust	struct:Block
stopTheWorld	examples/go/proc.go	/^func stopTheWorld(reason string) {$/;"	f	language:Go
stopTheWorldWithSema	examples/go/proc.go	/^func stopTheWorldWithSema() {$/;"	f	language:Go
stoplockedm	examples/go/proc.go	/^func stoplockedm() {$/;"	f	language:Go
stopm	examples/go/proc.go	/^func stopm() {$/;"	f	language:Go
storeRcvr	examples/go/value.go	/^func storeRcvr(v Value, p unsafe.Pointer) {$/;"	f	language:Go
stream	examples/rust/ast.rs	/^    pub fn stream(&self) -> TokenStream {$/;"	F	language:Rust	implementation:Mac_
stream	examples/rust/ast.rs	/^    pub fn stream(&self) -> TokenStream {$/;"	F	language:Rust	implementation:MacroDef
strict	tsconfig.json	/^		"strict": true \/* enable all strict type-checking options *\/$/;"	b	language:JSON	object:compilerOptions
string	textmate/ruby.tmLanguage.json	/^                        "string": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.6.repository
string	textmate/ruby.tmLanguage.json	/^                        "string": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.7.repository
string	textmate/typescript.tmLanguage.json	/^		"string": {$/;"	o	language:JSON	object:repository
string-character-escape	textmate/typescript.tmLanguage.json	/^		"string-character-escape": {$/;"	o	language:JSON	object:repository
stringHeader	examples/go/value.go	/^type stringHeader struct {$/;"	s	language:Go
string_escaped_char	textmate/cpp.tmLanguage.json	/^		"string_escaped_char": {$/;"	o	language:JSON	object:repository
string_escaped_char	textmate/go.tmLanguage.json	/^		"string_escaped_char": {$/;"	o	language:JSON	object:repository
string_placeholder	textmate/cpp.tmLanguage.json	/^		"string_placeholder": {$/;"	o	language:JSON	object:repository
string_placeholder	textmate/go.tmLanguage.json	/^		"string_placeholder": {$/;"	o	language:JSON	object:repository
strings	textmate/cpp.tmLanguage.json	/^		"strings": {$/;"	o	language:JSON	object:repository
style	examples/rust/ast.rs	/^    pub style: AttrStyle,$/;"	m	language:Rust	struct:Attribute
supported	package.json	/^      "supported": true$/;"	b	language:JSON	object:capabilities.untrustedWorkspaces
surround	examples/cpp/marker-index.h	/^    flat_set<MarkerId> surround;$/;"	m	language:C++	struct:MarkerIndex::SpliceResult	typeref:typename:flat_set<MarkerId>
symbol	textmate/ruby.tmLanguage.json	/^                        "symbol": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.0.repository
symbol	textmate/ruby.tmLanguage.json	/^                        "symbol": {$/;"	o	language:JSON	object:repository.percent_literals.patterns.1.repository
sync_atomic_runtime_procPin	examples/go/proc.go	/^func sync_atomic_runtime_procPin() int {$/;"	f	language:Go
sync_atomic_runtime_procUnpin	examples/go/proc.go	/^func sync_atomic_runtime_procUnpin() {$/;"	f	language:Go
sync_runtime_canSpin	examples/go/proc.go	/^func sync_runtime_canSpin(i int) bool {$/;"	f	language:Go
sync_runtime_doSpin	examples/go/proc.go	/^func sync_runtime_doSpin() {$/;"	f	language:Go
sync_runtime_procPin	examples/go/proc.go	/^func sync_runtime_procPin() int {$/;"	f	language:Go
sync_runtime_procUnpin	examples/go/proc.go	/^func sync_runtime_procUnpin() {$/;"	f	language:Go
syscall_runtime_AfterFork	examples/go/proc.go	/^func syscall_runtime_AfterFork() {$/;"	f	language:Go
syscall_runtime_BeforeFork	examples/go/proc.go	/^func syscall_runtime_BeforeFork() {$/;"	f	language:Go
sysmon	examples/go/proc.go	/^func sysmon() {$/;"	f	language:Go
tar	package.json	/^    "tar": ">=4.4.2",$/;"	s	language:JSON	object:dependencies
target	tsconfig.json	/^		"target": "es6",$/;"	s	language:JSON	object:compilerOptions
template	textmate/typescript.tmLanguage.json	/^		"template": {$/;"	o	language:JSON	object:repository
template-substitution-element	textmate/typescript.tmLanguage.json	/^		"template-substitution-element": {$/;"	o	language:JSON	object:repository
test	package.json	/^    "test": "npm run compile && node .\/out\/test",$/;"	s	language:JSON	object:scripts
testSchedLocalQueue	examples/go/proc.go	/^func testSchedLocalQueue() {$/;"	f	language:Go
testSchedLocalQueueSteal	examples/go/proc.go	/^func testSchedLocalQueueSteal() {$/;"	f	language:Go
tests	examples/rust/ast.rs	/^mod tests {$/;"	n	language:Rust
thing	examples/javascript/statements.js	/^var thing = {$/;"	c	language:JavaScript
three	examples/javascript/expressions.js	/^  three(c) { return c; }$/;"	m	language:JavaScript	class:Foo
tls	examples/go/proc.go	/^	tls *uint64$/;"	m	language:Go	struct:cgothreadstart
to_bound	examples/rust/ast.rs	/^    fn to_bound(&self) -> Option<TyParamBound> {$/;"	F	language:Rust	implementation:Expr
to_self	examples/rust/ast.rs	/^    pub fn to_self(&self) -> Option<ExplicitSelf> {$/;"	F	language:Rust	implementation:Arg
to_string	examples/rust/ast.rs	/^    pub fn to_string(&self) -> &'static str {$/;"	F	language:Rust	implementation:BinOpKind
to_string	examples/rust/ast.rs	/^    pub fn to_string(op: UnOp) -> &'static str {$/;"	F	language:Rust	implementation:UnOp
to_ty	examples/rust/ast.rs	/^    pub(super) fn to_ty(&self) -> Option<P<Ty>> {$/;"	F	language:Rust	implementation:Expr
to_ty	examples/rust/ast.rs	/^    pub(super) fn to_ty(&self) -> Option<P<Ty>> {$/;"	F	language:Rust	implementation:Pat
tokens	examples/rust/ast.rs	/^    pub tokens: Option<TokenStream>,$/;"	m	language:Rust	struct:ImplItem
tokens	examples/rust/ast.rs	/^    pub tokens: Option<TokenStream>,$/;"	m	language:Rust	struct:Item
tokens	examples/rust/ast.rs	/^    pub tokens: Option<TokenStream>,$/;"	m	language:Rust	struct:TraitItem
tokens	examples/rust/ast.rs	/^    pub tokens: ThinTokenStream,$/;"	m	language:Rust	struct:MacroDef
tokens	examples/rust/ast.rs	/^    pub tokens: TokenStream,$/;"	m	language:Rust	struct:Attribute
touch	examples/cpp/marker-index.h	/^    flat_set<MarkerId> touch;$/;"	m	language:C++	struct:MarkerIndex::SpliceResult	typeref:typename:flat_set<MarkerId>
trait_ref	examples/rust/ast.rs	/^    pub trait_ref: TraitRef,$/;"	m	language:Rust	struct:PolyTraitRef
tree-sitter-agda	package.json	/^    "tree-sitter-agda": "github:pokey\/tree-sitter-agda#e5fba6cabe8c7fc7993ced2b86704f3841215284/;"	s	language:JSON	object:devDependencies
tree-sitter-bash	package.json	/^    "tree-sitter-bash": "^0.19.0",$/;"	s	language:JSON	object:devDependencies
tree-sitter-c	package.json	/^    "tree-sitter-c": "^0.19.0",$/;"	s	language:JSON	object:devDependencies
tree-sitter-c-sharp	package.json	/^    "tree-sitter-c-sharp": "^0.19.0",$/;"	s	language:JSON	object:devDependencies
tree-sitter-cli	package.json	/^    "tree-sitter-cli": "^0.20.1",$/;"	s	language:JSON	object:devDependencies
tree-sitter-clojure	package.json	/^    "tree-sitter-clojure": "github:sogaiu\/tree-sitter-clojure#master",$/;"	s	language:JSON	object:devDependencies
tree-sitter-cpp	package.json	/^    "tree-sitter-cpp": "^0.19.0",$/;"	s	language:JSON	object:devDependencies
tree-sitter-css	package.json	/^    "tree-sitter-css": "^0.19.0",$/;"	s	language:JSON	object:devDependencies
tree-sitter-elixir	package.json	/^    "tree-sitter-elixir": "github:elixir-lang\/tree-sitter-elixir#b20eaa75565243c50be5e35e253d8b/;"	s	language:JSON	object:devDependencies
tree-sitter-go	package.json	/^    "tree-sitter-go": "^0.19.0",$/;"	s	language:JSON	object:devDependencies
tree-sitter-haskell	package.json	/^    "tree-sitter-haskell": "github:tree-sitter\/tree-sitter-haskell#d6ccd2d9c40bdec29fee0027ef04/;"	s	language:JSON	object:devDependencies
tree-sitter-html	package.json	/^    "tree-sitter-html": "^0.19.0",$/;"	s	language:JSON	object:devDependencies
tree-sitter-java	package.json	/^    "tree-sitter-java": "github:tree-sitter\/tree-sitter-java#ac14b4b1884102839455d32543ab6d53ae/;"	s	language:JSON	object:devDependencies
tree-sitter-javascript	package.json	/^    "tree-sitter-javascript": "github:tree-sitter\/tree-sitter-javascript#936d976a782e75395d9b1c/;"	s	language:JSON	object:devDependencies
tree-sitter-json	package.json	/^    "tree-sitter-json": "^0.19.0",$/;"	s	language:JSON	object:devDependencies
tree-sitter-kotlin	package.json	/^    "tree-sitter-kotlin": "github:fwcd\/tree-sitter-kotlin#a4f71eb9b8c9b19ded3e0e9470be4b1b77c2b/;"	s	language:JSON	object:devDependencies
tree-sitter-latex	package.json	/^    "tree-sitter-latex": "github:latex-lsp\/tree-sitter-latex#1666e9780de42a31b1376d32fbe8332e8d/;"	s	language:JSON	object:devDependencies
tree-sitter-markdown	package.json	/^    "tree-sitter-markdown": "github:MDeiml\/tree-sitter-markdown#272e080bca0efd19a06a7f4252d7464/;"	s	language:JSON	object:devDependencies
tree-sitter-php	package.json	/^    "tree-sitter-php": "github:tree-sitter\/tree-sitter-php#0ce134234214427b6aeb2735e93a307881c6/;"	s	language:JSON	object:devDependencies
tree-sitter-python	package.json	/^    "tree-sitter-python": "github:tree-sitter\/tree-sitter-python#de221eccf9a221f5b85474a553474a/;"	s	language:JSON	object:devDependencies
tree-sitter-query	package.json	/^    "tree-sitter-query": "github:nvim-treesitter\/tree-sitter-query#5217c6805c09f8fc00ed13d17d5f/;"	s	language:JSON	object:devDependencies
tree-sitter-ruby	package.json	/^    "tree-sitter-ruby": "github:tree-sitter\/tree-sitter-ruby#1ebfdb288842dae5a9233e2509a1359490/;"	s	language:JSON	object:devDependencies
tree-sitter-rust	package.json	/^    "tree-sitter-rust": "github:tree-sitter\/tree-sitter-rust#36ae187ed6dd3803a8a89dbb54f3124c8e/;"	s	language:JSON	object:devDependencies
tree-sitter-scala	package.json	/^    "tree-sitter-scala": "github:tree-sitter\/tree-sitter-scala#master",$/;"	s	language:JSON	object:devDependencies
tree-sitter-scss	package.json	/^    "tree-sitter-scss": "github:serenadeai\/tree-sitter-scss#c478c6868648eff49eb04a4df90d703dc45/;"	s	language:JSON	object:devDependencies
tree-sitter-sparql	package.json	/^    "tree-sitter-sparql": "^0.1.0",$/;"	s	language:JSON	object:devDependencies
tree-sitter-talon	package.json	/^    "tree-sitter-talon": "github:wenkokke\/tree-sitter-talon#0abecabd89f080715319b3111f8bfccbd52/;"	s	language:JSON	object:devDependencies
tree-sitter-typescript	package.json	/^    "tree-sitter-typescript": "github:tree-sitter\/tree-sitter-typescript#082da44a5263599186dada/;"	s	language:JSON	object:devDependencies
tree-sitter-yaml	package.json	/^    "tree-sitter-yaml": "^0.5.0",$/;"	s	language:JSON	object:devDependencies
tree_sitter	examples/cpp/rule.cc	/^namespace tree_sitter {$/;"	n	language:C++	file:
tree_sitter::rules	examples/cpp/rule.cc	/^namespace rules {$/;"	n	language:C++	namespace:tree_sitter	file:
tree_sitter::rules::Rule::Rule	examples/cpp/rule.cc	/^Rule::Rule(Rule &&other) noexcept : blank_(Blank{}), type(BlankType) {$/;"	f	language:C++	class:tree_sitter::rules::Rule
tree_sitter::rules::Rule::Rule	examples/cpp/rule.cc	/^Rule::Rule(const Rule &other) : blank_(Blank{}), type(BlankType) {$/;"	f	language:C++	class:tree_sitter::rules::Rule
tree_sitter::rules::Rule::choice	examples/cpp/rule.cc	/^Rule Rule::choice(const vector<Rule> &rules) {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule
tree_sitter::rules::Rule::get_unchecked	examples/cpp/rule.cc	/^const Symbol & Rule::get_unchecked<Symbol>() const { return symbol_; }$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:const Symbol &
tree_sitter::rules::Rule::is	examples/cpp/rule.cc	/^bool Rule::is<Blank>() const { return type == BlankType; }$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:bool
tree_sitter::rules::Rule::is	examples/cpp/rule.cc	/^bool Rule::is<Repeat>() const { return type == RepeatType; }$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:bool
tree_sitter::rules::Rule::is	examples/cpp/rule.cc	/^bool Rule::is<Symbol>() const { return type == SymbolType; }$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:bool
tree_sitter::rules::Rule::operator =	examples/cpp/rule.cc	/^Rule &Rule::operator=(Rule &&other) noexcept {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule &
tree_sitter::rules::Rule::operator =	examples/cpp/rule.cc	/^Rule &Rule::operator=(const Rule &other) {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule &
tree_sitter::rules::Rule::operator ==	examples/cpp/rule.cc	/^bool Rule::operator==(const Rule &other) const {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:bool
tree_sitter::rules::Rule::repeat	examples/cpp/rule.cc	/^Rule Rule::repeat(const Rule &rule) {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule
tree_sitter::rules::Rule::seq	examples/cpp/rule.cc	/^Rule Rule::seq(const vector<Rule> &rules) {$/;"	f	language:C++	class:tree_sitter::rules::Rule	typeref:typename:Rule
tree_sitter::rules::Rule::~Rule	examples/cpp/rule.cc	/^Rule::~Rule() noexcept {$/;"	f	language:C++	class:tree_sitter::rules::Rule
tree_sitter::rules::add_choice_element	examples/cpp/rule.cc	/^static inline void add_choice_element(std::vector<Rule> *elements, const Rule &new_rule) {$/;"	f	language:C++	namespace:tree_sitter::rules	typeref:typename:void	file:
tree_sitter::rules::destroy_value	examples/cpp/rule.cc	/^static void destroy_value(Rule *rule) {$/;"	f	language:C++	namespace:tree_sitter::rules	typeref:typename:void	file:
tslint	package.json	/^    "tslint": "^6.0.0",$/;"	s	language:JSON	object:devDependencies
tts	examples/rust/ast.rs	/^    pub tts: ThinTokenStream,$/;"	m	language:Rust	struct:Mac_
two	examples/javascript/expressions.js	/^  two(b) { return b; }$/;"	m	language:JavaScript	class:Foo
ty	examples/rust/ast.rs	/^    pub ty: Option<P<Ty>>,$/;"	m	language:Rust	struct:Local
ty	examples/rust/ast.rs	/^    pub ty: P<Ty>,$/;"	m	language:Rust	struct:Arg
ty	examples/rust/ast.rs	/^    pub ty: P<Ty>,$/;"	m	language:Rust	struct:MutTy
ty	examples/rust/ast.rs	/^    pub ty: P<Ty>,$/;"	m	language:Rust	struct:QSelf
ty	examples/rust/ast.rs	/^    pub ty: P<Ty>,$/;"	m	language:Rust	struct:StructField
ty	examples/rust/ast.rs	/^    pub ty: P<Ty>,$/;"	m	language:Rust	struct:TypeBinding
ty_to_string	examples/rust/ast.rs	/^    pub fn ty_to_string(&self) -> &'static str {$/;"	F	language:Rust	implementation:FloatTy
ty_to_string	examples/rust/ast.rs	/^    pub fn ty_to_string(&self) -> &'static str {$/;"	F	language:Rust	implementation:IntTy
ty_to_string	examples/rust/ast.rs	/^    pub fn ty_to_string(&self) -> &'static str {$/;"	F	language:Rust	implementation:UintTy
typ	examples/go/value.go	/^	typ  *rtype$/;"	m	language:Go	struct:emptyInterface
typ	examples/go/value.go	/^	typ *rtype         \/\/ channel type$/;"	m	language:Go	struct:runtimeSelect
typ	examples/go/value.go	/^	typ *rtype$/;"	m	language:Go	struct:Value
type	package.json	/^    "type": "git",$/;"	s	language:JSON	object:repository
typedmemmove	examples/go/value.go	/^func typedmemmove(t *rtype, dst, src unsafe.Pointer)$/;"	f	language:Go
typedmemmovepartial	examples/go/value.go	/^func typedmemmovepartial(t *rtype, dst, src unsafe.Pointer, off, size uintptr)$/;"	f	language:Go
typedslicecopy	examples/go/value.go	/^func typedslicecopy(elemType *rtype, dst, src sliceHeader) int$/;"	f	language:Go
types	examples/rust/ast.rs	/^    pub types: Vec<P<Ty>>,$/;"	m	language:Rust	struct:AngleBracketedParameterData
typesMustMatch	examples/go/value.go	/^func typesMustMatch(what string, t1, t2 Type) {$/;"	f	language:Go
typescript	package.json	/^    "typescript": "^4.5.5",$/;"	s	language:JSON	object:devDependencies
uint8Type	examples/go/value.go	/^var uint8Type = TypeOf(uint8(0)).(*rtype)$/;"	v	language:Go
unicode_test	examples/go/letter_test.go	/^package unicode_test$/;"	p	language:Go
unicode_test.TestCalibrate	examples/go/letter_test.go	/^func TestCalibrate(t *testing.T) {$/;"	f	language:Go
unicode_test.TestIsLetter	examples/go/letter_test.go	/^func TestIsLetter(t *testing.T) {$/;"	f	language:Go
unicode_test.TestIsSpace	examples/go/letter_test.go	/^func TestIsSpace(t *testing.T) {$/;"	f	language:Go
unicode_test.TestIsUpper	examples/go/letter_test.go	/^func TestIsUpper(t *testing.T) {$/;"	f	language:Go
unicode_test.TestLatinOffset	examples/go/letter_test.go	/^func TestLatinOffset(t *testing.T) {$/;"	f	language:Go
unicode_test.TestLetterOptimizations	examples/go/letter_test.go	/^func TestLetterOptimizations(t *testing.T) {$/;"	f	language:Go
unicode_test.TestSimpleFold	examples/go/letter_test.go	/^func TestSimpleFold(t *testing.T) {$/;"	f	language:Go
unicode_test.TestTo	examples/go/letter_test.go	/^func TestTo(t *testing.T) {$/;"	f	language:Go
unicode_test.TestToLowerCase	examples/go/letter_test.go	/^func TestToLowerCase(t *testing.T) {$/;"	f	language:Go
unicode_test.TestToTitleCase	examples/go/letter_test.go	/^func TestToTitleCase(t *testing.T) {$/;"	f	language:Go
unicode_test.TestToUpperCase	examples/go/letter_test.go	/^func TestToUpperCase(t *testing.T) {$/;"	f	language:Go
unicode_test.TestTurkishCase	examples/go/letter_test.go	/^func TestTurkishCase(t *testing.T) {$/;"	f	language:Go
unicode_test.binary	examples/go/letter_test.go	/^func binary(ranges []Range16, r uint16) bool {$/;"	f	language:Go
unicode_test.calibrate	examples/go/letter_test.go	/^var calibrate = flag.Bool("calibrate", false, "compute crossover for linear vs. binary search")$/;"	v	language:Go
unicode_test.cas	examples/go/letter_test.go	/^	cas     int$/;"	m	language:Go	struct:caseT
unicode_test.caseString	examples/go/letter_test.go	/^func caseString(c int) string {$/;"	f	language:Go
unicode_test.caseT	examples/go/letter_test.go	/^type caseT struct {$/;"	s	language:Go
unicode_test.caseTest	examples/go/letter_test.go	/^var caseTest = []caseT{$/;"	v	language:Go
unicode_test.fakeTable	examples/go/letter_test.go	/^func fakeTable(n int) []Range16 {$/;"	f	language:Go
unicode_test.in	examples/go/letter_test.go	/^	in, out rune$/;"	m	language:Go	struct:caseT
unicode_test.letterTest	examples/go/letter_test.go	/^var letterTest = []rune{$/;"	v	language:Go
unicode_test.linear	examples/go/letter_test.go	/^func linear(ranges []Range16, r uint16) bool {$/;"	f	language:Go
unicode_test.notletterTest	examples/go/letter_test.go	/^var notletterTest = []rune{$/;"	v	language:Go
unicode_test.notupperTest	examples/go/letter_test.go	/^var notupperTest = []rune{$/;"	v	language:Go
unicode_test.out	examples/go/letter_test.go	/^	in, out rune$/;"	m	language:Go	struct:caseT
unicode_test.simpleFoldTests	examples/go/letter_test.go	/^var simpleFoldTests = []string{$/;"	v	language:Go
unicode_test.spaceTest	examples/go/letter_test.go	/^var spaceTest = []rune{$/;"	v	language:Go
unicode_test.upperTest	examples/go/letter_test.go	/^var upperTest = []rune{$/;"	v	language:Go
unlockOSThread	examples/go/proc.go	/^func unlockOSThread() {$/;"	f	language:Go
unlockextra	examples/go/proc.go	/^func unlockextra(mp *m) {$/;"	f	language:Go
unpackEface	examples/go/value.go	/^func unpackEface(i interface{}) Value {$/;"	f	language:Go
unsafe_New	examples/go/value.go	/^func unsafe_New(*rtype) unsafe.Pointer$/;"	f	language:Go
unsafe_NewArray	examples/go/value.go	/^func unsafe_NewArray(*rtype, int) unsafe.Pointer$/;"	f	language:Go
unsafety	examples/rust/ast.rs	/^    pub unsafety: Unsafety,$/;"	m	language:Rust	struct:BareFnTy
unsafety	examples/rust/ast.rs	/^    pub unsafety: Unsafety,$/;"	m	language:Rust	struct:MethodSig
untrustedWorkspaces	package.json	/^    "untrustedWorkspaces": {$/;"	o	language:JSON	object:capabilities
upperTest	examples/go/letter_test.go	/^var upperTest = []rune{$/;"	v	language:Go
url	package.json	/^    "url": "https:\/\/github.com\/pokey\/vscode-parse-tree"$/;"	s	language:JSON	object:repository
val	examples/go/value.go	/^	val unsafe.Pointer \/\/ ptr to data (SendDir) or ptr to receive buffer (RecvDir)$/;"	m	language:Go	struct:runtimeSelect
val_to_string	examples/rust/ast.rs	/^    pub fn val_to_string(&self, val: i128) -> String {$/;"	F	language:Rust	implementation:IntTy
val_to_string	examples/rust/ast.rs	/^    pub fn val_to_string(&self, val: u128) -> String {$/;"	F	language:Rust	implementation:UintTy
valueInterface	examples/go/value.go	/^func valueInterface(v Value, safe bool) interface{} {$/;"	f	language:Go
variadic	examples/rust/ast.rs	/^    pub variadic: bool$/;"	m	language:Rust	struct:FnDecl
variants	examples/rust/ast.rs	/^    pub variants: Vec<Variant>,$/;"	m	language:Rust	struct:EnumDef
version	package.json	/^  "version": "0.24.0",$/;"	s	language:JSON
version	textmate/cpp.tmLanguage.json	/^	"version": "https:\/\/github.com\/atom\/language-c\/commit\/3a269f88b12e512fb9495dc006a1dabf325/;"	s	language:JSON
version	textmate/go.tmLanguage.json	/^	"version": "https:\/\/github.com\/atom\/language-go\/commit\/b6fd68f74efa109679e31fe6f4a41ac105/;"	s	language:JSON
version	textmate/rust.tmLanguage.json	/^	"version": "https:\/\/github.com\/zargony\/atom-language-rust\/commit\/5238d9834953ed7c58d9b5b9/;"	s	language:JSON
vis	examples/rust/ast.rs	/^    pub vis: Visibility,$/;"	m	language:Rust	struct:ForeignItem
vis	examples/rust/ast.rs	/^    pub vis: Visibility,$/;"	m	language:Rust	struct:ImplItem
vis	examples/rust/ast.rs	/^    pub vis: Visibility,$/;"	m	language:Rust	struct:Item
vis	examples/rust/ast.rs	/^    pub vis: Visibility,$/;"	m	language:Rust	struct:StructField
volatile	examples/rust/ast.rs	/^    pub volatile: bool,$/;"	m	language:Rust	struct:InlineAsm
vscode	package.json	/^    "vscode": "^1.58.0"$/;"	s	language:JSON	object:engines
vscode:prepublish	package.json	/^    "vscode:prepublish": "npm run compile",$/;"	s	language:JSON	object:scripts
wakep	examples/go/proc.go	/^func wakep() {$/;"	f	language:Go
walk	examples/rust/ast.rs	/^    pub fn walk<F>(&self, it: &mut F) -> bool$/;"	F	language:Rust	implementation:Pat
watch	package.json	/^    "watch": "tsc -watch -p .\/",$/;"	s	language:JSON	object:scripts
web-tree-sitter	Makefile	/^web-tree-sitter: $(addprefix $(WEB_TREE_SITTER_DIR)\/,$(WEB_TREE_SITTER_FILES)) \\$/;"	t	language:Make
web-tree-sitter	package.json	/^    "web-tree-sitter": "file:vendor\/web-tree-sitter\/0.20.4"$/;"	s	language:JSON	object:dependencies
where_clause	examples/rust/ast.rs	/^    pub where_clause: WhereClause,$/;"	m	language:Rust	struct:Generics
word	examples/go/value.go	/^	word unsafe.Pointer$/;"	m	language:Go	struct:emptyInterface
word	examples/go/value.go	/^	word unsafe.Pointer$/;"	m	language:Go	struct:nonEmptyInterface
worldsema	examples/go/proc.go	/^var worldsema uint32 = 1$/;"	v	language:Go
x	examples/javascript/expressions.js	/^var x = function(x, y) {$/;"	f	language:JavaScript
x	examples/javascript/expressions.js	/^var x = { a: "b" };$/;"	c	language:JavaScript
x	examples/javascript/expressions.js	/^var x = { c: "d", "e": f, 1: 2 };$/;"	c	language:JavaScript
x	examples/javascript/expressions.js	/^var x = {$/;"	c	language:JavaScript
x	examples/javascript/expressions.js	/^var x = {$/;"	v	language:JavaScript
x	examples/javascript/literals.js	/^var x = { 県: '大阪府', '': '' }$/;"	v	language:JavaScript
x	examples/javascript/statements.js	/^var x = 1;$/;"	v	language:JavaScript
x	examples/javascript/statements.js	/^var x = {$/;"	c	language:JavaScript
x	examples/javascript/statements.js	/^var x, y = {}, z;$/;"	v	language:JavaScript
x_to_string	examples/ruby/classes.rb	/^def x_to_string$/;"	f	language:Ruby
y	examples/javascript/statements.js	/^var x, y = {}, z;$/;"	v	language:JavaScript
~Rule	examples/cpp/rule.cc	/^Rule::~Rule() noexcept {$/;"	f	language:C++	class:tree_sitter::rules::Rule
