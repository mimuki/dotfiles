{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Ruby",
    "scopeName": "source.ruby",
    "patterns": [
        {
            "match": "\\b(__ENCODING__|__LINE__|__FILE__|alias|and|class|def|module|not|or|self|super|undef)\\b",
            "name": "keyword.other.ruby"
        },
        {
            "match": "\\b(BEGIN|END|begin|break|case|do|else|elsif|ensure|for|if|in|next|redo|rescue|retry|return|then|unless|until|when|while|yield)\\b",
            "name": "keyword.control.ruby"
        },
        {
            "match": "\\bdefined[?]",
            "name": "keyword.control.ruby"
        },
        {
            "comment": "These aren't actual keywords, but they're builtin methods that basically function as keywords",
            "match": "\\b(new|loop|raise|fail|catch|throw)\\b",
            "name": "keyword.control.special-method.ruby"
        },
        {
            "comment": "These aren't actual keywords, but they're builtin methods that basically function as keywords",
            "match": "\\b(refine|using)\\b(?![?!])",
            "name": "keyword.other.special-method.ruby"
        },
        {
            "match": "\\b(false|nil|true)\\b",
            "name": "constant.numeric.language.ruby"
        },
        {
            "match":
                "\\b\\d(?>_?\\d)*(?=\\.\\d|[eE])(\\.\\d(?>_?\\d)*)?([eE][-+]?\\d(?>_?\\d)*)?r?i?\\b",
            "name": "constant.numeric.float.ruby"
        },
        {
            "match": "\\b(0|(0[dD]\\d|[1-9])(?>_?\\d)*)r?i?\\b",
            "name": "constant.numeric.integer.ruby"
        },
        {
            "match": "\\b0[xX]\\h(?>_?\\h)*r?i?\\b",
            "name": "constant.numeric.hex.ruby"
        },
        {
            "match": "\\b0[bB][01](?>_?[01])*r?i?\\b",
            "name": "constant.numeric.binary.ruby"
        },
        {
            "match": "\\b0([oO]?[0-7](?>_?[0-7])*)?r?i?\\b",
            "name": "constant.numeric.octal.ruby"
        },
        {
            "comment": "Needs higher precidence than regular expressions.",
            "match": "(?<!\\()/=",
            "name": "keyword.operator.assignment.augmented.ruby"
        },
        {
            "begin": "'",
            "comment": "single quoted string (does not allow interpolation)",
            "end": "'",
            "name": "string.quoted.single.ruby",
            "patterns": [
                {
                    "match": "\\\\'|\\\\\\\\",
                    "name": "constant.character.escape.ruby"
                }
            ]
        },
        {
            "begin": "\"",
            "comment": "double quoted string (allows for interpolation)",
            "end": "\"",
            "name": "string.quoted.double.ruby",
            "patterns": [
                {
                    "include": "#interpolated_ruby"
                },
                {
                    "include": "#escaped_char"
                }
            ]
        },
        {
            "begin": "`",
            "comment": "execute string (allows for interpolation)",
            "end": "`",
            "name": "string.interpolated.ruby",
            "patterns": [
                {
                    "include": "#interpolated_ruby"
                },
                {
                    "include": "#escaped_char"
                }
            ]
        },
        {
            "include": "#percent_literals"
        },
        {
            "begin":
                "(?x)\n\t\t\t   (?:\n\t\t\t     ^                      # beginning of line\n\t\t\t   | (?<=                   # or look-behind on:\n\t\t\t       [=>~(?:\\[,|&;]\n\t\t\t     | [\\s;]if\\s\t\t\t# keywords\n\t\t\t     | [\\s;]elsif\\s\n\t\t\t     | [\\s;]while\\s\n\t\t\t     | [\\s;]unless\\s\n\t\t\t     | [\\s;]when\\s\n\t\t\t     | [\\s;]assert_match\\s\n\t\t\t     | [\\s;]or\\s\t\t\t# boolean opperators\n\t\t\t     | [\\s;]and\\s\n\t\t\t     | [\\s;]not\\s\n\t\t\t     | [\\s.]index\\s\t\t\t# methods\n\t\t\t     | [\\s.]scan\\s\n\t\t\t     | [\\s.]sub\\s\n\t\t\t     | [\\s.]sub!\\s\n\t\t\t     | [\\s.]gsub\\s\n\t\t\t     | [\\s.]gsub!\\s\n\t\t\t     | [\\s.]match\\s\n\t\t\t     )\n\t\t\t   | (?<=                  # or a look-behind with line anchor:\n\t\t\t        ^when\\s            # duplication necessary due to limits of regex\n\t\t\t      | ^if\\s\n\t\t\t      | ^elsif\\s\n\t\t\t      | ^while\\s\n\t\t\t      | ^unless\\s\n\t\t\t      )\n\t\t\t   )\n\t\t\t   \\s*((/))(?![*+{}?])\n\t\t\t",
            "captures": {
                "1": {
                    "name": "string.regexp.classic.ruby"
                }
            },
            "comment":
                "regular expressions (normal)\n\t\t\twe only start a regexp if the character before it (excluding whitespace)\n\t\t\tis what we think is before a regexp\n\t\t\t",
            "contentName": "string.regexp.classic.ruby",
            "end": "((/[eimnosux]*))",
            "patterns": [
                {
                    "include": "#regex_sub"
                }
            ]
        },
        {
            "begin": "^=begin",
            "comment": "multiline comments",
            "end": "^=end",
            "name": "comment.block.documentation.ruby"
        },
        {
            "begin": "(^[ \\t]+)?(?=#)",
            "beginCaptures": {
                "1": {
                    "name": "punctuation.whitespace.comment.leading.ruby"
                }
            },
            "end": "(?!\\G)",
            "patterns": [
                {
                    "begin": "#",
                    "end": "\\n",
                    "name": "comment.line.number-sign.ruby"
                }
            ]
        },
        {
            "comment":
                "\n\t\t\tmatches questionmark-letters.\n\n\t\t\texamples (1st alternation = hex):\n\t\t\t?\\x1     ?\\x61\n\n\t\t\texamples (2nd alternation = octal):\n\t\t\t?\\0      ?\\07     ?\\017\n\n\t\t\texamples (3rd alternation = escaped):\n\t\t\t?\\n      ?\\b\n\n\t\t\texamples (4th alternation = meta-ctrl):\n\t\t\t?\\C-a    ?\\M-a    ?\\C-\\M-\\C-\\M-a\n\n\t\t\texamples (4th alternation = normal):\n\t\t\t?a       ?A       ?0 \n\t\t\t?*       ?\"       ?( \n\t\t\t?.       ?#\n\t\t\t\n\t\t\t\n\t\t\tthe negative lookbehind prevents against matching\n\t\t\tp(42.tainted?)\n\t\t\t",
            "match":
                "(?<!\\w)\\?(\\\\(x\\h{1,2}(?!\\h)\\b|0[0-7]{0,2}(?![0-7])\\b|[^x0MC])|(\\\\[MC]-)+\\w|[^\\s\\\\])",
            "name": "constant.numeric.ruby"
        },
        {
            "begin": "^__END__\\n",
            "captures": {
                "0": {
                    "name": "string.unquoted.program-block.ruby"
                }
            },
            "comment": "__END__ marker",
            "contentName": "text.plain",
            "end": "(?=not)impossible",
            "patterns": [
                {
                    "begin": "(?=<?xml|<(?i:html\\b)|!DOCTYPE (?i:html\\b))",
                    "end": "(?=not)impossible",
                    "name": "text.html.embedded.ruby",
                    "patterns": [
                        {
                            "include": "text.html.basic"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)HTML)\\b\\1))",
            "comment": "Heredoc with embedded html",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.html",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)HTML)\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "text.html",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "text.html.basic"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)XML)\\b\\1))",
            "comment": "Heredoc with embedded xml",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.xml",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)XML)\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "text.xml",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "text.xml"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)SQL)\\b\\1))",
            "comment": "Heredoc with embedded sql",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.sql",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)SQL)\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "source.sql",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "source.sql"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)CSS)\\b\\1))",
            "comment": "Heredoc with embedded css",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.css",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)CSS)\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "source.css",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "source.css"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)CPP)\\b\\1))",
            "comment": "Heredoc with embedded c++",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.c++",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)CPP)\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "source.c++",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "source.c++"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)C)\\b\\1))",
            "comment": "Heredoc with embedded c",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.c",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)C)\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "source.c",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "source.c"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)(?:JS|JAVASCRIPT))\\b\\1))",
            "comment": "Heredoc with embedded javascript",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.js",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)(?:JS|JAVASCRIPT))\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "source.js",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "source.js"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)JQUERY)\\b\\1))",
            "comment": "Heredoc with embedded jQuery javascript",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.js.jquery",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)JQUERY)\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "source.js.jquery",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "source.js.jquery"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)(?:SH|SHELL))\\b\\1))",
            "comment": "Heredoc with embedded shell",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.shell",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)(?:SH|SHELL))\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "source.shell",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "source.shell"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)LUA)\\b\\1))",
            "comment": "Heredoc with embedded lua",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.lua",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)LUA)\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "source.lua",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "source.lua"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?=(?><<[-~](\"?)((?:[_\\w]+_|)RUBY)\\b\\1))",
            "comment": "Heredoc with embedded ruby",
            "end": "(?!\\G)",
            "name": "meta.embedded.block.ruby",
            "patterns": [
                {
                    "begin": "(?><<[-~](\"?)((?:[_\\w]+_|)RUBY)\\b\\1)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "contentName": "source.ruby",
                    "end": "\\s*\\2$\\n?",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.unquoted.heredoc.ruby",
                    "patterns": [
                        {
                            "include": "#heredoc"
                        },
                        {
                            "include": "#interpolated_ruby"
                        },
                        {
                            "include": "source.ruby"
                        },
                        {
                            "include": "#escaped_char"
                        }
                    ]
                }
            ]
        },
        {
            "begin": "(?>=\\s*<<(\\w+))",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.ruby"
                }
            },
            "end": "^\\1$",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.ruby"
                }
            },
            "name": "string.unquoted.heredoc.ruby",
            "patterns": [
                {
                    "include": "#heredoc"
                },
                {
                    "include": "#interpolated_ruby"
                },
                {
                    "include": "#escaped_char"
                }
            ]
        },
        {
            "begin": "(?><<[-~](\\w+))",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.definition.string.begin.ruby"
                }
            },
            "comment": "heredoc with indented terminator",
            "end": "\\s*\\1$",
            "endCaptures": {
                "0": {
                    "name": "punctuation.definition.string.end.ruby"
                }
            },
            "name": "string.unquoted.heredoc.ruby",
            "patterns": [
                {
                    "include": "#heredoc"
                },
                {
                    "include": "#interpolated_ruby"
                },
                {
                    "include": "#escaped_char"
                }
            ]
        },
        {
            "begin": "(?<=\\{|do|\\{\\s|do\\s)(\\|)",
            "captures": {
                "1": {
                    "name": "punctuation.separator.arguments.ruby"
                }
            },
            "end": "(?<!\\|)(\\|)(?!\\|)",
            "patterns": [
                {
                    "include": "$self"
                },
                {
                    "match": "[_a-zA-Z][_a-zA-Z0-9]*",
                    "name": "variable.other.block.ruby"
                },
                {
                    "match": ",",
                    "name": "punctuation.separator.variable.ruby"
                }
            ]
        },
        {
            "match": "=>",
            "name": "punctuation.separator.key-value"
        },
        {
            "match": "->",
            "name": "support.function.kernel.lambda.ruby"
        },
        {
            "match": "<<=|%=|&{1,2}=|\\*=|\\*\\*=|\\+=|-=|\\^=|\\|{1,2}=|<<",
            "name": "keyword.operator.assignment.augmented.ruby"
        },
        {
            "match": "<=>|<(?!<|=)|>(?!<|=|>)|<=|>=|===|==|=~|!=|!~|(?<=[ \\t])\\?",
            "name": "keyword.operator.comparison.ruby"
        },
        {
            "match": "(?<!\\.)\\b(and|not|or)\\b(?![?!])",
            "name": "keyword.operator.logical.ruby"
        },
        {
            "comment": "Make sure this goes after assignment and comparison",
            "match": "(?<=^|[ \\t])!|&&|\\|\\||\\^",
            "name": "keyword.operator.logical.ruby"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.separator.method.ruby"
                }
            },
            "comment": "Safe navigation operator - Added in 2.3",
            "match": "(&\\.)\\s*(?![A-Z])"
        },
        {
            "match": "(%|&|\\*\\*|\\*|\\+|-|/)",
            "name": "keyword.operator.arithmetic.ruby"
        },
        {
            "match": "=",
            "name": "keyword.operator.assignment.ruby"
        },
        {
            "match": "\\||~|>>",
            "name": "keyword.operator.other.ruby"
        },
        {
            "match": ";",
            "name": "punctuation.separator.statement.ruby"
        },
        {
            "match": ",",
            "name": "punctuation.separator.object.ruby"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.separator.namespace.ruby"
                }
            },
            "comment": "Mark as namespace separator if double colons followed by capital letter",
            "match": "(::)\\s*(?=[A-Z])"
        },
        {
            "captures": {
                "1": {
                    "name": "punctuation.separator.method.ruby"
                }
            },
            "comment": "Mark as method separator if double colons not followed by capital letter",
            "match": "(\\.|::)\\s*(?![A-Z])"
        },
        {
            "comment": "Must come after method and constant separators to prefer double colons",
            "match": ":",
            "name": "punctuation.separator.other.ruby"
        },
        {
            "match": "\\{",
            "name": "punctuation.section.scope.begin.ruby"
        },
        {
            "match": "\\}",
            "name": "punctuation.section.scope.end.ruby"
        },
        {
            "match": "\\[",
            "name": "punctuation.section.array.begin.ruby"
        },
        {
            "match": "\\]",
            "name": "punctuation.section.array.end.ruby"
        },
        {
            "match": "\\(|\\)",
            "name": "punctuation.section.function.ruby"
        }
    ],
    "repository": {
        "escaped_char": {
            "match": "\\\\(?:[0-7]{1,3}|x[\\da-fA-F]{1,2}|.)",
            "name": "constant.character.escape.ruby"
        },
        "heredoc": {
            "begin": "^<<[-~]?\\w+",
            "end": "$",
            "patterns": [
                {
                    "include": "$self"
                }
            ]
        },
        "interpolated_ruby": {
            "patterns": [
                {
                    "begin": "#\\{",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.embedded.begin.ruby"
                        }
                    },
                    "contentName": "source.ruby",
                    "end": "(\\})",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.embedded.end.ruby"
                        },
                        "1": {
                            "name": "source.ruby"
                        }
                    },
                    "name": "meta.embedded.line.ruby",
                    "patterns": [
                        {
                            "include": "#nest_curly_and_self"
                        },
                        {
                            "include": "$self"
                        }
                    ],
                    "repository": {
                        "nest_curly_and_self": {
                            "patterns": [
                                {
                                    "begin": "\\{",
                                    "captures": {
                                        "0": {
                                            "name": "punctuation.section.scope.ruby"
                                        }
                                    },
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#nest_curly_and_self"
                                        }
                                    ]
                                },
                                {
                                    "include": "$self"
                                }
                            ]
                        }
                    }
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(#@)[a-zA-Z_]\\w*",
                    "name": "variable.other.readwrite.instance.ruby"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(#@@)[a-zA-Z_]\\w*",
                    "name": "variable.other.readwrite.class.ruby"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.variable.ruby"
                        }
                    },
                    "match": "(#\\$)[a-zA-Z_]\\w*",
                    "name": "variable.other.readwrite.global.ruby"
                }
            ]
        },
        "percent_literals": {
            "patterns": [
                {
                    "begin": "%i(?:([(\\[{<])|([^\\w\\s]|_))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.array.begin.ruby"
                        }
                    },
                    "end": "[)\\]}>]\\2|\\1\\2",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.array.end.ruby"
                        }
                    },
                    "name": "meta.array.symbol.ruby",
                    "patterns": [
                        {
                            "begin": "\\G(?<=\\()(?!\\))",
                            "end": "(?=\\))",
                            "patterns": [
                                {
                                    "include": "#parens"
                                },
                                {
                                    "include": "#symbol"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\[)(?!\\])",
                            "end": "(?=\\])",
                            "patterns": [
                                {
                                    "include": "#brackets"
                                },
                                {
                                    "include": "#symbol"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\{)(?!\\})",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#braces"
                                },
                                {
                                    "include": "#symbol"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=<)(?!>)",
                            "end": "(?=>)",
                            "patterns": [
                                {
                                    "include": "#angles"
                                },
                                {
                                    "include": "#symbol"
                                }
                            ]
                        },
                        {
                            "include": "#symbol"
                        }
                    ],
                    "repository": {
                        "angles": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\<|\\\\>",
                                    "name": "constant.other.symbol.ruby"
                                },
                                {
                                    "begin": "<",
                                    "captures": {
                                        "0": {
                                            "name": "constant.other.symbol.ruby"
                                        }
                                    },
                                    "end": ">",
                                    "patterns": [
                                        {
                                            "include": "#angles"
                                        },
                                        {
                                            "include": "#symbol"
                                        }
                                    ]
                                }
                            ]
                        },
                        "braces": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\\\{|\\\\\\}",
                                    "name": "constant.other.symbol.ruby"
                                },
                                {
                                    "begin": "\\{",
                                    "captures": {
                                        "0": {
                                            "name": "constant.other.symbol.ruby"
                                        }
                                    },
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#braces"
                                        },
                                        {
                                            "include": "#symbol"
                                        }
                                    ]
                                }
                            ]
                        },
                        "brackets": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\\\[|\\\\\\]",
                                    "name": "constant.other.symbol.ruby"
                                },
                                {
                                    "begin": "\\[",
                                    "captures": {
                                        "0": {
                                            "name": "constant.other.symbol.ruby"
                                        }
                                    },
                                    "end": "\\]",
                                    "patterns": [
                                        {
                                            "include": "#brackets"
                                        },
                                        {
                                            "include": "#symbol"
                                        }
                                    ]
                                }
                            ]
                        },
                        "parens": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\\\(|\\\\\\)",
                                    "name": "constant.other.symbol.ruby"
                                },
                                {
                                    "begin": "\\(",
                                    "captures": {
                                        "0": {
                                            "name": "constant.other.symbol.ruby"
                                        }
                                    },
                                    "end": "\\)",
                                    "patterns": [
                                        {
                                            "include": "#parens"
                                        },
                                        {
                                            "include": "#symbol"
                                        }
                                    ]
                                }
                            ]
                        },
                        "symbol": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\\\\\|\\\\[ ]",
                                    "name": "constant.other.symbol.ruby"
                                },
                                {
                                    "match": "\\S\\w*",
                                    "name": "constant.other.symbol.ruby"
                                }
                            ]
                        }
                    }
                },
                {
                    "begin": "%I(?:([(\\[{<])|([^\\w\\s]|_))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.array.begin.ruby"
                        }
                    },
                    "end": "[)\\]}>]\\2|\\1\\2",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.array.end.ruby"
                        }
                    },
                    "name": "meta.array.symbol.interpolated.ruby",
                    "patterns": [
                        {
                            "begin": "\\G(?<=\\()(?!\\))",
                            "end": "(?=\\))",
                            "patterns": [
                                {
                                    "include": "#parens"
                                },
                                {
                                    "include": "#symbol"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\[)(?!\\])",
                            "end": "(?=\\])",
                            "patterns": [
                                {
                                    "include": "#brackets"
                                },
                                {
                                    "include": "#symbol"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\{)(?!\\})",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#braces"
                                },
                                {
                                    "include": "#symbol"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=<)(?!>)",
                            "end": "(?=>)",
                            "patterns": [
                                {
                                    "include": "#angles"
                                },
                                {
                                    "include": "#symbol"
                                }
                            ]
                        },
                        {
                            "include": "#symbol"
                        }
                    ],
                    "repository": {
                        "angles": {
                            "patterns": [
                                {
                                    "begin": "<",
                                    "captures": {
                                        "0": {
                                            "name": "constant.other.symbol.ruby"
                                        }
                                    },
                                    "end": ">",
                                    "patterns": [
                                        {
                                            "include": "#angles"
                                        },
                                        {
                                            "include": "#symbol"
                                        }
                                    ]
                                }
                            ]
                        },
                        "braces": {
                            "patterns": [
                                {
                                    "begin": "\\{",
                                    "captures": {
                                        "0": {
                                            "name": "constant.other.symbol.ruby"
                                        }
                                    },
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#braces"
                                        },
                                        {
                                            "include": "#symbol"
                                        }
                                    ]
                                }
                            ]
                        },
                        "brackets": {
                            "patterns": [
                                {
                                    "begin": "\\[",
                                    "captures": {
                                        "0": {
                                            "name": "constant.other.symbol.ruby"
                                        }
                                    },
                                    "end": "\\]",
                                    "patterns": [
                                        {
                                            "include": "#brackets"
                                        },
                                        {
                                            "include": "#symbol"
                                        }
                                    ]
                                }
                            ]
                        },
                        "parens": {
                            "patterns": [
                                {
                                    "begin": "\\(",
                                    "captures": {
                                        "0": {
                                            "name": "constant.other.symbol.ruby"
                                        }
                                    },
                                    "end": "\\)",
                                    "patterns": [
                                        {
                                            "include": "#parens"
                                        },
                                        {
                                            "include": "#symbol"
                                        }
                                    ]
                                }
                            ]
                        },
                        "symbol": {
                            "patterns": [
                                {
                                    "begin": "(?=\\\\|#\\{)",
                                    "end": "(?!\\G)",
                                    "name": "constant.other.symbol.ruby",
                                    "patterns": [
                                        {
                                            "include": "#escaped_char"
                                        },
                                        {
                                            "include": "#interpolated_ruby"
                                        }
                                    ]
                                },
                                {
                                    "match": "\\S\\w*",
                                    "name": "constant.other.symbol.ruby"
                                }
                            ]
                        }
                    }
                },
                {
                    "begin": "%q(?:([(\\[{<])|([^\\w\\s]|_))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "end": "[)\\]}>]\\2|\\1\\2",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.quoted.other.ruby",
                    "patterns": [
                        {
                            "begin": "\\G(?<=\\()(?!\\))",
                            "end": "(?=\\))",
                            "patterns": [
                                {
                                    "include": "#parens"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\[)(?!\\])",
                            "end": "(?=\\])",
                            "patterns": [
                                {
                                    "include": "#brackets"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\{)(?!\\})",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#braces"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=<)(?!>)",
                            "end": "(?=>)",
                            "patterns": [
                                {
                                    "include": "#angles"
                                }
                            ]
                        }
                    ],
                    "repository": {
                        "angles": {
                            "patterns": [
                                {
                                    "match": "\\\\<|\\\\>|\\\\\\\\",
                                    "name": "constant.character.escape.ruby"
                                },
                                {
                                    "begin": "<",
                                    "end": ">",
                                    "patterns": [
                                        {
                                            "include": "#angles"
                                        }
                                    ]
                                }
                            ]
                        },
                        "braces": {
                            "patterns": [
                                {
                                    "match": "\\\\\\{|\\\\\\}|\\\\\\\\",
                                    "name": "constant.character.escape.ruby"
                                },
                                {
                                    "begin": "\\{",
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#braces"
                                        }
                                    ]
                                }
                            ]
                        },
                        "brackets": {
                            "patterns": [
                                {
                                    "match": "\\\\\\[|\\\\\\]|\\\\\\\\",
                                    "name": "constant.character.escape.ruby"
                                },
                                {
                                    "begin": "\\[",
                                    "end": "\\]",
                                    "patterns": [
                                        {
                                            "include": "#brackets"
                                        }
                                    ]
                                }
                            ]
                        },
                        "parens": {
                            "patterns": [
                                {
                                    "match": "\\\\\\(|\\\\\\)|\\\\\\\\",
                                    "name": "constant.character.escape.ruby"
                                },
                                {
                                    "begin": "\\(",
                                    "end": "\\)",
                                    "patterns": [
                                        {
                                            "include": "#parens"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "begin": "%Q?(?:([(\\[{<])|([^\\w\\s=]|_))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "end": "[)\\]}>]\\2|\\1\\2",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.quoted.other.interpolated.ruby",
                    "patterns": [
                        {
                            "begin": "\\G(?<=\\()(?!\\))",
                            "end": "(?=\\))",
                            "patterns": [
                                {
                                    "include": "#parens"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\[)(?!\\])",
                            "end": "(?=\\])",
                            "patterns": [
                                {
                                    "include": "#brackets"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\{)(?!\\})",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#braces"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=<)(?!>)",
                            "end": "(?=>)",
                            "patterns": [
                                {
                                    "include": "#angles"
                                }
                            ]
                        },
                        {
                            "include": "#escaped_char"
                        },
                        {
                            "include": "#interpolated_ruby"
                        }
                    ],
                    "repository": {
                        "angles": {
                            "patterns": [
                                {
                                    "include": "#escaped_char"
                                },
                                {
                                    "include": "#interpolated_ruby"
                                },
                                {
                                    "begin": "<",
                                    "end": ">",
                                    "patterns": [
                                        {
                                            "include": "#angles"
                                        }
                                    ]
                                }
                            ]
                        },
                        "braces": {
                            "patterns": [
                                {
                                    "include": "#escaped_char"
                                },
                                {
                                    "include": "#interpolated_ruby"
                                },
                                {
                                    "begin": "\\{",
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#braces"
                                        }
                                    ]
                                }
                            ]
                        },
                        "brackets": {
                            "patterns": [
                                {
                                    "include": "#escaped_char"
                                },
                                {
                                    "include": "#interpolated_ruby"
                                },
                                {
                                    "begin": "\\[",
                                    "end": "\\]",
                                    "patterns": [
                                        {
                                            "include": "#brackets"
                                        }
                                    ]
                                }
                            ]
                        },
                        "parens": {
                            "patterns": [
                                {
                                    "include": "#escaped_char"
                                },
                                {
                                    "include": "#interpolated_ruby"
                                },
                                {
                                    "begin": "\\(",
                                    "end": "\\)",
                                    "patterns": [
                                        {
                                            "include": "#parens"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "begin": "%r(?:([(\\[{<])|([^\\w\\s]|_))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "end": "([)\\]}>]\\2|\\1\\2)[eimnosux]*",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.regexp.percent.ruby",
                    "patterns": [
                        {
                            "begin": "\\G(?<=\\()(?!\\))",
                            "end": "(?=\\))",
                            "patterns": [
                                {
                                    "include": "#parens"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\[)(?!\\])",
                            "end": "(?=\\])",
                            "patterns": [
                                {
                                    "include": "#brackets"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\{)(?!\\})",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#braces"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=<)(?!>)",
                            "end": "(?=>)",
                            "patterns": [
                                {
                                    "include": "#angles"
                                }
                            ]
                        },
                        {
                            "include": "#regex_sub"
                        }
                    ],
                    "repository": {
                        "angles": {
                            "patterns": [
                                {
                                    "include": "#regex_sub"
                                },
                                {
                                    "begin": "<",
                                    "end": ">",
                                    "patterns": [
                                        {
                                            "include": "#angles"
                                        }
                                    ]
                                }
                            ]
                        },
                        "braces": {
                            "patterns": [
                                {
                                    "include": "#regex_sub"
                                },
                                {
                                    "begin": "\\{",
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#braces"
                                        }
                                    ]
                                }
                            ]
                        },
                        "brackets": {
                            "patterns": [
                                {
                                    "include": "#regex_sub"
                                },
                                {
                                    "begin": "\\[",
                                    "end": "\\]",
                                    "patterns": [
                                        {
                                            "include": "#brackets"
                                        }
                                    ]
                                }
                            ]
                        },
                        "parens": {
                            "patterns": [
                                {
                                    "include": "#regex_sub"
                                },
                                {
                                    "begin": "\\(",
                                    "end": "\\)",
                                    "patterns": [
                                        {
                                            "include": "#parens"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "begin": "%s(?:([(\\[{<])|([^\\w\\s]|_))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.constant.begin.ruby"
                        }
                    },
                    "end": "[)\\]}>]\\2|\\1\\2",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.constant.end.ruby"
                        }
                    },
                    "name": "constant.other.symbol.percent.ruby",
                    "patterns": [
                        {
                            "begin": "\\G(?<=\\()(?!\\))",
                            "end": "(?=\\))",
                            "patterns": [
                                {
                                    "include": "#parens"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\[)(?!\\])",
                            "end": "(?=\\])",
                            "patterns": [
                                {
                                    "include": "#brackets"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\{)(?!\\})",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#braces"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=<)(?!>)",
                            "end": "(?=>)",
                            "patterns": [
                                {
                                    "include": "#angles"
                                }
                            ]
                        }
                    ],
                    "repository": {
                        "angles": {
                            "patterns": [
                                {
                                    "match": "\\\\<|\\\\>|\\\\\\\\",
                                    "name": "constant.character.escape.ruby"
                                },
                                {
                                    "begin": "<",
                                    "end": ">",
                                    "patterns": [
                                        {
                                            "include": "#angles"
                                        }
                                    ]
                                }
                            ]
                        },
                        "braces": {
                            "patterns": [
                                {
                                    "match": "\\\\\\{|\\\\\\}|\\\\\\\\",
                                    "name": "constant.character.escape.ruby"
                                },
                                {
                                    "begin": "\\{",
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#braces"
                                        }
                                    ]
                                }
                            ]
                        },
                        "brackets": {
                            "patterns": [
                                {
                                    "match": "\\\\\\[|\\\\\\]|\\\\\\\\",
                                    "name": "constant.character.escape.ruby"
                                },
                                {
                                    "begin": "\\[",
                                    "end": "\\]",
                                    "patterns": [
                                        {
                                            "include": "#brackets"
                                        }
                                    ]
                                }
                            ]
                        },
                        "parens": {
                            "patterns": [
                                {
                                    "match": "\\\\\\(|\\\\\\)|\\\\\\\\",
                                    "name": "constant.character.escape.ruby"
                                },
                                {
                                    "begin": "\\(",
                                    "end": "\\)",
                                    "patterns": [
                                        {
                                            "include": "#parens"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                {
                    "begin": "%w(?:([(\\[{<])|([^\\w\\s]|_))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.array.begin.ruby"
                        }
                    },
                    "end": "[)\\]}>]\\2|\\1\\2",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.array.end.ruby"
                        }
                    },
                    "name": "meta.array.string.ruby",
                    "patterns": [
                        {
                            "begin": "\\G(?<=\\()(?!\\))",
                            "end": "(?=\\))",
                            "patterns": [
                                {
                                    "include": "#parens"
                                },
                                {
                                    "include": "#string"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\[)(?!\\])",
                            "end": "(?=\\])",
                            "patterns": [
                                {
                                    "include": "#brackets"
                                },
                                {
                                    "include": "#string"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\{)(?!\\})",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#braces"
                                },
                                {
                                    "include": "#string"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=<)(?!>)",
                            "end": "(?=>)",
                            "patterns": [
                                {
                                    "include": "#angles"
                                },
                                {
                                    "include": "#string"
                                }
                            ]
                        },
                        {
                            "include": "#string"
                        }
                    ],
                    "repository": {
                        "angles": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\<|\\\\>",
                                    "name": "string.other.ruby"
                                },
                                {
                                    "begin": "<",
                                    "captures": {
                                        "0": {
                                            "name": "string.other.ruby"
                                        }
                                    },
                                    "end": ">",
                                    "patterns": [
                                        {
                                            "include": "#angles"
                                        },
                                        {
                                            "include": "#string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "braces": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\\\{|\\\\\\}",
                                    "name": "string.other.ruby"
                                },
                                {
                                    "begin": "\\{",
                                    "captures": {
                                        "0": {
                                            "name": "string.other.ruby"
                                        }
                                    },
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#braces"
                                        },
                                        {
                                            "include": "#string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "brackets": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\\\[|\\\\\\]",
                                    "name": "string.other.ruby"
                                },
                                {
                                    "begin": "\\[",
                                    "captures": {
                                        "0": {
                                            "name": "string.other.ruby"
                                        }
                                    },
                                    "end": "\\]",
                                    "patterns": [
                                        {
                                            "include": "#brackets"
                                        },
                                        {
                                            "include": "#string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "parens": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\\\(|\\\\\\)",
                                    "name": "string.other.ruby"
                                },
                                {
                                    "begin": "\\(",
                                    "captures": {
                                        "0": {
                                            "name": "string.other.ruby"
                                        }
                                    },
                                    "end": "\\)",
                                    "patterns": [
                                        {
                                            "include": "#parens"
                                        },
                                        {
                                            "include": "#string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "string": {
                            "patterns": [
                                {
                                    "captures": {
                                        "0": {
                                            "name": "constant.character.escape.ruby"
                                        }
                                    },
                                    "match": "\\\\\\\\|\\\\[ ]",
                                    "name": "string.other.ruby"
                                },
                                {
                                    "match": "\\S\\w*",
                                    "name": "string.other.ruby"
                                }
                            ]
                        }
                    }
                },
                {
                    "begin": "%W(?:([(\\[{<])|([^\\w\\s]|_))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.section.array.begin.ruby"
                        }
                    },
                    "end": "[)\\]}>]\\2|\\1\\2",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.section.array.end.ruby"
                        }
                    },
                    "name": "meta.array.string.interpolated.ruby",
                    "patterns": [
                        {
                            "begin": "\\G(?<=\\()(?!\\))",
                            "end": "(?=\\))",
                            "patterns": [
                                {
                                    "include": "#parens"
                                },
                                {
                                    "include": "#string"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\[)(?!\\])",
                            "end": "(?=\\])",
                            "patterns": [
                                {
                                    "include": "#brackets"
                                },
                                {
                                    "include": "#string"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\{)(?!\\})",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#braces"
                                },
                                {
                                    "include": "#string"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=<)(?!>)",
                            "end": "(?=>)",
                            "patterns": [
                                {
                                    "include": "#angles"
                                },
                                {
                                    "include": "#string"
                                }
                            ]
                        },
                        {
                            "include": "#string"
                        }
                    ],
                    "repository": {
                        "angles": {
                            "patterns": [
                                {
                                    "begin": "<",
                                    "captures": {
                                        "0": {
                                            "name": "string.other.ruby"
                                        }
                                    },
                                    "end": ">",
                                    "patterns": [
                                        {
                                            "include": "#angles"
                                        },
                                        {
                                            "include": "#string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "braces": {
                            "patterns": [
                                {
                                    "begin": "\\{",
                                    "captures": {
                                        "0": {
                                            "name": "string.other.ruby"
                                        }
                                    },
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#braces"
                                        },
                                        {
                                            "include": "#string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "brackets": {
                            "patterns": [
                                {
                                    "begin": "\\[",
                                    "captures": {
                                        "0": {
                                            "name": "string.other.ruby"
                                        }
                                    },
                                    "end": "\\]",
                                    "patterns": [
                                        {
                                            "include": "#brackets"
                                        },
                                        {
                                            "include": "#string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "parens": {
                            "patterns": [
                                {
                                    "begin": "\\(",
                                    "captures": {
                                        "0": {
                                            "name": "string.other.ruby"
                                        }
                                    },
                                    "end": "\\)",
                                    "patterns": [
                                        {
                                            "include": "#parens"
                                        },
                                        {
                                            "include": "#string"
                                        }
                                    ]
                                }
                            ]
                        },
                        "string": {
                            "patterns": [
                                {
                                    "begin": "(?=\\\\|#\\{)",
                                    "end": "(?!\\G)",
                                    "name": "string.other.ruby",
                                    "patterns": [
                                        {
                                            "include": "#escaped_char"
                                        },
                                        {
                                            "include": "#interpolated_ruby"
                                        }
                                    ]
                                },
                                {
                                    "match": "\\S\\w*",
                                    "name": "string.other.ruby"
                                }
                            ]
                        }
                    }
                },
                {
                    "begin": "%x(?:([(\\[{<])|([^\\w\\s]|_))",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.begin.ruby"
                        }
                    },
                    "end": "[)\\]}>]\\2|\\1\\2",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.string.end.ruby"
                        }
                    },
                    "name": "string.interpolated.percent.ruby",
                    "patterns": [
                        {
                            "begin": "\\G(?<=\\()(?!\\))",
                            "end": "(?=\\))",
                            "patterns": [
                                {
                                    "include": "#parens"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\[)(?!\\])",
                            "end": "(?=\\])",
                            "patterns": [
                                {
                                    "include": "#brackets"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=\\{)(?!\\})",
                            "end": "(?=\\})",
                            "patterns": [
                                {
                                    "include": "#braces"
                                }
                            ]
                        },
                        {
                            "begin": "\\G(?<=<)(?!>)",
                            "end": "(?=>)",
                            "patterns": [
                                {
                                    "include": "#angles"
                                }
                            ]
                        },
                        {
                            "include": "#escaped_char"
                        },
                        {
                            "include": "#interpolated_ruby"
                        }
                    ],
                    "repository": {
                        "angles": {
                            "patterns": [
                                {
                                    "include": "#escaped_char"
                                },
                                {
                                    "include": "#interpolated_ruby"
                                },
                                {
                                    "begin": "<",
                                    "end": ">",
                                    "patterns": [
                                        {
                                            "include": "#angles"
                                        }
                                    ]
                                }
                            ]
                        },
                        "braces": {
                            "patterns": [
                                {
                                    "include": "#escaped_char"
                                },
                                {
                                    "include": "#interpolated_ruby"
                                },
                                {
                                    "begin": "\\{",
                                    "end": "\\}",
                                    "patterns": [
                                        {
                                            "include": "#braces"
                                        }
                                    ]
                                }
                            ]
                        },
                        "brackets": {
                            "patterns": [
                                {
                                    "include": "#escaped_char"
                                },
                                {
                                    "include": "#interpolated_ruby"
                                },
                                {
                                    "begin": "\\[",
                                    "end": "\\]",
                                    "patterns": [
                                        {
                                            "include": "#brackets"
                                        }
                                    ]
                                }
                            ]
                        },
                        "parens": {
                            "patterns": [
                                {
                                    "include": "#escaped_char"
                                },
                                {
                                    "include": "#interpolated_ruby"
                                },
                                {
                                    "begin": "\\(",
                                    "end": "\\)",
                                    "patterns": [
                                        {
                                            "include": "#parens"
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                }
            ]
        },
        "regex_sub": {
            "patterns": [
                {
                    "include": "#interpolated_ruby"
                },
                {
                    "include": "#escaped_char"
                },
                {
                    "captures": {
                        "1": {
                            "name": "punctuation.definition.quantifier.begin.ruby"
                        },
                        "3": {
                            "name": "punctuation.definition.quantifier.end.ruby"
                        }
                    },
                    "match": "(\\{)\\d+(,\\d+)?(\\})",
                    "name": "keyword.operator.quantifier.ruby"
                },
                {
                    "begin": "\\[\\^?",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.character-class.begin.ruby"
                        }
                    },
                    "end": "\\]",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.character-class.end.ruby"
                        }
                    },
                    "name": "constant.other.character-class.set.ruby",
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                },
                {
                    "begin": "\\(\\?#",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.begin.ruby"
                        }
                    },
                    "end": "\\)",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.definition.comment.end.ruby"
                        }
                    },
                    "name": "comment.line.number-sign.ruby",
                    "patterns": [
                        {
                            "include": "#escaped_char"
                        }
                    ]
                },
                {
                    "begin": "\\(",
                    "captures": {
                        "0": {
                            "name": "punctuation.definition.group.ruby"
                        }
                    },
                    "end": "\\)",
                    "name": "meta.group.regexp.ruby",
                    "patterns": [
                        {
                            "include": "#regex_sub"
                        }
                    ]
                },
                {
                    "begin": "(?<=^|\\s)(#)\\s(?=[[a-zA-Z0-9,. \\t?!-][^\\x{00}-\\x{7F}]]*$)",
                    "beginCaptures": {
                        "1": {
                            "name": "punctuation.definition.comment.ruby"
                        }
                    },
                    "comment":
                        "We are restrictive in what we allow to go after the comment character to avoid false positives, since the availability of comments depend on regexp flags.",
                    "end": "$\\n?",
                    "name": "comment.line.number-sign.ruby"
                }
            ]
        }
    }
}
